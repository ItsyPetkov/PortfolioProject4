<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <DatagraphCoreV1 />
    <_.fcp.DatagraphNodeAxisTitle.true...DatagraphNodeAxisTitle />
    <DatagraphNodeSingleValueFieldV1 />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Metrics' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
        <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
        <members>
          <member value='&quot;Overall Rating&quot;' />
          <member value='&quot;Cabin Staff Service&quot;' />
          <member value='&quot;Entertainment&quot;' />
          <member value='&quot;Food&quot;' />
          <member value='&quot;Ground Service&quot;' />
          <member value='&quot;Seat Comfort&quot;' />
          <member value='&quot;Value&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='ba_reviews_cleaned+' inline='true' name='federated.16tbb030gfzxgf12p4hjd0uysdtn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ba_reviews_cleaned' name='textscan.1wn44601q0dg7610ghkax1hrca6c'>
            <connection class='textscan' directory='C:/Users/Hristo/Downloads/archive(2)' filename='ba_reviews_cleaned.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.1wn44601q0dg7610ghkax1hrca6c' name='ba_reviews_cleaned.csv' table='[ba_reviews_cleaned#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='header' ordinal='0' />
              <column datatype='string' name='author' ordinal='1' />
              <column datatype='date' name='date' ordinal='2' />
              <column datatype='string' name='place' ordinal='3' />
              <column datatype='string' name='content' ordinal='4' />
              <column datatype='string' name='aircraft' ordinal='5' />
              <column datatype='string' name='traveller_type' ordinal='6' />
              <column datatype='string' name='seat_type' ordinal='7' />
              <column datatype='string' name='route' ordinal='8' />
              <column datatype='date' name='date_flown' ordinal='9' />
              <column datatype='string' name='recommended' ordinal='10' />
              <column datatype='string' name='trip_verified' ordinal='11' />
              <column datatype='integer' name='rating' ordinal='12' />
              <column datatype='integer' name='seat_comfort' ordinal='13' />
              <column datatype='integer' name='cabin_staff_service' ordinal='14' />
              <column datatype='integer' name='food_beverages' ordinal='15' />
              <column datatype='integer' name='ground_service' ordinal='16' />
              <column datatype='integer' name='value_for_money' ordinal='17' />
              <column datatype='integer' name='entertainment' ordinal='18' />
            </columns>
          </relation>
          <relation connection='textscan.1wn44601q0dg7610ghkax1hrca6c' name='Countries_cleaned.csv' table='[Countries_cleaned#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='country' ordinal='0' />
              <column datatype='string' name='code' ordinal='1' />
              <column datatype='string' name='continent' ordinal='2' />
              <column datatype='string' name='region' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Countries_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>header</remote-name>
            <remote-type>129</remote-type>
            <local-name>[header]</local-name>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias>header</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>author</remote-name>
            <remote-type>129</remote-type>
            <local-name>[author]</local-name>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias>author</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place]</local-name>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias>place</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>content</remote-name>
            <remote-type>129</remote-type>
            <local-name>[content]</local-name>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias>content</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aircraft</remote-name>
            <remote-type>129</remote-type>
            <local-name>[aircraft]</local-name>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias>aircraft</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>traveller_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[traveller_type]</local-name>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias>traveller_type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seat_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[seat_type]</local-name>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias>seat_type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_flown</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_flown]</local-name>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias>date_flown</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recommended</remote-name>
            <remote-type>129</remote-type>
            <local-name>[recommended]</local-name>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias>recommended</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_verified</remote-name>
            <remote-type>129</remote-type>
            <local-name>[trip_verified]</local-name>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias>trip_verified</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seat_comfort</remote-name>
            <remote-type>20</remote-type>
            <local-name>[seat_comfort]</local-name>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias>seat_comfort</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cabin_staff_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cabin_staff_service]</local-name>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias>cabin_staff_service</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>food_beverages</remote-name>
            <remote-type>20</remote-type>
            <local-name>[food_beverages]</local-name>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias>food_beverages</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ground_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ground_service]</local-name>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias>ground_service</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value_for_money</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value_for_money]</local-name>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias>value_for_money</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>entertainment</remote-name>
            <remote-type>20</remote-type>
            <local-name>[entertainment]</local-name>
            <parent-name>[ba_reviews_cleaned.csv]</parent-name>
            <remote-alias>entertainment</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Countries_cleaned.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Countries_cleaned.csv_8FE1742CB9FB44E3A7D7A27DDFCAD847]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[Countries_cleaned.csv]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Countries_cleaned.csv_8FE1742CB9FB44E3A7D7A27DDFCAD847]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Countries_cleaned.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Countries_cleaned.csv_8FE1742CB9FB44E3A7D7A27DDFCAD847]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[Countries_cleaned.csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Countries_cleaned.csv_8FE1742CB9FB44E3A7D7A27DDFCAD847]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
          <bin default-name='false' value='&quot;Various&quot;'>
            <value>&quot;777&quot;</value>
            <value>&quot;777-300 and A320&quot;</value>
            <value>&quot;787&quot;</value>
            <value>&quot;A19&quot;</value>
            <value>&quot;A219&quot;</value>
            <value>&quot;A230&quot;</value>
            <value>&quot;A318&quot;</value>
            <value>&quot;A319 / A380 / Boeing 737&quot;</value>
            <value>&quot;A319 / Boeing 747&quot;</value>
            <value>&quot;A319 / Boeing 747-400&quot;</value>
            <value>&quot;A319 / Boeing 777&quot;</value>
            <value>&quot;A319 / Boeing 787-8&quot;</value>
            <value>&quot;A319 / Boeing 787-9&quot;</value>
            <value>&quot;A319 / Boeing 789&quot;</value>
            <value>&quot;A319 / Boeing777&quot;</value>
            <value>&quot;A319/320&quot;</value>
            <value>&quot;A319/A320&quot;</value>
            <value>&quot;A320 / Boeing 747-400&quot;</value>
            <value>&quot;A320 / Boeing 767&quot;</value>
            <value>&quot;A320 / Boeing 777&quot;</value>
            <value>&quot;A320 / Boeing 777-200&quot;</value>
            <value>&quot;A320 / Boeing 787&quot;</value>
            <value>&quot;A320 / Boeing 787-9&quot;</value>
            <value>&quot;A320 A350&quot;</value>
            <value>&quot;A320 Finnair&quot;</value>
            <value>&quot;A320 neo&quot;</value>
            <value>&quot;A320 Neo&quot;</value>
            <value>&quot;A320-200&quot;</value>
            <value>&quot;A320-233&quot;</value>
            <value>&quot;A320, A380&quot;</value>
            <value>&quot;A320, Boeing 787&quot;</value>
            <value>&quot;A320/319&quot;</value>
            <value>&quot;A320/A319&quot;</value>
            <value>&quot;A320/B788&quot;</value>
            <value>&quot;A320neo&quot;</value>
            <value>&quot;A320Neo&quot;</value>
            <value>&quot;A320NEO&quot;</value>
            <value>&quot;A321 / Boeing 747-400&quot;</value>
            <value>&quot;A321 / Boeing 777&quot;</value>
            <value>&quot;A321 / Boeing 777-300&quot;</value>
            <value>&quot;A321 / Boeing 787-9&quot;</value>
            <value>&quot;A321 neo&quot;</value>
            <value>&quot;A321 Neo&quot;</value>
            <value>&quot;A321-200&quot;</value>
            <value>&quot;A321-neo&quot;</value>
            <value>&quot;A321neo&quot;</value>
            <value>&quot;A321Neo&quot;</value>
            <value>&quot;A321NEO&quot;</value>
            <value>&quot;A322&quot;</value>
            <value>&quot;A330&quot;</value>
            <value>&quot;A340-300&quot;</value>
            <value>&quot;A340-300, A320&quot;</value>
            <value>&quot;A350&quot;</value>
            <value>&quot;A350-1000&quot;</value>
            <value>&quot;A380 / A319&quot;</value>
            <value>&quot;A380 / A320&quot;</value>
            <value>&quot;A380 / Boeing 747-400&quot;</value>
            <value>&quot;A380 / Boeing 777&quot;</value>
            <value>&quot;A380 and 747&quot;</value>
            <value>&quot;A380 and Boeing 747&quot;</value>
            <value>&quot;A380 and Boeing 767&quot;</value>
            <value>&quot;A380 and Boeing 777&quot;</value>
            <value>&quot;A380-800&quot;</value>
            <value>&quot;A380/A320&quot;</value>
            <value>&quot;Airbus A32&quot;</value>
            <value>&quot;Airbus A320&quot;</value>
            <value>&quot;B737-400 / A380 / A319&quot;</value>
            <value>&quot;B747-400&quot;</value>
            <value>&quot;B747-400 in retro&quot;</value>
            <value>&quot;B777&quot;</value>
            <value>&quot;B777-200&quot;</value>
            <value>&quot;B777-300ER / A320 / A380&quot;</value>
            <value>&quot;Boeing 737&quot;</value>
            <value>&quot;Boeing 737 800&quot;</value>
            <value>&quot;Boeing 737-800&quot;</value>
            <value>&quot;Boeing 744&quot;</value>
            <value>&quot;Boeing 747 / 777&quot;</value>
            <value>&quot;Boeing 747 / A320&quot;</value>
            <value>&quot;Boeing 747 / A380&quot;</value>
            <value>&quot;Boeing 747 &amp; A319&quot;</value>
            <value>&quot;Boeing 747 400&quot;</value>
            <value>&quot;Boeing 747 and Boeing 777&quot;</value>
            <value>&quot;Boeing 747-400 / 777&quot;</value>
            <value>&quot;Boeing 747-400 / 777-200&quot;</value>
            <value>&quot;Boeing 747-400 / A319&quot;</value>
            <value>&quot;Boeing 747-400 / A320&quot;</value>
            <value>&quot;Boeing 747-400 / A380&quot;</value>
            <value>&quot;Boeing 747-400 /A380&quot;</value>
            <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
            <value>&quot;Boeing 757&quot;</value>
            <value>&quot;Boeing 767&quot;</value>
            <value>&quot;Boeing 767-300&quot;</value>
            <value>&quot;Boeing 767, A319&quot;</value>
            <value>&quot;Boeing 777 - 200&quot;</value>
            <value>&quot;Boeing 777 -200&quot;</value>
            <value>&quot;Boeing 777 / 747&quot;</value>
            <value>&quot;Boeing 777 / A320&quot;</value>
            <value>&quot;Boeing 777 / A380&quot;</value>
            <value>&quot;Boeing 777 200&quot;</value>
            <value>&quot;Boeing 777 200/300&quot;</value>
            <value>&quot;Boeing 777 and Boeing 787&quot;</value>
            <value>&quot;Boeing 777-200 / 747-400&quot;</value>
            <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
            <value>&quot;Boeing 777-200 and A319&quot;</value>
            <value>&quot;Boeing 777-200 ER&quot;</value>
            <value>&quot;Boeing 777-200/300&quot;</value>
            <value>&quot;Boeing 777-200ER&quot;</value>
            <value>&quot;Boeing 777-236 ER&quot;</value>
            <value>&quot;Boeing 777-300&quot;</value>
            <value>&quot;Boeing 777-300 / A380&quot;</value>
            <value>&quot;Boeing 777-300ER&quot;</value>
            <value>&quot;Boeing 777-300ER / A320&quot;</value>
            <value>&quot;Boeing 787 / A320&quot;</value>
            <value>&quot;Boeing 787 Dreamliner&quot;</value>
            <value>&quot;Boeing 787-10&quot;</value>
            <value>&quot;Boeing 787-8&quot;</value>
            <value>&quot;Boeing 787-8 / 787-9&quot;</value>
            <value>&quot;Boeing 787-800&quot;</value>
            <value>&quot;Boeing 787-9&quot;</value>
            <value>&quot;Boeing 787-9 / 777&quot;</value>
            <value>&quot;Boeing 787-9 / A319&quot;</value>
            <value>&quot;Boeing 787-9 / A380-800&quot;</value>
            <value>&quot;Boeing 787-9, A320-200&quot;</value>
            <value>&quot;Boeing 787-9, A380&quot;</value>
            <value>&quot;Boeing 787-900&quot;</value>
            <value>&quot;Boeing 787(9)&quot;</value>
            <value>&quot;Boeing-á777&quot;</value>
            <value>&quot;Boieng 777-200&quot;</value>
            <value>&quot;Dreamliner&quot;</value>
            <value>&quot;E-190&quot;</value>
            <value>&quot;E170 / A319&quot;</value>
            <value>&quot;E190&quot;</value>
            <value>&quot;EMB190&quot;</value>
            <value>&quot;Embraer&quot;</value>
            <value>&quot;Embraer 170&quot;</value>
            <value>&quot;Embraer 190&quot;</value>
            <value>&quot;Embraer 195&quot;</value>
            <value>&quot;Embraer-190&quot;</value>
            <value>&quot;SAAB 2000&quot;</value>
            <value>&quot;Various&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Metric Selected' datatype='integer' name='[Calculation_3999477976325632000]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Overall Rating&apos; THEN [rating]&#13;&#10;WHEN &apos;Cabin Staff Service&apos; THEN [cabin_staff_service]&#13;&#10;WHEN &apos;Entertainment&apos; THEN [entertainment]&#13;&#10;WHEN &apos;Food&apos; THEN [food_beverages]&#13;&#10;WHEN &apos;Ground Service&apos; THEN [ground_service]&#13;&#10;WHEN &apos;Seat Comfort&apos; THEN [ground_service]&#13;&#10;WHEN &apos;Value&apos; THEN [value_for_money]&#13;&#10;END' />
      </column>
      <column caption='Countries_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[Countries_cleaned.csv_8FE1742CB9FB44E3A7D7A27DDFCAD847]' role='measure' type='quantitative' />
      <column caption='ba_reviews_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]' role='measure' type='quantitative' />
      <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
      <column caption='Author' datatype='string' name='[author]' role='dimension' type='nominal' />
      <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
      <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
      <column caption='Content' datatype='string' name='[content]' role='dimension' type='nominal' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Flown' datatype='date' name='[date_flown]' role='dimension' type='ordinal' />
      <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
      <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
      <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
      <column caption='Header' datatype='string' name='[header]' role='dimension' type='nominal' />
      <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Recommended' datatype='string' name='[recommended]' role='dimension' type='nominal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
      <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
      <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
      <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      <column caption='Trip Verified' datatype='string' name='[trip_verified]' role='dimension' type='nominal' />
      <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
      <group caption='Action (Place)' hidden='true' name='[Action (Place)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[place]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Hristo/AppData/Local/Temp/TableauTemp/#TableauTemp_0mu2c6n1rgb1g51fdrpyl1yfp66w.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/03/2025 06:56:49 PM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F' table='[Extract].[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]' type='table' />
            <relation name='Countries_cleaned.csv_8FE1742CB9FB44E3A7D7A27DDFCAD847' table='[Extract].[Countries_cleaned.csv_8FE1742CB9FB44E3A7D7A27DDFCAD847]' type='table' />
          </relation>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>header</remote-name>
              <remote-type>129</remote-type>
              <local-name>[header]</local-name>
              <parent-name>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</parent-name>
              <remote-alias>header</remote-alias>
              <ordinal>0</ordinal>
              <family>ba_reviews_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1211</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>author</remote-name>
              <remote-type>129</remote-type>
              <local-name>[author]</local-name>
              <parent-name>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</parent-name>
              <remote-alias>author</remote-alias>
              <ordinal>1</ordinal>
              <family>ba_reviews_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>754</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>ba_reviews_cleaned.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1323</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>place</remote-name>
              <remote-type>129</remote-type>
              <local-name>[place]</local-name>
              <parent-name>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</parent-name>
              <remote-alias>place</remote-alias>
              <ordinal>3</ordinal>
              <family>ba_reviews_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>content</remote-name>
              <remote-type>129</remote-type>
              <local-name>[content]</local-name>
              <parent-name>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</parent-name>
              <remote-alias>content</remote-alias>
              <ordinal>4</ordinal>
              <family>ba_reviews_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1323</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>aircraft</remote-name>
              <remote-type>129</remote-type>
              <local-name>[aircraft]</local-name>
              <parent-name>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</parent-name>
              <remote-alias>aircraft</remote-alias>
              <ordinal>5</ordinal>
              <family>ba_reviews_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>141</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>traveller_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[traveller_type]</local-name>
              <parent-name>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</parent-name>
              <remote-alias>traveller_type</remote-alias>
              <ordinal>6</ordinal>
              <family>ba_reviews_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seat_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[seat_type]</local-name>
              <parent-name>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</parent-name>
              <remote-alias>seat_type</remote-alias>
              <ordinal>7</ordinal>
              <family>ba_reviews_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>route</remote-name>
              <remote-type>129</remote-type>
              <local-name>[route]</local-name>
              <parent-name>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</parent-name>
              <remote-alias>route</remote-alias>
              <ordinal>8</ordinal>
              <family>ba_reviews_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>724</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date_flown</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date_flown]</local-name>
              <parent-name>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</parent-name>
              <remote-alias>date_flown</remote-alias>
              <ordinal>9</ordinal>
              <family>ba_reviews_cleaned.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1323</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>recommended</remote-name>
              <remote-type>129</remote-type>
              <local-name>[recommended]</local-name>
              <parent-name>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</parent-name>
              <remote-alias>recommended</remote-alias>
              <ordinal>10</ordinal>
              <family>ba_reviews_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_verified</remote-name>
              <remote-type>129</remote-type>
              <local-name>[trip_verified]</local-name>
              <parent-name>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</parent-name>
              <remote-alias>trip_verified</remote-alias>
              <ordinal>11</ordinal>
              <family>ba_reviews_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rating</remote-name>
              <remote-type>20</remote-type>
              <local-name>[rating]</local-name>
              <parent-name>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</parent-name>
              <remote-alias>rating</remote-alias>
              <ordinal>12</ordinal>
              <family>ba_reviews_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seat_comfort</remote-name>
              <remote-type>20</remote-type>
              <local-name>[seat_comfort]</local-name>
              <parent-name>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</parent-name>
              <remote-alias>seat_comfort</remote-alias>
              <ordinal>13</ordinal>
              <family>ba_reviews_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cabin_staff_service</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cabin_staff_service]</local-name>
              <parent-name>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</parent-name>
              <remote-alias>cabin_staff_service</remote-alias>
              <ordinal>14</ordinal>
              <family>ba_reviews_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>food_beverages</remote-name>
              <remote-type>20</remote-type>
              <local-name>[food_beverages]</local-name>
              <parent-name>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</parent-name>
              <remote-alias>food_beverages</remote-alias>
              <ordinal>15</ordinal>
              <family>ba_reviews_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ground_service</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ground_service]</local-name>
              <parent-name>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</parent-name>
              <remote-alias>ground_service</remote-alias>
              <ordinal>16</ordinal>
              <family>ba_reviews_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>value_for_money</remote-name>
              <remote-type>20</remote-type>
              <local-name>[value_for_money]</local-name>
              <parent-name>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</parent-name>
              <remote-alias>value_for_money</remote-alias>
              <ordinal>17</ordinal>
              <family>ba_reviews_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>entertainment</remote-name>
              <remote-type>20</remote-type>
              <local-name>[entertainment]</local-name>
              <parent-name>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</parent-name>
              <remote-alias>entertainment</remote-alias>
              <ordinal>18</ordinal>
              <family>ba_reviews_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Countries_cleaned.csv_8FE1742CB9FB44E3A7D7A27DDFCAD847]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>19</ordinal>
              <family>Countries_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>250</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Countries_cleaned.csv_8FE1742CB9FB44E3A7D7A27DDFCAD847]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[code]</local-name>
              <parent-name>[Countries_cleaned.csv_8FE1742CB9FB44E3A7D7A27DDFCAD847]</parent-name>
              <remote-alias>code</remote-alias>
              <ordinal>20</ordinal>
              <family>Countries_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>249</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Countries_cleaned.csv_8FE1742CB9FB44E3A7D7A27DDFCAD847]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Countries_cleaned.csv_8FE1742CB9FB44E3A7D7A27DDFCAD847]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>21</ordinal>
              <family>Countries_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Countries_cleaned.csv_8FE1742CB9FB44E3A7D7A27DDFCAD847]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region]</local-name>
              <parent-name>[Countries_cleaned.csv_8FE1742CB9FB44E3A7D7A27DDFCAD847]</parent-name>
              <remote-alias>region</remote-alias>
              <ordinal>22</ordinal>
              <family>Countries_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Countries_cleaned.csv_8FE1742CB9FB44E3A7D7A27DDFCAD847]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Metrics' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
          <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Countries_cleaned.csv' id='Countries_cleaned.csv_8FE1742CB9FB44E3A7D7A27DDFCAD847'>
            <properties context=''>
              <relation connection='textscan.1wn44601q0dg7610ghkax1hrca6c' name='Countries_cleaned.csv' table='[Countries_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='string' name='code' ordinal='1' />
                  <column datatype='string' name='continent' ordinal='2' />
                  <column datatype='string' name='region' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Countries_cleaned.csv_8FE1742CB9FB44E3A7D7A27DDFCAD847' table='[Extract].[Countries_cleaned.csv_8FE1742CB9FB44E3A7D7A27DDFCAD847]' type='table' />
            </properties>
          </object>
          <object caption='ba_reviews_cleaned.csv' id='ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F'>
            <properties context=''>
              <relation connection='textscan.1wn44601q0dg7610ghkax1hrca6c' name='ba_reviews_cleaned.csv' table='[ba_reviews_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='header' ordinal='0' />
                  <column datatype='string' name='author' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='string' name='place' ordinal='3' />
                  <column datatype='string' name='content' ordinal='4' />
                  <column datatype='string' name='aircraft' ordinal='5' />
                  <column datatype='string' name='traveller_type' ordinal='6' />
                  <column datatype='string' name='seat_type' ordinal='7' />
                  <column datatype='string' name='route' ordinal='8' />
                  <column datatype='date' name='date_flown' ordinal='9' />
                  <column datatype='string' name='recommended' ordinal='10' />
                  <column datatype='string' name='trip_verified' ordinal='11' />
                  <column datatype='integer' name='rating' ordinal='12' />
                  <column datatype='integer' name='seat_comfort' ordinal='13' />
                  <column datatype='integer' name='cabin_staff_service' ordinal='14' />
                  <column datatype='integer' name='food_beverages' ordinal='15' />
                  <column datatype='integer' name='ground_service' ordinal='16' />
                  <column datatype='integer' name='value_for_money' ordinal='17' />
                  <column datatype='integer' name='entertainment' ordinal='18' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F' table='[Extract].[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[place]' />
              <expression op='[country]' />
            </expression>
            <first-end-point object-id='ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F' />
            <second-end-point object-id='Countries_cleaned.csv_8FE1742CB9FB44E3A7D7A27DDFCAD847' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.16tbb030gfzxgf12p4hjd0uysdtn'>
      <datasources>
        <datasource caption='ba_reviews_cleaned+' name='federated.16tbb030gfzxgf12p4hjd0uysdtn' />
      </datasources>
      <datasource-dependencies datasource='federated.16tbb030gfzxgf12p4hjd0uysdtn'>
        <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
            <bin default-name='false' value='&quot;Various&quot;'>
              <value>&quot;777&quot;</value>
              <value>&quot;777-300 and A320&quot;</value>
              <value>&quot;787&quot;</value>
              <value>&quot;A19&quot;</value>
              <value>&quot;A219&quot;</value>
              <value>&quot;A230&quot;</value>
              <value>&quot;A318&quot;</value>
              <value>&quot;A319 / A380 / Boeing 737&quot;</value>
              <value>&quot;A319 / Boeing 747&quot;</value>
              <value>&quot;A319 / Boeing 747-400&quot;</value>
              <value>&quot;A319 / Boeing 777&quot;</value>
              <value>&quot;A319 / Boeing 787-8&quot;</value>
              <value>&quot;A319 / Boeing 787-9&quot;</value>
              <value>&quot;A319 / Boeing 789&quot;</value>
              <value>&quot;A319 / Boeing777&quot;</value>
              <value>&quot;A319/320&quot;</value>
              <value>&quot;A319/A320&quot;</value>
              <value>&quot;A320 / Boeing 747-400&quot;</value>
              <value>&quot;A320 / Boeing 767&quot;</value>
              <value>&quot;A320 / Boeing 777&quot;</value>
              <value>&quot;A320 / Boeing 777-200&quot;</value>
              <value>&quot;A320 / Boeing 787&quot;</value>
              <value>&quot;A320 / Boeing 787-9&quot;</value>
              <value>&quot;A320 A350&quot;</value>
              <value>&quot;A320 Finnair&quot;</value>
              <value>&quot;A320 neo&quot;</value>
              <value>&quot;A320 Neo&quot;</value>
              <value>&quot;A320-200&quot;</value>
              <value>&quot;A320-233&quot;</value>
              <value>&quot;A320, A380&quot;</value>
              <value>&quot;A320, Boeing 787&quot;</value>
              <value>&quot;A320/319&quot;</value>
              <value>&quot;A320/A319&quot;</value>
              <value>&quot;A320/B788&quot;</value>
              <value>&quot;A320neo&quot;</value>
              <value>&quot;A320Neo&quot;</value>
              <value>&quot;A320NEO&quot;</value>
              <value>&quot;A321 / Boeing 747-400&quot;</value>
              <value>&quot;A321 / Boeing 777&quot;</value>
              <value>&quot;A321 / Boeing 777-300&quot;</value>
              <value>&quot;A321 / Boeing 787-9&quot;</value>
              <value>&quot;A321 neo&quot;</value>
              <value>&quot;A321 Neo&quot;</value>
              <value>&quot;A321-200&quot;</value>
              <value>&quot;A321-neo&quot;</value>
              <value>&quot;A321neo&quot;</value>
              <value>&quot;A321Neo&quot;</value>
              <value>&quot;A321NEO&quot;</value>
              <value>&quot;A322&quot;</value>
              <value>&quot;A330&quot;</value>
              <value>&quot;A340-300&quot;</value>
              <value>&quot;A340-300, A320&quot;</value>
              <value>&quot;A350&quot;</value>
              <value>&quot;A350-1000&quot;</value>
              <value>&quot;A380 / A319&quot;</value>
              <value>&quot;A380 / A320&quot;</value>
              <value>&quot;A380 / Boeing 747-400&quot;</value>
              <value>&quot;A380 / Boeing 777&quot;</value>
              <value>&quot;A380 and 747&quot;</value>
              <value>&quot;A380 and Boeing 747&quot;</value>
              <value>&quot;A380 and Boeing 767&quot;</value>
              <value>&quot;A380 and Boeing 777&quot;</value>
              <value>&quot;A380-800&quot;</value>
              <value>&quot;A380/A320&quot;</value>
              <value>&quot;Airbus A32&quot;</value>
              <value>&quot;Airbus A320&quot;</value>
              <value>&quot;B737-400 / A380 / A319&quot;</value>
              <value>&quot;B747-400&quot;</value>
              <value>&quot;B747-400 in retro&quot;</value>
              <value>&quot;B777&quot;</value>
              <value>&quot;B777-200&quot;</value>
              <value>&quot;B777-300ER / A320 / A380&quot;</value>
              <value>&quot;Boeing 737&quot;</value>
              <value>&quot;Boeing 737 800&quot;</value>
              <value>&quot;Boeing 737-800&quot;</value>
              <value>&quot;Boeing 744&quot;</value>
              <value>&quot;Boeing 747 / 777&quot;</value>
              <value>&quot;Boeing 747 / A320&quot;</value>
              <value>&quot;Boeing 747 / A380&quot;</value>
              <value>&quot;Boeing 747 &amp; A319&quot;</value>
              <value>&quot;Boeing 747 400&quot;</value>
              <value>&quot;Boeing 747 and Boeing 777&quot;</value>
              <value>&quot;Boeing 747-400 / 777&quot;</value>
              <value>&quot;Boeing 747-400 / 777-200&quot;</value>
              <value>&quot;Boeing 747-400 / A319&quot;</value>
              <value>&quot;Boeing 747-400 / A320&quot;</value>
              <value>&quot;Boeing 747-400 / A380&quot;</value>
              <value>&quot;Boeing 747-400 /A380&quot;</value>
              <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
              <value>&quot;Boeing 757&quot;</value>
              <value>&quot;Boeing 767&quot;</value>
              <value>&quot;Boeing 767-300&quot;</value>
              <value>&quot;Boeing 767, A319&quot;</value>
              <value>&quot;Boeing 777 - 200&quot;</value>
              <value>&quot;Boeing 777 -200&quot;</value>
              <value>&quot;Boeing 777 / 747&quot;</value>
              <value>&quot;Boeing 777 / A320&quot;</value>
              <value>&quot;Boeing 777 / A380&quot;</value>
              <value>&quot;Boeing 777 200&quot;</value>
              <value>&quot;Boeing 777 200/300&quot;</value>
              <value>&quot;Boeing 777 and Boeing 787&quot;</value>
              <value>&quot;Boeing 777-200 / 747-400&quot;</value>
              <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
              <value>&quot;Boeing 777-200 and A319&quot;</value>
              <value>&quot;Boeing 777-200 ER&quot;</value>
              <value>&quot;Boeing 777-200/300&quot;</value>
              <value>&quot;Boeing 777-200ER&quot;</value>
              <value>&quot;Boeing 777-236 ER&quot;</value>
              <value>&quot;Boeing 777-300&quot;</value>
              <value>&quot;Boeing 777-300 / A380&quot;</value>
              <value>&quot;Boeing 777-300ER&quot;</value>
              <value>&quot;Boeing 777-300ER / A320&quot;</value>
              <value>&quot;Boeing 787 / A320&quot;</value>
              <value>&quot;Boeing 787 Dreamliner&quot;</value>
              <value>&quot;Boeing 787-10&quot;</value>
              <value>&quot;Boeing 787-8&quot;</value>
              <value>&quot;Boeing 787-8 / 787-9&quot;</value>
              <value>&quot;Boeing 787-800&quot;</value>
              <value>&quot;Boeing 787-9&quot;</value>
              <value>&quot;Boeing 787-9 / 777&quot;</value>
              <value>&quot;Boeing 787-9 / A319&quot;</value>
              <value>&quot;Boeing 787-9 / A380-800&quot;</value>
              <value>&quot;Boeing 787-9, A320-200&quot;</value>
              <value>&quot;Boeing 787-9, A380&quot;</value>
              <value>&quot;Boeing 787-900&quot;</value>
              <value>&quot;Boeing 787(9)&quot;</value>
              <value>&quot;Boeing-á777&quot;</value>
              <value>&quot;Boieng 777-200&quot;</value>
              <value>&quot;Dreamliner&quot;</value>
              <value>&quot;E-190&quot;</value>
              <value>&quot;E170 / A319&quot;</value>
              <value>&quot;E190&quot;</value>
              <value>&quot;EMB190&quot;</value>
              <value>&quot;Embraer&quot;</value>
              <value>&quot;Embraer 170&quot;</value>
              <value>&quot;Embraer 190&quot;</value>
              <value>&quot;Embraer 195&quot;</value>
              <value>&quot;Embraer-190&quot;</value>
              <value>&quot;SAAB 2000&quot;</value>
              <value>&quot;Various&quot;</value>
            </bin>
          </calculation>
        </column>
        <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
        <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
        <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
        <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
        <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Aircraft (group)]'>
        <groupfilter function='level-members' level='[Aircraft (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:continent:nk]'>
        <groupfilter function='level-members' level='[none:continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:seat_type:nk]'>
        <groupfilter function='level-members' level='[none:seat_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:traveller_type:nk]'>
        <groupfilter function='level-members' level='[none:traveller_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[tmn:date:qk]' included-values='in-range'>
        <min>#2023-03-01 00:00:00#</min>
        <max>#2026-10-01 00:00:00#</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_162E1C0D12E64634BEBBE96DFCCF5D5D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_D6A2101AF48A4E3D9F44E5684BAE372E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_769A5A0C73704AC0AA9CE5E3230A5B47]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Aircraft' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Aircraft'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Average &lt;</run>
            <run bold='true' fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1'>&gt; by Aircraft</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ba_reviews_cleaned+' name='federated.16tbb030gfzxgf12p4hjd0uysdtn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Metrics' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
              <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16tbb030gfzxgf12p4hjd0uysdtn'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Various&quot;'>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-300 and A320&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A230&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A380 / Boeing 737&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 747-400&quot;</value>
                  <value>&quot;A319 / Boeing 777&quot;</value>
                  <value>&quot;A319 / Boeing 787-8&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing 789&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A320 / Boeing 747-400&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 777-200&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 / Boeing 787-9&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320, Boeing 787&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/B788&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 / Boeing 747-400&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 / Boeing 777-300&quot;</value>
                  <value>&quot;A321 / Boeing 787-9&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / A319&quot;</value>
                  <value>&quot;A380 / A320&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 767&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;A380/A320&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 &amp; A319&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777-200&quot;</value>
                  <value>&quot;Boeing 747-400 / A319&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 747-400 /A380&quot;</value>
                  <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / 747&quot;</value>
                  <value>&quot;Boeing 777 / A320&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
                  <value>&quot;Boeing 777-200 and A319&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300 / A380&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 777-300ER / A320&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / 777&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-9 / A380-800&quot;</value>
                  <value>&quot;Boeing 787-9, A320-200&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boeing-á777&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                  <value>&quot;Various&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_3999477976325632000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Overall Rating&apos; THEN [rating]&#13;&#10;WHEN &apos;Cabin Staff Service&apos; THEN [cabin_staff_service]&#13;&#10;WHEN &apos;Entertainment&apos; THEN [entertainment]&#13;&#10;WHEN &apos;Food&apos; THEN [food_beverages]&#13;&#10;WHEN &apos;Ground Service&apos; THEN [ground_service]&#13;&#10;WHEN &apos;Seat Comfort&apos; THEN [ground_service]&#13;&#10;WHEN &apos;Value&apos; THEN [value_for_money]&#13;&#10;END' />
            </column>
            <column caption='ba_reviews_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F:qk]' pivot='key' type='quantitative' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3999477976325632000]' derivation='Avg' name='[avg:Calculation_3999477976325632000:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Action (Place)]'>
            <groupfilter function='level-members' level='[place]' user:ui-action-filter='[Action2_D6A2101AF48A4E3D9F44E5684BAE372E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Aircraft (group)]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:Calculation_3999477976325632000:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:continent:nk]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:seat_type:nk]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:traveller_type:nk]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[tmn:date:qk]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Aircraft (group)]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Action (Place)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:Calculation_3999477976325632000:qk]' scope='cols' value='Overall Rating' />
            <format attr='title' class='0' field='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[__tableau_internal_object_id__].[cnt:ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F:qk]' scope='cols' value='Number of reviews' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:Calculation_3999477976325632000:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:Calculation_3999477976325632000:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#c8ddd5</color>
                <color>#a3cabc</color>
                <color>#81b7a3</color>
                <color>#64a48c</color>
                <color>#4a9177</color>
                <color>#347e63</color>
                <color>#216b50</color>
                <color>#13583e</color>
                <color>#08452e</color>
                <color>#013220</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[__tableau_internal_object_id__].[cnt:ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f0e0e5</color>
                <color>#efd0d9</color>
                <color>#eec0ce</color>
                <color>#edb0c2</color>
                <color>#eca0b7</color>
                <color>#eb91ac</color>
                <color>#ea81a0</color>
                <color>#e97295</color>
                <color>#e8638a</color>
                <color>#e75480</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:Calculation_3999477976325632000:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:Calculation_3999477976325632000:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Aircraft (group)]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'><![CDATA[Average <[Parameters].[Parameter 1]> ]]></run>
                <run bold='true'><![CDATA[<[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:Calculation_3999477976325632000:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[__tableau_internal_object_id__].[cnt:ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[__tableau_internal_object_id__].[cnt:ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Aircraft (group)]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Number of Reviews:&#9;</run>
                <run bold='true'><![CDATA[<[federated.16tbb030gfzxgf12p4hjd0uysdtn].[__tableau_internal_object_id__].[cnt:ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#e75480' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Aircraft (group)]</rows>
        <cols>([federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:Calculation_3999477976325632000:qk] + [federated.16tbb030gfzxgf12p4hjd0uysdtn].[__tableau_internal_object_id__].[cnt:ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F:qk])</cols>
      </table>
      <simple-id uuid='{62F6336B-C46E-43AD-8D71-9FF339F51EEF}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Average &lt;</run>
            <run bold='true' fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1'>&gt; per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ba_reviews_cleaned+' name='federated.16tbb030gfzxgf12p4hjd0uysdtn' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Metrics' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
              <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16tbb030gfzxgf12p4hjd0uysdtn'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Various&quot;'>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-300 and A320&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A230&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A380 / Boeing 737&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 747-400&quot;</value>
                  <value>&quot;A319 / Boeing 777&quot;</value>
                  <value>&quot;A319 / Boeing 787-8&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing 789&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A320 / Boeing 747-400&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 777-200&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 / Boeing 787-9&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320, Boeing 787&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/B788&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 / Boeing 747-400&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 / Boeing 777-300&quot;</value>
                  <value>&quot;A321 / Boeing 787-9&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / A319&quot;</value>
                  <value>&quot;A380 / A320&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 767&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;A380/A320&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 &amp; A319&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777-200&quot;</value>
                  <value>&quot;Boeing 747-400 / A319&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 747-400 /A380&quot;</value>
                  <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / 747&quot;</value>
                  <value>&quot;Boeing 777 / A320&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
                  <value>&quot;Boeing 777-200 and A319&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300 / A380&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 777-300ER / A320&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / 777&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-9 / A380-800&quot;</value>
                  <value>&quot;Boeing 787-9, A320-200&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boeing-á777&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                  <value>&quot;Various&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_3999477976325632000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Overall Rating&apos; THEN [rating]&#13;&#10;WHEN &apos;Cabin Staff Service&apos; THEN [cabin_staff_service]&#13;&#10;WHEN &apos;Entertainment&apos; THEN [entertainment]&#13;&#10;WHEN &apos;Food&apos; THEN [food_beverages]&#13;&#10;WHEN &apos;Ground Service&apos; THEN [ground_service]&#13;&#10;WHEN &apos;Seat Comfort&apos; THEN [ground_service]&#13;&#10;WHEN &apos;Value&apos; THEN [value_for_money]&#13;&#10;END' />
            </column>
            <column caption='ba_reviews_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F:qk]' pivot='key' type='quantitative' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3999477976325632000]' derivation='Avg' name='[avg:Calculation_3999477976325632000:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[place]' derivation='None' name='[none:place:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[tmn:date:qk]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:seat_type:nk]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:traveller_type:nk]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:continent:nk]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Aircraft (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Longitude (generated)]' field-type='quantitative' max='11545048.459842116' min='-11545048.459842097' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Latitude (generated)]' field-type='quantitative' max='10840711.669479035' min='821957.87075186614' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:Calculation_3999477976325632000:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:Calculation_3999477976325632000:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#c8ddd5</color>
                <color>#a3cabc</color>
                <color>#81b7a3</color>
                <color>#64a48c</color>
                <color>#4a9177</color>
                <color>#347e63</color>
                <color>#216b50</color>
                <color>#13583e</color>
                <color>#08452e</color>
                <color>#013220</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='admin-0-boundaries-bg-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute-sub' value='false' />
            <format attr='enabled' id='admin-0-boundaries-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents' value='false' />
            <format attr='enabled' id='admin1-water-lines-usa-tableau' value='false' />
            <format attr='enabled' id='9-dash-line-casing' value='false' />
            <format attr='enabled' id='9-dash-line' value='false' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.5' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:Calculation_3999477976325632000:qk]' />
              <lod column='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:place:nk]' />
              <tooltip column='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[__tableau_internal_object_id__].[cnt:ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F:qk]' />
              <geometry column='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:place:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'><![CDATA[Average <[Parameters].[Parameter 1]>	    ]]></run>
                <run bold='true'><![CDATA[<[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:Calculation_3999477976325632000:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[Number of Reviews: <[federated.16tbb030gfzxgf12p4hjd0uysdtn].[__tableau_internal_object_id__].[cnt:ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Latitude (generated)]</rows>
        <cols>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{8361A7B1-5FC3-4805-A872-0C40EF0B0DB8}' />
    </worksheet>
    <worksheet name='Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Average &lt;</run>
            <run bold='true' fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1'>&gt; by Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ba_reviews_cleaned+' name='federated.16tbb030gfzxgf12p4hjd0uysdtn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Metrics' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
              <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16tbb030gfzxgf12p4hjd0uysdtn'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Various&quot;'>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-300 and A320&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A230&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A380 / Boeing 737&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 747-400&quot;</value>
                  <value>&quot;A319 / Boeing 777&quot;</value>
                  <value>&quot;A319 / Boeing 787-8&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing 789&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A320 / Boeing 747-400&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 777-200&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 / Boeing 787-9&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320, Boeing 787&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/B788&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 / Boeing 747-400&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 / Boeing 777-300&quot;</value>
                  <value>&quot;A321 / Boeing 787-9&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / A319&quot;</value>
                  <value>&quot;A380 / A320&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 767&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;A380/A320&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 &amp; A319&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777-200&quot;</value>
                  <value>&quot;Boeing 747-400 / A319&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 747-400 /A380&quot;</value>
                  <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / 747&quot;</value>
                  <value>&quot;Boeing 777 / A320&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
                  <value>&quot;Boeing 777-200 and A319&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300 / A380&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 777-300ER / A320&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / 777&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-9 / A380-800&quot;</value>
                  <value>&quot;Boeing 787-9, A320-200&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boeing-á777&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                  <value>&quot;Various&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_3999477976325632000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Overall Rating&apos; THEN [rating]&#13;&#10;WHEN &apos;Cabin Staff Service&apos; THEN [cabin_staff_service]&#13;&#10;WHEN &apos;Entertainment&apos; THEN [entertainment]&#13;&#10;WHEN &apos;Food&apos; THEN [food_beverages]&#13;&#10;WHEN &apos;Ground Service&apos; THEN [ground_service]&#13;&#10;WHEN &apos;Seat Comfort&apos; THEN [ground_service]&#13;&#10;WHEN &apos;Value&apos; THEN [value_for_money]&#13;&#10;END' />
            </column>
            <column caption='ba_reviews_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F:qk]' pivot='key' type='quantitative' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3999477976325632000]' derivation='Avg' name='[avg:Calculation_3999477976325632000:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Action (Place)]'>
            <groupfilter function='level-members' level='[place]' user:ui-action-filter='[Action2_D6A2101AF48A4E3D9F44E5684BAE372E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:continent:nk]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:seat_type:nk]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:traveller_type:nk]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[tmn:date:qk]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Aircraft (group)]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Action (Place)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:Calculation_3999477976325632000:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[tmn:date:qk]' scope='cols' value='' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:Calculation_3999477976325632000:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[__tableau_internal_object_id__].[cnt:ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.16tbb030gfzxgf12p4hjd0uysdtn].[tmn:date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'><![CDATA[Average <[Parameters].[Parameter 1]> 	]]></run>
                <run bold='true'><![CDATA[<[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:Calculation_3999477976325632000:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[Number of Reviews: <[federated.16tbb030gfzxgf12p4hjd0uysdtn].[__tableau_internal_object_id__].[cnt:ba_reviews_cleaned.csv_DE017C7F38434616B80E03DF80004C8F:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#013220' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:Calculation_3999477976325632000:qk]</rows>
        <cols>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{99F0ACBC-BEE6-4219-B98B-8975EC4DDB3F}' />
    </worksheet>
    <worksheet name='Summary'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Summary</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ba_reviews_cleaned+' name='federated.16tbb030gfzxgf12p4hjd0uysdtn' />
          </datasources>
          <datasource-dependencies datasource='federated.16tbb030gfzxgf12p4hjd0uysdtn'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Various&quot;'>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-300 and A320&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A230&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A380 / Boeing 737&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 747-400&quot;</value>
                  <value>&quot;A319 / Boeing 777&quot;</value>
                  <value>&quot;A319 / Boeing 787-8&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing 789&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A320 / Boeing 747-400&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 777-200&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 / Boeing 787-9&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320, Boeing 787&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/B788&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 / Boeing 747-400&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 / Boeing 777-300&quot;</value>
                  <value>&quot;A321 / Boeing 787-9&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / A319&quot;</value>
                  <value>&quot;A380 / A320&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 767&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;A380/A320&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 &amp; A319&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777-200&quot;</value>
                  <value>&quot;Boeing 747-400 / A319&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 747-400 /A380&quot;</value>
                  <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / 747&quot;</value>
                  <value>&quot;Boeing 777 / A320&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
                  <value>&quot;Boeing 777-200 and A319&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300 / A380&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 777-300ER / A320&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / 777&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-9 / A380-800&quot;</value>
                  <value>&quot;Boeing 787-9, A320-200&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boeing-á777&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                  <value>&quot;Various&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[cabin_staff_service]' derivation='Avg' name='[avg:cabin_staff_service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[entertainment]' derivation='Avg' name='[avg:entertainment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[food_beverages]' derivation='Avg' name='[avg:food_beverages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ground_service]' derivation='Avg' name='[avg:ground_service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[seat_comfort]' derivation='Avg' name='[avg:seat_comfort:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value_for_money]' derivation='Avg' name='[avg:value_for_money:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[seat_comfort]' derivation='Sum' name='[sum:seat_comfort:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:rating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:cabin_staff_service:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:entertainment:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:food_beverages:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:ground_service:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:seat_comfort:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:value_for_money:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:rating:qk]&quot;</bucket>
              <bucket>&quot;[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:cabin_staff_service:qk]&quot;</bucket>
              <bucket>&quot;[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:entertainment:qk]&quot;</bucket>
              <bucket>&quot;[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:food_beverages:qk]&quot;</bucket>
              <bucket>&quot;[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:ground_service:qk]&quot;</bucket>
              <bucket>&quot;[federated.16tbb030gfzxgf12p4hjd0uysdtn].[sum:seat_comfort:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Action (Place)]'>
            <groupfilter function='level-members' level='[place]' user:ui-action-filter='[Action2_D6A2101AF48A4E3D9F44E5684BAE372E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:continent:nk]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:seat_type:nk]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:traveller_type:nk]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[tmn:date:qk]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[:Measure Names]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Aircraft (group)]</column>
            <column>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Action (Place)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Multiple Values]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#013220' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Multiple Values]' />
              <text column='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='28'><![CDATA[<[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Multiple Values]>]]></run>
                <run><![CDATA[
<[federated.16tbb030gfzxgf12p4hjd0uysdtn].[:Measure Names]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E2D74D59-4B75-4FCB-86B5-4B23C86B1A7A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='763' maxwidth='1366' minheight='763' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='ba_reviews_cleaned+' name='federated.16tbb030gfzxgf12p4hjd0uysdtn' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Metrics' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
          <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
          <members>
            <member value='&quot;Overall Rating&quot;' />
            <member value='&quot;Cabin Staff Service&quot;' />
            <member value='&quot;Entertainment&quot;' />
            <member value='&quot;Food&quot;' />
            <member value='&quot;Ground Service&quot;' />
            <member value='&quot;Seat Comfort&quot;' />
            <member value='&quot;Value&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.16tbb030gfzxgf12p4hjd0uysdtn'>
        <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
            <bin default-name='false' value='&quot;Various&quot;'>
              <value>&quot;777&quot;</value>
              <value>&quot;777-300 and A320&quot;</value>
              <value>&quot;787&quot;</value>
              <value>&quot;A19&quot;</value>
              <value>&quot;A219&quot;</value>
              <value>&quot;A230&quot;</value>
              <value>&quot;A318&quot;</value>
              <value>&quot;A319 / A380 / Boeing 737&quot;</value>
              <value>&quot;A319 / Boeing 747&quot;</value>
              <value>&quot;A319 / Boeing 747-400&quot;</value>
              <value>&quot;A319 / Boeing 777&quot;</value>
              <value>&quot;A319 / Boeing 787-8&quot;</value>
              <value>&quot;A319 / Boeing 787-9&quot;</value>
              <value>&quot;A319 / Boeing 789&quot;</value>
              <value>&quot;A319 / Boeing777&quot;</value>
              <value>&quot;A319/320&quot;</value>
              <value>&quot;A319/A320&quot;</value>
              <value>&quot;A320 / Boeing 747-400&quot;</value>
              <value>&quot;A320 / Boeing 767&quot;</value>
              <value>&quot;A320 / Boeing 777&quot;</value>
              <value>&quot;A320 / Boeing 777-200&quot;</value>
              <value>&quot;A320 / Boeing 787&quot;</value>
              <value>&quot;A320 / Boeing 787-9&quot;</value>
              <value>&quot;A320 A350&quot;</value>
              <value>&quot;A320 Finnair&quot;</value>
              <value>&quot;A320 neo&quot;</value>
              <value>&quot;A320 Neo&quot;</value>
              <value>&quot;A320-200&quot;</value>
              <value>&quot;A320-233&quot;</value>
              <value>&quot;A320, A380&quot;</value>
              <value>&quot;A320, Boeing 787&quot;</value>
              <value>&quot;A320/319&quot;</value>
              <value>&quot;A320/A319&quot;</value>
              <value>&quot;A320/B788&quot;</value>
              <value>&quot;A320neo&quot;</value>
              <value>&quot;A320Neo&quot;</value>
              <value>&quot;A320NEO&quot;</value>
              <value>&quot;A321 / Boeing 747-400&quot;</value>
              <value>&quot;A321 / Boeing 777&quot;</value>
              <value>&quot;A321 / Boeing 777-300&quot;</value>
              <value>&quot;A321 / Boeing 787-9&quot;</value>
              <value>&quot;A321 neo&quot;</value>
              <value>&quot;A321 Neo&quot;</value>
              <value>&quot;A321-200&quot;</value>
              <value>&quot;A321-neo&quot;</value>
              <value>&quot;A321neo&quot;</value>
              <value>&quot;A321Neo&quot;</value>
              <value>&quot;A321NEO&quot;</value>
              <value>&quot;A322&quot;</value>
              <value>&quot;A330&quot;</value>
              <value>&quot;A340-300&quot;</value>
              <value>&quot;A340-300, A320&quot;</value>
              <value>&quot;A350&quot;</value>
              <value>&quot;A350-1000&quot;</value>
              <value>&quot;A380 / A319&quot;</value>
              <value>&quot;A380 / A320&quot;</value>
              <value>&quot;A380 / Boeing 747-400&quot;</value>
              <value>&quot;A380 / Boeing 777&quot;</value>
              <value>&quot;A380 and 747&quot;</value>
              <value>&quot;A380 and Boeing 747&quot;</value>
              <value>&quot;A380 and Boeing 767&quot;</value>
              <value>&quot;A380 and Boeing 777&quot;</value>
              <value>&quot;A380-800&quot;</value>
              <value>&quot;A380/A320&quot;</value>
              <value>&quot;Airbus A32&quot;</value>
              <value>&quot;Airbus A320&quot;</value>
              <value>&quot;B737-400 / A380 / A319&quot;</value>
              <value>&quot;B747-400&quot;</value>
              <value>&quot;B747-400 in retro&quot;</value>
              <value>&quot;B777&quot;</value>
              <value>&quot;B777-200&quot;</value>
              <value>&quot;B777-300ER / A320 / A380&quot;</value>
              <value>&quot;Boeing 737&quot;</value>
              <value>&quot;Boeing 737 800&quot;</value>
              <value>&quot;Boeing 737-800&quot;</value>
              <value>&quot;Boeing 744&quot;</value>
              <value>&quot;Boeing 747 / 777&quot;</value>
              <value>&quot;Boeing 747 / A320&quot;</value>
              <value>&quot;Boeing 747 / A380&quot;</value>
              <value>&quot;Boeing 747 &amp; A319&quot;</value>
              <value>&quot;Boeing 747 400&quot;</value>
              <value>&quot;Boeing 747 and Boeing 777&quot;</value>
              <value>&quot;Boeing 747-400 / 777&quot;</value>
              <value>&quot;Boeing 747-400 / 777-200&quot;</value>
              <value>&quot;Boeing 747-400 / A319&quot;</value>
              <value>&quot;Boeing 747-400 / A320&quot;</value>
              <value>&quot;Boeing 747-400 / A380&quot;</value>
              <value>&quot;Boeing 747-400 /A380&quot;</value>
              <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
              <value>&quot;Boeing 757&quot;</value>
              <value>&quot;Boeing 767&quot;</value>
              <value>&quot;Boeing 767-300&quot;</value>
              <value>&quot;Boeing 767, A319&quot;</value>
              <value>&quot;Boeing 777 - 200&quot;</value>
              <value>&quot;Boeing 777 -200&quot;</value>
              <value>&quot;Boeing 777 / 747&quot;</value>
              <value>&quot;Boeing 777 / A320&quot;</value>
              <value>&quot;Boeing 777 / A380&quot;</value>
              <value>&quot;Boeing 777 200&quot;</value>
              <value>&quot;Boeing 777 200/300&quot;</value>
              <value>&quot;Boeing 777 and Boeing 787&quot;</value>
              <value>&quot;Boeing 777-200 / 747-400&quot;</value>
              <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
              <value>&quot;Boeing 777-200 and A319&quot;</value>
              <value>&quot;Boeing 777-200 ER&quot;</value>
              <value>&quot;Boeing 777-200/300&quot;</value>
              <value>&quot;Boeing 777-200ER&quot;</value>
              <value>&quot;Boeing 777-236 ER&quot;</value>
              <value>&quot;Boeing 777-300&quot;</value>
              <value>&quot;Boeing 777-300 / A380&quot;</value>
              <value>&quot;Boeing 777-300ER&quot;</value>
              <value>&quot;Boeing 777-300ER / A320&quot;</value>
              <value>&quot;Boeing 787 / A320&quot;</value>
              <value>&quot;Boeing 787 Dreamliner&quot;</value>
              <value>&quot;Boeing 787-10&quot;</value>
              <value>&quot;Boeing 787-8&quot;</value>
              <value>&quot;Boeing 787-8 / 787-9&quot;</value>
              <value>&quot;Boeing 787-800&quot;</value>
              <value>&quot;Boeing 787-9&quot;</value>
              <value>&quot;Boeing 787-9 / 777&quot;</value>
              <value>&quot;Boeing 787-9 / A319&quot;</value>
              <value>&quot;Boeing 787-9 / A380-800&quot;</value>
              <value>&quot;Boeing 787-9, A320-200&quot;</value>
              <value>&quot;Boeing 787-9, A380&quot;</value>
              <value>&quot;Boeing 787-900&quot;</value>
              <value>&quot;Boeing 787(9)&quot;</value>
              <value>&quot;Boeing-á777&quot;</value>
              <value>&quot;Boieng 777-200&quot;</value>
              <value>&quot;Dreamliner&quot;</value>
              <value>&quot;E-190&quot;</value>
              <value>&quot;E170 / A319&quot;</value>
              <value>&quot;E190&quot;</value>
              <value>&quot;EMB190&quot;</value>
              <value>&quot;Embraer&quot;</value>
              <value>&quot;Embraer 170&quot;</value>
              <value>&quot;Embraer 190&quot;</value>
              <value>&quot;Embraer 195&quot;</value>
              <value>&quot;Embraer-190&quot;</value>
              <value>&quot;SAAB 2000&quot;</value>
              <value>&quot;Various&quot;</value>
            </bin>
          </calculation>
        </column>
        <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
        <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
        <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
        <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
        <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone forceUpdate='true' h='13021' id='3' type-v2='text' w='18375' x='0' y='0'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='18'>British Airways Review</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#013220' />
          </zone-style>
        </zone>
        <zone h='13021' id='4' name='Summary' show-title='false' w='82064' x='17862' y='0' />
        <zone h='39063' id='19' name='Map' w='43265' x='56735' y='13021' />
        <zone h='87418' id='26' param='vert' type-v2='layout-flow' w='14641' x='0' y='12582'>
          <zone h='21625' id='25' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='14201' x='220' y='12975'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='9043' id='20' name='Map' param='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='14201' x='220' y='34600'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='16644' id='21' mode='radiolist' name='Map' param='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:traveller_type:nk]' type-v2='filter' w='14201' x='220' y='43643'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='16644' id='22' mode='radiolist' name='Map' param='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:seat_type:nk]' type-v2='filter' w='14201' x='220' y='60287'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='6815' id='23' mode='dropdown' name='Map' param='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Aircraft (group)]' type-v2='filter' w='14201' x='220' y='76931'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='6815' id='24' mode='dropdown' name='Map' param='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:continent:nk]' type-v2='filter' w='14201' x='220' y='83746'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#013220' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
          </zone-style>
        </zone>
        <zone h='39063' id='27' name='Month' w='42094' x='14641' y='13021' />
        <zone h='44954' id='28' name='Aircraft' w='85359' x='14641' y='54653' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='48' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97904' id='47' param='vert' type-v2='layout-flow' w='98828' x='586' y='1048'>
                <zone forceUpdate='true' h='13021' id='3' type-v2='text' w='18375' x='0' y='0'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='18'>British Airways Review</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#013220' />
                  </zone-style>
                </zone>
                <zone fixed-size='99' h='13021' id='4' is-fixed='true' name='Summary' show-title='false' w='82064' x='17862' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='21625' id='25' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='14201' x='220' y='12975'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39063' id='27' is-fixed='true' name='Month' w='42094' x='14641' y='13021'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9043' id='20' name='Map' param='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='14201' x='220' y='34600'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16644' id='21' mode='dropdown' name='Map' param='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:traveller_type:nk]' type-v2='filter' w='14201' x='220' y='43643'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16644' id='22' mode='dropdown' name='Map' param='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:seat_type:nk]' type-v2='filter' w='14201' x='220' y='60287'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6815' id='23' mode='dropdown' name='Map' param='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Aircraft (group)]' type-v2='filter' w='14201' x='220' y='76931'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6815' id='24' mode='dropdown' name='Map' param='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:continent:nk]' type-v2='filter' w='14201' x='220' y='83746'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39063' id='19' is-fixed='true' name='Map' w='43265' x='56735' y='13021'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44954' id='28' is-fixed='true' name='Aircraft' w='85359' x='14641' y='54653'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E4FF2BA0-A4BB-4990-922E-4A20926EAAE7}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='radiolist' param='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:traveller_type:nk]' type='filter' />
            <card mode='radiolist' param='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:seat_type:nk]' type='filter' />
            <card mode='dropdown' param='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Aircraft (group)]' type='filter' />
            <card mode='dropdown' param='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:continent:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:Calculation_3999477976325632000:qk]</field>
            <field>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[mn:date:ok]</field>
            <field>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:aircraft:nk]</field>
            <field>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:seat_type:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{297A7A1C-8C45-4206-9716-75ECBB6B5A4D}' />
    </window>
    <window class='worksheet' name='Summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0DFBE143-5C0B-4187-A7DB-76405E41E22F}' />
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{947146C6-537B-4134-BADE-4FE9FC7E540E}' />
    </window>
    <window class='worksheet' name='Aircraft'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[Aircraft (group)]</field>
            <field>[federated.16tbb030gfzxgf12p4hjd0uysdtn].[none:aircraft:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3E29DADC-6C89-4154-8EE9-CC6D474676EF}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Aircraft'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Summary'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{61D8F27F-998E-4094-8FF4-656E601997D9}' />
    </window>
  </windows>
  <datagraph>
    <graph>
      <properties>
        <default-execution-subgraph-guid value='f9c3b704-a545-41ba-99b8-3d214ab16983' />
      </properties>
      <node-execution-subgraphs>
        <pair execution-subgraph-guid='f9c3b704-a545-41ba-99b8-3d214ab16983' node-guid='8a066118-a592-4519-a94c-80750c7fb131' />
        <pair execution-subgraph-guid='f9c3b704-a545-41ba-99b8-3d214ab16983' node-guid='57edad66-79b7-48cd-9b52-9d09b4d69be8' />
      </node-execution-subgraphs>
      <nodes>
        <single-value-field-node fieldname='[Parameters].[Parameter 1]' fieldname-input-guid='b53779a7-7251-4beb-9042-060bd4eb6781' node-guid='8a066118-a592-4519-a94c-80750c7fb131' value-output-guid='49e494d1-b5d4-4fe7-8b50-58af940b7294' />
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[federated.16tbb030gfzxgf12p4hjd0uysdtn].[avg:Calculation_3999477976325632000:qk]' node-guid='57edad66-79b7-48cd-9b52-9d09b4d69be8' orientation='horizontal' sheet-identifier='{62F6336B-C46E-43AD-8D71-9FF339F51EEF}' title-input-guid='39e1441c-3099-40ab-ac48-fe04eeee67fd' />
      </nodes>
      <edges>
        <edge from='49e494d1-b5d4-4fe7-8b50-58af940b7294' to='39e1441c-3099-40ab-ac48-fe04eeee67fd' />
      </edges>
      <pin-values />
    </graph>
  </datagraph>
  <thumbnails>
    <thumbnail height='384' name='Aircraft' width='384'>
      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
      z4IdSYfFkUhmZjJm/WJ/9BqBviscvjRKxaNbSDXrQAvT036NPlMh6wsysJsMKAroDGbis1ex
      ucRC7YUaPHfba8RH7dmzWErWUuh2PLCzEUJ8czF4BXAnEbweH6rZinXqZi3CaPcNzl6oY9AT
      QmdyULRmIyvzkzFOHSvQNALjPdReqqKxZxTN6CC7tILK0kzMtxaAVxnpqON0Y5AdmyuwmSZS
      QB2XDtFEPmuXJ9Jy6QzX24cIRhSSC1ayfk0ZcSZl2nG8w+1crbpCW984UZ0BV3I2BWlGlLhl
      lGZMq/1dTtfL9QuXGHavYkO+fXKjgqIoqJo6xxs0VFUDRXfXReKD/bWcb1PY8K1SbKalt0CN
      ELFksbuhi2xyXd1IiOGOek5VtZC3fjU3s9ZaNEjjuf387v1TWHNWsf3R7axfnkrdl3/g42N1
      eCMq2uR+QqP1/P6f/0BjMIl1W7azYVkKbSc/5IPTzYTV28fzDLRxvvoGoXD0Vi0GG89z4LMP
      +M3vPqBHl0nl5m3s2FrB8IVP+fxkHb7orQox3HyCf37jA9ojbtZu2c6OLRsoihvhiw/20zh0
      lxHZaaet4R1o41LdCBU7Kom/ORShGEjLKiU10sy5lgGCkSiapqFGI3i66jjXGKB83TLuOEKi
      +qk9eQIlbyPleXE8mBEOIcSfKgavAFTGeluoOncGuwGikRBjg1109PjIqHyBp9fm34qKvv56
      DpxoZPVzf8HGgsSJ2UHpmaS6Xbz7hwNcSHOzvTgZwoMc++P7hMpe5rUniplYmjeT9AQ9v/jn
      jzib/zdszbTcpU4KjvTlvPCdnaRaDBM9bE1j4+ZcPrnYgmf9cmx2CA3W8f67pynY8zpPrky+
      3cBmaZz59DzzvaVb01Sar56kz17Cnhz39HpkreCVFyJ88tWHvNdQQE6yi6i3j9bWAVwbXuSp
      8sQ79Bo0vG0XOVoXZv0P15FolN6/EA+7GLwC0NBUlUgkTDgcRlVVDGYXSW4H/oFeRgLhWyWH
      G6rwOEspyE6YNjXUGp9OcYaB2utdqJpGsL+FKx0m1m0uYuq67ObUMlakB7h2rYu7P+1Gj90R
      h+1m4w+ggN5ixXyrTITu6zX0xi1n+/Lke+pdq6EeLlzsoWj1ShLtxhkvRvB6/OitDsw6jWgk
      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
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      Qiyh/w+RMx2Pl5JLPAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Map' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9R3BcSZrn+XN/KnQENEEQJKhFkkySmczMqswSWZUlW0/N9syOdc9lZ3fM
      1vYyZn3aw1pd9rBmu9e99B7GZs1mrat7ZlpUV5eu6qwUTE2tCYLQIoDQEU+67yECQYAEQFBk
      UsXPjGZEiPc8It773P0T/0+Mz8xozdr4jQa//fg9luIabcpVz4lQscfq4uUXX2Ipv0B3bx9o
      zSdnP+WqKoIQax7zjd69DG8bRgD/+PE/UzKjdc7++NgS2Lx58o3HPYwvHK0UgeeRy2SwLetx
      D6fDJgnDkHK9jpASHUV0ZTKUKhWEaWJLiWPbFMtlpG0/7qF2eMIwNaDXMdaTC3OcKU0Reibc
      MQHIms+cucDukd109fWjgVOffMBvizfAkGseD6V5NbcTLQQa8HyfscI8WMYj/VAPg+NrTux/
      Zd3v5JnGMDDjcWquSzKReNyj6bAOrutiWRaG0bxvDMMgpTXlRgOlNX4QEAFCa0zDwDRNNBAp
      hVIKszO5d2ixjqVu0p3JEZlytfFXzf2CNiQHEgMImoZSa81oeX594w8goNSotv/89otfZmsU
      e4jhP1ocX/O9PS+xb2TP4x7KY6NRqaDX3RN2eBIwTZOFhQWCIMD3fWZmZ1ksFhFSYto2Fc9D
      miZRGGLbNlJKurJZDKUwOr9thxWYGz2ZTKXYk+hlor6EkJK4Nug3k7hostkErx85SSKVAiAK
      Q/xKDXQDsvF1jxlEYfv/tuNQN9Qj+igPiVK83rOHmcV5BIL9u/c97hE9FmKpFCoMKVcqpFMp
      xPO4E3rCMU2TRCJBoVAAoK+3l0q1ilKKMAybrh4hEFJSrdUQQuCHzfsu0nrjm77Dc4W4NTOj
      N3J3aK3xXReEwInFlh+8y8evtWZudoaff/g202m1bgzggNXLH7/xrfbfv/zod3xcnbx9XKXX
      3kX4YdNV9CAGyY/Akhu+1wo0Ztml0R0j7Qr+/bf+5XO5VY7CECklYRBgCkF3LodldkzGk4bW
      Gs/z2q6gQqFAPB6nUqkQWRZSyvbrtFJIw2j+tobRmdQ7tNnQBQQghMCJx28b/+aDa74uEU/w
      33/3Tzjq9BP3NCK6e3Uf6dVB30jdfo3diDAr/uo3aA01j3QlQrghD0Iykgx5dtt9tRahBEtL
      tos039r/Eob55MQlvlBaK0fDstCGwXw+TxQ9eYH65x0hBLFYrB0HiKII0zTp6elBBcGq18nl
      WIFpdox/h1XccwJYC60UN69fu+vxdDZLtVLh+6+/xe/vfplXcjvuek0ullz19/FdB3DKPoQR
      A55FmLhjtRlp+muSQwM7iKsHGi61uGA40Q1rTEjtz2QIDuzay7958w/Yt3sfQjzYuZ52DMMg
      DAK8ep1GtUqkNdV6/XEPq8M9cByHYrlMuVLBWJHto5UiXDEhdOiwkgezckKwc3czUFqv1dAr
      VvG5nh4KhSXi6RSHtu/l5eQQA6FDT2AyqGLsH9q56lB9vf384PjXGdIJXtp/mOOZbasNtRTs
      276TfTt24xr3CGCVGxCEWPPV1Y8HEX1dPYh7BMDiZidNDkAaBk48jpQSFUV4nve4h9RhA6Io
      wvU8pJS4noeKIvxajdDzcOt1/EajE9jvsCYP5Nxd3kaGQcBfvf0Tvn/iKwwMbGk/fu3WKO9O
      Xebff/1P+ObJr4DWaEAAQsq7jrV9+w7+bNswGtijFMO3bvDupc+oyIDj/bt45ehJ5mZmUHbL
      LbN8MStNsqGIBHgmGIaJboSYgSaImnGIVCDosTPsP3iIiUaBC7NjhLaBjpmYoeZYbhg38LEM
      g5H+oQf5Op45pJREUUTo+1i23TQwrkss9uRkbD3vlMtl4vE4pmkipaS3pwegnRkUGQZBGCJs
      G9Fx/TyVLE/an+dvd88g8EbMzE5za26KV4681A46QXPbOXrrJlsHBok/YD55FIZEUYTtOAA0
      6nU+vHSaIAyYzS/Qk8lRiTz6jATD24YZm5lksLcfFSl6MjnqnovWmpHhHRitmyQKQ+r1OuVK
      mQtToxwYGmH70PYHGt+zjlevo8IQQ0qiIKC7u5t0Ov24h9WhRRRFFAqF5i5NKSzLamcHASil
      mF9cRDpOx/g/hagoQkQRSmuMlg38PLjvCUBFEVEUYXWqCp9ptNYEnodWiigIyKZSdHV1Pe5h
      dWgRRRH5fJ6uri4Mw8D3fSrVKl25HKZpopQiXywinsNMtmcBrTXK99GA+TlOAPcdA6hVq8xM
      T38eY+nwBCGEwLRtLMdBR9GqHV6Hx4vruszPz5PJZLBaKZ/xeBzDNClXKni+T7Fchk767lOL
      EAJp26sC+p8H93VXR1FEOptl+8jI/Z1Fa7TWhL7P5OQEnut2glJPASqKiIIAOxbrpII+QRiG
      gTAMPN9HtRIwtNYk43G8KKJQqxFK2XH9POUIIT733/C+lgjLOcdozbWb1xmdneTrJ760ukbg
      Dq6MXuXa7AQLtSKNKKBsRkg35GB6C68fPUl3V/fdb9KaKAwxOtvXx4ZWCq/RQACmbdOZrp8c
      XNdFSYmnFI2lJSzDaFb6tuo37ky06NBhPe5rAojCkN+ePsWV+QnKtiKnbb6+jmkIw4Cff/Q7
      ztZmmpW95vLZJCppcyFaZOrjX/F7B17ls/ErmNJgMNPDji1DxGNxfvXOb/neW9+9Pel0+MJQ
      SiGlJJFO4zcaoDV11yUTBFidSfmxYxgGEpBKteUerFisE5frcN9sHATWmg/OfkyhWOTLx17h
      55+8w/WwAKbECeDbWw+zc9cuAj8ge0eAcCmf5y8//ie0s8EcEymsCAJbts8nA8XR7Da+cfxL
      7QygDo8Pr15vy0Qn4nEG+vs78YDPiVKphGVZ7UweYJWrdNkdoLWm0WgQhiHJZJJypYIbhigg
      9H3iLX2uDh3uxZrWWWvN6YtnOTN9g4wyKbo1Prx8muFkN9WJIsMDW9AW/HT8DHLqHHuT/fze
      G2+t8lelMxm22hmm2KCK1JAEKxf4QqBsg4XS0j19X67b4NKNq1yaH8cPA9JOHMe06UlmOLxr
      P+l05r6+iC8i5/ZpJApDYpaF6viUP3fS6TQLCwvEYrGmHlMYUiyV6O7qQgiB1rr9G8RiMQqF
      AkIIspkMGa0plcv48fWFGDt0uJM1J4BGrcYvbp5GJW3mwgY6JZivTnFAZVDZGKdr081Ve0u2
      4WJ9jtfyC/T29QNQrVT46/d+Rp+VZNarENkbC7GtQmsObdu17nZWK8XVm9f59ehpSjIEKcCE
      2ciDCHDnuL44zZ+/+Yerz6k1N8ZvcmNuEkkzuLKjb5A9I7sZH7/Fzy9+wEvD++nJ5Bjetv32
      DQfNIrbn1Pg5iQRuvU6kVLs2o7MD+HyQUpJOp8nn8/T19VGp1fC0Jp/PE4vFSN2xsr8zMB9G
      UafpS4f7Ys0JwPVchqI4U0GAsm7f7Jd1qeXPX7FsVxrZEhBbplqpMCdc8son3lBULbHpCSAb
      GBzde2jN55RS/PyjtzlTnmp1KLv7mEYEx3fuu30+rVnIL/DOlc8Yqy3i2bffc35xnP9pYJD5
      SoG8HfKz2QvIKc2hiS2Y0qDi1al6DYQUvLbzBfbt3PtcGT+lFPVKpVkQZprYtt2JyXzOJBIJ
      giDA8zxUS8mzt7eXRqNBoVAgm83SaDSIxWIkk6t1tbQQa9wRHTqsz6oJQGvN+NQ4P75wikTc
      ZNiMcYva7RfcKdOsNUM1g9dfPElPT++q4yAFkSGo5jYfNDQaIW8d/NK6q/9TZz/idHX6ru5k
      y9iR4A/2vsLekd3tcVy6fpmfjn2GbwqwV98eDUfw4cUzJOxWrEEKlBSc9+Zvv6g1/L+9+TEj
      E9f47rHXyeWej4IoKSWxRAK3VgOtKVerGIZBd/camVsd7gutNUEQYK9xrS/vAgKtsWIxFotF
      enI5HMehUqm0XUSxWKztFhJCoKKokznX4b5YZUmFENS8BnUjYs7wmMsv3NbdWQulqVmaxWLh
      kQwmazjs2bFrzedGb43y9vy1pstnLSLFt4aPtI3/0mKe//K7n/LxpbPoDWSkF2pFal7j3jsU
      QzKmK7x94eNNfZZnBdO2iafTCCkRLT9zvaMO+tAEQUB+aamdx79MrVZjem6ORiutE61RUrKw
      tARArjURCCEIgoCZ+XkWCgXyxWLz9R063Ad3XTGHdh/g1a6dGErjpkxSxQ2kZAU4lo1j26uy
      FXK5HIZ3n4VDWnNi6941c5hVFPFPFz/YsHfwvlgvh/cdJIoi/vnT9/jlqbe5HhaYTkWE1ca6
      7wtVRKg335XsenWBK9evwHOSGb9S+E9zW2ysw8NhWRaZVIrFxUWKpRJKqXZ2T1cmQ1c6TTaZ
      xBYCqVSzN0OhQKVabTeDKdVqWPF4U+7BND/3qtEOzx5rxgC+euI1to72Mr+4QMWtc62+QNXW
      dwVVX8nu4M0TX2Zhbo656Wm2DDXVNOPJJAlMKpsdhdYMqwRH993t+9da886pd6jYy3qia+CH
      vPHCMYSQLOZnOTV/A0dKRNVHp2Po/vVFzMpBg9f6XsANfMYrecr2xpOBb8F/u3KK/6V/kFTm
      /jKNnla01hgtWYFEPL6m26LD/SGEIJlM4jgO+cVFGq6LkBKnJejmui71RgPf93FsG991EZaF
      qxS1QqGpEdP5HTo8JO3ltm6tQAAQgt279lAMGlxozBGou1fzyUDw+gsvIaQkkUrx/qXTuK4L
      WjM+dpOYvD8dki3Z3jXz/hv1Oh8Xxtd3/QAZZdLX24eKIsqlEieSW5FCouOtG2SD9y6ZIf/t
      yvvsGdjGV4YPbezyguYkGLe4Onb9uZGzkIbRbCvYahV5p9uiw/0RRRFLS0ssLCxQKpWQUuLE
      Yk39FykJggDHceju6mKgv59kMklXNovZeq8wjGZ1ttZN1daOTEeHB0RCswDlr/75Hzl94cyq
      fPiXdx5kj8jixVancVqB5mtDB5mYmsB3XW5MjnFFFxibvAXA4uIiC2LzTUSMQHF814E1nxub
      vIWf2CDzRGtGurYgpGR6Zpoff/o7zlWmyWEx4jo4c9UNO4EBeLZgdH6Kqu9uLltJCH4xeZ7C
      0uK9X/sMYBgGTjJJFIbYponruoThg7Xn7NAMrluWRSqVIp1O09fbS3c2S39PD5ZlUSqVWFha
      olqtUqlUqFarNBqNZncvzyMKw/Z9atp2R/qhwwNjAnx05QxjVJmYOMeW7j4Gtw6htabWqJNL
      pKBRAvO2YezB4YPJqyyaAamrH/PWzhdJ1zR9XT0gBIthHexNpgtqzd5kP90rsohWMlcpbGiU
      jUDx2r6jaK1Zqpbo7+qBSDFuus2sn0Sy2VB+rUbzK8YwlOsjHUtAXt39WqWaLn95O51VWwbj
      s1PrjvtZIvA8/EYDwzSJgLrrUpuZIZXJ0JPNPu7hPXUsr/Qty7pLWiMWi+F6Hq7nIYBkPE4y
      mUS2CvHCKKJar1NrNDAdp+2a69DhQZBozVhhDoDIMfjx2XebLR61pqenl7NzY2CsNsBzXoVF
      q2lUq4RoKTg6MEI61fS1+2qN1aHWzX+hWuVmEaHm5K618/611kT3CNAe7Rqmu7sHAXw4folx
      22XSaGDn69AImkY7do/UOCGYKMwxPDhEr3Zujy9U7JJZ/tXuL/HnB77K9waPcCy+hf7AxnBD
      pov5e7uMngFM224a/zBs9pcVAkUzY6XjDnowbNumWq2ysLBAuVxu6vcXCkzNzOB6HoaUhFFE
      EAQUCgUWFxfJ5/NEYUg2lSLlOM/Ftdfh88UMg4BK6IJtghAUZMCZc2fo7+nl3U8+wE2Zd63A
      dWqFrz5u8Zsbp7EDGJ4YZGTPHt44eILr7/yYerK5CxB+yM4gQTaV4eiBQ0wsznJx7hbzboVj
      fSMMDa7dirFWqTA2OwnrSZtozUC6lZMuBFGkwAJlG/gDKQg27xs935hj8Ppl/uz17/PLM+8T
      RBEn9uxnx7Zmx7D8Yp7iXIXeVI4Xh/fS3z/QXH09JxXCKoqQQCqRIAxDQs/DtqzntkL6YbEs
      i0wmg+u65PN5lsplLMuip6eHWrWKpxSOZZFdscMqlUrMzc/T29vbdMF1ivI6PCSmadscG9jF
      B+VbzZWdKfjp/AXMKU2YNthMy4CksPBjMFqcZYQ9pLNZDvYO80l9CoRAWwaj0uWImWVw6xCD
      W4c4efgEvuc1A7/rGJFKucSiGdCuxlqD6eICx1r/N6QEVqxIN0gbvZMuYuwf2UMskeD3v/TN
      9uNaa06d/Zh3Zq8QtaqizVvn+NPDX2VoaNtzsQUXQuDEYri1GlJKGo0GQohOQdhDEgQBhmHQ
      1dWFZVnEWoHguONQKBZx74izZDIZPN9nPp/HtG3s5+Da6/D5IgHeOHqSw/GBZrBUCDANwnhr
      dbuJFd6M6bFoh5yfG0MrhRCCV/YfRfotYywEmJLzjTnGJ8dbD4l25sOaaM1PL3y4sZqoEJwv
      TVEqNAvRjvRuB/UA22KlOZDZgtVyc6zkwrVLvL1wlcg22t9HmLD4z1ff5f/9x7/hP/7iv3L+
      6sWma+RZRko0UCiViJQikUi0c9efl2yoR00sFiMWi60y/tDqxmaaCMNgcWlpVWJGT3c3uUwG
      s6P73+ERIAEs2+b3XnuTA7G+BztKSxvIlZpiyxhnczl65epGMdoQzBbymzqk67pU8O85ASnb
      4INrZ9Fas2PbDpKBgKrXjDVsBq2xF2rki0sEvs9f/5cfcfHieerVKoXiEtfmJ9BrBZBNyazj
      M2u4/HjiM949+9HmzveUYto2sWSSRDxOMpFopyt2eHhisRhBEFAulykWixRLJWr1OgiBrzWF
      Uqn9XbuuC4AIw076Z4eHpm3ZhJD0p7tAaYz6A6T4uQGvb91PJpdrHU9Q81ekgmpNMpDsH965
      qcPNLcxRl5u7wN3Ax/c8BvoH+B/e+AN2qMRdgev1EGWXIGGyfXCIxeISUxnFbz54hx+//XP+
      /hc/IRuZJMvh2gE3x2pOUFIyVVl8plfCWmtM28YPQ1zXRUpJMplsByk7PByNRqMptmea+L5P
      b3c3Fs37KJSSUq1GrVZDA14UoUyzswPo8NCsuoJeO3yC7w8d5V8c+BJmYx2jt+6RBDkn2VaL
      1EDSXhEs1prv732Z7CaF1Lzg3qv/ZV4YHOHt997m+qVL/PPH74FlIDa5AxChojuW5ti+w3x8
      +hNMXxEYMGrWCbXi9OR1GiJCzpaRjaCZEroGM/USYzdubOqcTyPLLSLjjoPRymF3XRfTNJ/p
      ie+LQAhBNpslFovhex7drZhAb1cX6ViMRrmMkpJaEDQriG0bHYadAHyHh2bVBCANg6MHDrNr
      127+7Pg3OeT0bX4SsAyW6uVVD2WUCV5zN2G5im3rZPusxY6h7WypiHufX2vSsSRvff0t+rds
      4UpjgVuOh8jfuwAMQPUkkVJw+pOPuS6riEjhDiSb5w0ipG2hUja6P4PjacTSGkJoWjNEgmKx
      0NyWP4MGUStFFEX4YdhuUOJ5HlLKdiygw/porTeVMqu1XiW5nUwkyKXTqFb6bcV1cX2/I8vd
      4ZGw5h5SCMGWwa28ceAE0t+cG0aUXdzqauNY1gHCD0nWIrZ6Fs59dCu6NHqV2Sz33gUIQdWt
      c+nyRX52+j1cWzRlnQcymIv1exvjSBF3NYFQSNuk3uWAbeJEAqMnTagihBeiDUEjZ6N718hJ
      FYKxmMvPFi7xf/74P3FzfGzTn/NpQZomtuNgGgbxWAzXdUkkEgghSKfTLLWClbVa7d4Hew4J
      goDZ2dl7VlCba2T2ZLNZBrq7UZ6HMAy0ZXUav3R4JGzoROzu6eGl3p1rG9E7HtNxi/AOzaCE
      NkDD9mwf/+J7f3RfA5sq5TftAroyP0E8laSg3Nt6cVIQOZtYJRmS+UqBtyu32mmeAKFWdNkJ
      EpZDT1G1dzLrIpoFZyoTY7a4uUD308SyuyEKQ4rFIp7nYVkWWmvsli5NrVbr7ATWwbIsnJa2
      /2KhsO5uIJvNrnLtrMwMGujrIybEs59x1uEL455RpDePf4kjycFVBt/0Iqzy6gBvWlvtoimA
      0Zs3mArK6KSNUQvwfa9ZYbxJXhjatblMHiG4VJymN9fNHx9+fZXvX2fjm5pE3L7EXU1mooTF
      JYpUEoKGVMTna/dOMVWabEOwZ3A7oe8/k8ZQK0Umk6Gnp6f5d8u14XleO5DZ4W6EEOSyWVKJ
      BNVajWpL1nmt1y1zZ4qtEAI/DJttSp/Ba6vDF889JwBpGHz7+Osk/dsXpt2ImqmRLcmIZEPz
      reEjHNrTFHTTWvPxrcsEaRsEXCzP8Jdv/z1/9+ufbHpg3dkcZrS5i9x3JD89/R6ZdIaMtpu+
      //uoAl5XJ0gItGNS64vhdsXWVaMGMIsuB8jyrV0v8tHZT/nRL/+B0Pdp1OurlVafUrTWSK3b
      hn+ZIAiYz+ehtRvwfJ8wDAmCgGKx+JhG+2RiGAbJRIKhLVvwfH/DxjrL18vyJKC1plavEwQB
      QaNBvdVDoEOHh2FTpYSWbXOkZzunSmNgSOopgy8ntzMwsIWJpTleefkottVa+WnN7z49xWhY
      bBpWIVB9KXygTETU6i97L65M3CS0N5/mdsNf4srEKP/29e9xa2KcizM3ub75jgQbI8Rq+Ys7
      0RorgvmlRX7aKFAVEW8NvcCZ82ewTJPL07cQtsUbh44zuGXrU5u9oWj6qFf6qUvlMkiJKSW2
      aVKq1ajWahhCEL+PmM/zwLJRr7cMeQWIx+PU63Ucx0FK2RZ9WwsVRSRjMaq1WrMJTIcOD4nx
      H/7iL364GTfJlq5eTo9eJjSbee+B7/PNE19m97YRHCeGueKCvDZ5k4VaGWWuPm5F+4yO3uDw
      9j3Ie2QxzC/Mc6O2sHmtHSmYKM4znOxm3+69BA2P67WFzb33YQkiVN0li81SViL8iOnpKTJG
      jCtTY+SLBRaycHb2Jouzc+zsH1oz2Pcks6xgSSvLyTAMhBBYltVsXygE1WqVeCxGVyZDPB5v
      7wQ6bqEmrutSq9XaUtDlUgmvldVTqdWotKQ27Na9dKf7x3EcTNPEDcNmPUCjgR2LrXO2Dh3u
      zaatkBOP06Vt5l2XyJK8sevomoUon1w6w97BHSzWyty8cwUuBLOGy2eXznLyyIkNjXvciTV9
      7pss6ALwTPjRlfd4YWqUyerSfXy6h8Q2UX0pSosehBbJRZdGymRmepp5XUfk4m1NpEvBIunz
      H/ONl9/4ggb36BBSUvf9tlqlYRh4UdTe0UkpMWiucJVSxGKxL8T4CyGo1+v3teNY7qm70US8
      XO38qFIu4/F4e4xaa7YMDLTPvxxLmV9cxGl9Z8s7guXnhRAYhkHo+/R0dbHYKcDr8JBs2sci
      hOBfv/n7vJrZwRs9e9iza8+q571Gg3Nnz/DOxCX+/tL7TFbWaZYiBL+eOE+1srF7Zt+uvXx7
      62F2igyJumpKO2uNcMMNg7HalJx35ymaX2zDEqGaAVJsE9eRyISDn3OIRxKVXu0++iQ/xtJT
      2kzGsG2E46Asi0BKpGU1A96t4PBygZht2yx9ATEAKSWzs7OYptmWS4iiaJVo3XIPXcMwiKKo
      XclcKpWA5sp8+XXLUgvQlLsul8trnvdhWd49CSHauyujlWK7WC6zUCjg35HtszwJ2IaBbVnU
      q9XPZWwdnh/ua43sxON89fWvrvmc5Tjk8/M0TN2cVqz1V346ZjGXX9iwp66UkhOHXuTEwaMo
      paiUy8zm57GkwX+9dopwMymeXyCWG9Hobm7Hw7SNWXFZjJmIpHHXTicpLCzTbGZWPaXxgGWi
      MCQVi1HzPNwwxPc8wiii3mjQ19vbXtnKz0m2wPM80ul0U6I6DCkUCiQSCYrFIplMhkKhQBAE
      JJNJyuUy9XqdWCy2anJQSrG4uEgURXR1dVEoFAjDkK6uLjxv853tNksURWvuKlzXpVwuYycS
      mLEYtUaD2B1tUrXW9PU1Nbue9BhLGATNXUynaO2xo6KIsbGb7NgxsioG+8juSiEEViK+uSpY
      waZSQsMw5P2PTlFYWiQKQ3bv3M2u3Xv4xtZDJIJNVAl/gfgp67b8dNJBCY0yJVG25aPVmq5S
      xD43zomuYT67cIafnPrNU58dJIQgCJuyIdK2wbaxUincMGR+cZGFfP5zFY2zLItGo0E6ncb3
      fSzLIpfLtSeERKt/gRAC27axbRvHcdrfe6lUanflMk2T2Aqf+uflvlqeYJbRWlOpVimXy4RB
      gFju/qU17joTUD6ff6KTCaIwxJayI1j3ONCaqVu30Fpz9vRnlAsFfvfRe3w6fZ0PPzzVVjxW
      UfTovORCCPJhfePWi8tECie2QVZNC9M0SaVT/D8f/RNaCg6ktnBwywhSSPp1jLFGCRJPZoBR
      9aZWre6FH2FowVVZJZpXjFp1DAVfrVQ23Ak96UjDIFSq6Rpqfd7Q9zGlRGiNZZo0Gg0c596/
      94MghCCVSpHP50mn0wghUErR29vbDrj29PTgui6xWIxk8rZe1fJ4XdcllUq1/06lUiilKBaL
      JBKJRzbWMAypVCoorVlcWiKZTAK0dyPpdBolRDu2Zpgmnu/ftQsQQtDV1cXMzExTfv0JEoXT
      WhN4HioMoSVu1+GLRWvN2SsXGBgcRKGYm5khqjZI2gbJZBKtNbPTU7iet/EEsOxz3AxRFDFf
      L27Uu+U2QUS9tn4O9EpGF2fQ8aaRvxwscvlWKzPIFvAkZ5es/N7KDex6hG+Y5MqCaVlCx2xy
      RjNI+uHZT9g5sI2u7u5mUPAJXtmtRCtFFAQYLV+2brm0TMtCCUG4XBMQhmQymc/FDaS1xnGc
      VROMUgrDMMismFiXV/Mrg77Lj61c6Ydh2N4RPOpJS0pJPB6nWixiSkmhWCQej5OIx9uyGkEU
      0Yii9n135w5RKYXrus2J7Ak0riqKUFGEk0w+0TuUZw2tNb7rkl9YYOvwMN9681t8+MmHzPkV
      lICY0PiBYtfO3Zy7fgkdRhzcvX99F9DyTF7dZBBMSsm2bEs8LrzHti9u8/7EpYaDZQkAACAA
      SURBVE25gV7ddxR7ZTxXyqfGQLZJxwhjBipmUeyyaHTHkApe6t/JP3z4Gy7MjjE+M8lf/uJv
      mJ6dfircQkopDK0Z6O4mbdvYWhOTEtlKUVRaQytjRUUR1U7AEille1KJwpC+nh56u7tJrjCW
      5kq3SWtCWMlyau3yMZ60a8UwTWId4/+FobXG9zzmpqc49eH7fHr1PFcvX8JzXdLpNDLhkBjs
      RQ/mGBkYYjY/z2RYIZlIsrS0iPHNP/zeD/t7+u76wbRS/Kd//GsGu/rItjT+N0IIwUj/EPkb
      4xTC+j3bMdaUz/TYLYa7B3A2yGVOJVOYNZ+bjaczawaASCHdEC/nQBhhVH32GTmuNhZYmF+g
      z0rySW0KNyY5Nz1KJb/EUFcf1hO8w9FKIYFkPN7saOU4xByHZDxO6Pv4YQhKNV1EYUgmnW6v
      rJ9nypUKQRDQlc2SWJESGkURfhDgeh6R1qsCp0Lr9nenlKLeaJBKJmk0GoRaP5E7gQ5fDBfP
      nePjS2cYL85T1QEnRvYzOj/FjYUpluoVVBhhphNkXcGxvYc4e+sqbuizM9vP+Nw08tbEOAvz
      c3cdWBoGR3YdoNJKldsM0jCYb5TQm5Bw0KZkNChSKt47l/nI3oMkqmukfy7vIDbb/WuzaI1Y
      2Jyc9KYwJFF305dslj0cJShEDQoyIBKaG7FGu/Wlsg3O1Gb49ZlTj+bcnwNRS48mVIrGirTJ
      ZcmCbDpNJh4niqK2cJnv+49ptI+fZa2kpaUlyrUa6WQSx7ap1WosLi0xOzfH1PQ0hWqVQAiM
      FROlkJJqq4Bs2SUbKkW5XG7GPB7j5+rw+NkxMoKKIuLCpEtZXBi/gaWgOLsAuQTOlm7cpRJH
      t+9lLj+PmzBwsimqpTILfhXjq//uT3/49tg5ctqmr6tnle9x68AgEohvckt3bew6pyvTEN/k
      Ss+QVIpltuV6iW2Q0mZaFid2HiQTCCaLC0RSg9IMFDRuvY42xH01gL8XW+sm3zp0kl2JHq6X
      5u6rGG1Nlr+7RoBZdPEyNnXXRSdsdMK+y6WVrWleGjlIz4rf40kiCgICz8NqyULTMkwrZQwc
      28ZpBQEjpXBse1WGzfOE53lUKpV2U3ff89oFZo7jYBgGAc22m6HvE3ge0jSb36UQCMMgUIpK
      rUat9ZwfRTQ8D8txnshrpMPni9uo4zYaJNNpdm3bgS1NxutLiL4MhcUlsvt3IK3mNaS8kB4z
      zrmlyWZ9UqXGXH4eqzeL8daf/eCHBb/OjaUZKDVw63V6unu4ef062WyWVCaz6Qvsl2dPUZT3
      kfIXKerVGsWFRQ7u3rfhSw3DIJdIs3B9jJxvsK9vG12JNFkzxry9uaIvuVhrrrTlxp+nYkTk
      C4vs6BsEPyQf1BBhtLkMp42wDCIDRBCik3azl/LyULQmFUj2Jfr4xguv0J3N8dvTpxjuH3zi
      ZCMMw2hmnkQRpmHg+j4N36fhukghmjUOgGWazR7C8Xi78Ol5xDAMEokEpmmSjMdJp9Pt9NRa
      vY4Xhs1VfxiSTSaRgFSKIIraKaFCCKRpYphmO7feWJ4kOjyTaK0JfJ/FhQVi8TjTExPEEwkM
      KcnPL/D+e+8ykZ+lVihxYWEcq+ITVurEd25BGrcXY7rSQFVc6plmG1HDMrFyKaRpNCeAoltD
      S8G4u4SoeZSKRbpy3WSz9/b9r+TG5C3yanPZPQBbQgfTslisltk3MEw8nmB+dpZkao2mKzRF
      6fbu2sOhfQdImzG2DGxh9/adXJ24iSeilotog+IqyyC11HRFRKZsuo6kuPv1UlA3FH6lzneO
      vc5WmeLF/hEuzN96+EnAMTGKLjqzQqpaaYZ9h4FEDjf0mZ2e5vLNa1wWJUrzefZv2/lk3ehC
      4AhBTy7XzGCJxRCAG0W4nkeiJWy2jJQS8zk2VssGHJquMKU15WqVcr3edAdZFpaUdGezWJZF
      PB4nmUhgmyYqDPF9n5XOzygMCYOg4/t/honCkMvnz3NzYozpmSlK1QqpWIJ3r54hZyW4OnaD
      JTuC7iQzk5OY6QQ7cv1oS6JWCFdqrRlSMcoyRLU8Myuvx/YE0HqGBVXnZmORLmUzvOXeLRxX
      porWqlVGK/Oby9LRGsdV7Ojq54++/BbpTLMRRjKZ3PD90jCQUnL26gX+4coH3Bq/xQ9e/Sb5
      8UmMxTqvDx8iqyzmayX0ClstA4U2JX7SxHYVViNkmAQv9uygx0qi/IBa5DXP3Tp/pVHl1Z0v
      0N/Xj4gUn0xee3hXk9bghrD8I2lNfKGOdkzGjTq1wOWF/h3MBlWqIiQf1OlVNn09vQ933keM
      UIp4LNa+mGzbRoUhkZS4jQZo3c7+qVar7cKs51kYrtFoUK1WKVWr+GGIZZp0ZbNtd9nyd9nO
      CGpJQyRiMSzDwAQMITClJNikqm6Hp5PLFy5w5cZVpG2RtB1coenNdXFrbhpvqcSRQ4fJz89T
      q9cwUwm8ah2BRqGJ4uaq2pDpWxOInjTSvNt23Z4AgpaLoxVQ1aU6R/YeXHeAWmvCIGByYhzH
      trFsm4HuPvKT0yxqd933tRGChqE40j/C9q3bWg+tsRpfh20DWxlJ9ZGNJ9m+dZjDew6ya+t2
      cpksh/e/wIHcINtj3Wy1Mgw5Od7a9xI5bTNRzuPHDaxGiB2Lcau+xB+e/Dondh5kxOlCless
      hDUII0wlODlygCgMKZfLnFu4dbtxzIOuZoWA5Aoj6IUYjZCaA4aGg2Y3E40lZgy3+VopWFpc
      5MTuQw92vs8DrdFhiNcqrlo2WsuBTWFZ+GFIw/eptYx/tV4nnUo91xOAZVkkEommUY/HcUxz
      U24xKSVmK5uqWqvR8Dzsllutw7OJaRhcry6ge1MUpuY4vHMv+cU823J9zM3PM1nJkzFjKCkw
      +7LEu7MEliT0fUTcaU8AQghiPdlVxj+qufQpG1V3W4VgYcQBlWGsXiZwPaKUTTy9thtmmfPX
      LnJq7CLfO/hqu6zdMAz29A1x7dZC09e+0QWqNF/u2c2JA0d4559/y9ahbezau3fTX5CQkq1b
      h9i69fYuxXNd5ufnmJyZ4mphmqyT4MiOfSilSMQT7B3cztXLl1C25MSBlziw9wC/+uw9fn36
      FF8/fJKYHePNY6+R+vRjjhw9gmEaJJIpiktLxBNxBkOHeBjnZnUB1fWIKkRDhbclSXy2hmNY
      nOst3I5RBBGYkrxXbQZdP6dq2vtFa41lGOTWaF/Y19VFuVptqoRaFpZtk4rHWWyJmyUf47if
      FB4kFuK6Lvl8HiMeJ7aOi7TDs0Hg+1w8f46gVidumMhQMTc3x0xUIxq7iTYlSlpEaYnKB8hl
      d07MhtjGCyytNTvj3Xzl2MvN97z1Zz/4YaoYcHR4Lzt7t7Krb5DFhUV29QwyPLhtvaPwdx//
      hiU7YnRqnP2920im0wAM9A1wpHc79VKFBa/S3FGssbJ3KgFHB3fR291LV1c3KooIfJ948sFN
      hI4i/vrSO1ytz1OQATNBhWuj1whKVarVCvniEvVajX/1+z9gy5atGIbByJZtzExO8pszp/ig
      dIsrUzeZ8Iq8vu8Y6UyWSqnE25+8z4Hd+9gzNMJgdx8XZm+inEe0/bZNrJJHkDRpZOym8VcK
      K9B8JbmdQz3D5JwkW/sGsDYQ2PsiiYIASdOffWdmjxCCmOMQBgERTV+m1VKvTLVkGDor1/uj
      VCrh+z6RlFitHVeHZxMVRfz2t79mvLpISjazBKOETTFySRg2OhPHGu7FSsYRlklogGFtLr6m
      tSZdjfjGiVfb96HpeJqKUOzevx/TstBKEbccdu/cs+6BLl+9TMVrgOPghwF/99nb/H7wJZZq
      FXqyOT44/TFDQ9vY37uN0blJFrwK0zRui7cJgZe2+PuJz1BaMzQwyN+++wte3n6Aw/EYUaRI
      ZzL372YxJIZp3O4kJgT1rM1ZXYRyEbSm1w0YHxtjZE/z85mmyde+9FVeWJjnr975KX3pNK8c
      +xKxRIJKpcyPPvgFEYpIKzK5HIvlAv0iwVToN7N4HgGBKRB+M7ferkfsSHbTHU/xfn6UN5NH
      OLn/CInEk7N2NiyrKQEhBEtLSxiGgW3bq9UpRVOszzBNNM3J4lHp6j8vaK0pFotIw6ARRZ2U
      z2cYrTVjN65jSINaUpJIdiGXGlj9OVgooqQg8gJCoTBXXAN2avOeCK0U+we2rdqBGv/H//rD
      Hw5n+/jZmfcYzPaSiCf44MwnpJw46Ux2zYH+6tN3qVWrRI5JFDdpmIrSUoHR2XEuz4xTK5UZ
      rSzw7Ve+yr6RPaSFzejMOIeTgyjPp2aotn/7RmGGC7euU7UUM/UiZy9fJCUt+vsH7lvkqlIq
      88n0dfQdDd6XdyCi4mIGEZValYFsNzNTU3T19CClJJlKMRDPsH/nHrYMDAJw4+YN+tM53jr2
      5bYBVkHIi3sOMjU9TTny7plSuilCBaaB4UWEKYtFJ6Lg19mT7GN6bpa67zLUP/jEyOoK0ewK
      54Uh9XqdRqsZi23bTenuahU3itrj9TwPHUWYpvm5icI9ayzLUFdqNQKtm3pLT5DoW4dHh1aK
      S+fO8dHoRWbnZuiSTXn1RuQT781RK5SIdWeoTS9g9mUxnQfzBEQNj+Pb9qwSODTe+PY3fviL
      qQsUwgY7kj309vSSdhL0D2xZV7yrtLjETbN+O4VSCIrCJ9KaA8l+dg0Mkc5k2LO9mb6YTWdQ
      5TqzjRLT1FcZTW0IAkuAHxGhSNUUt6p5tnX3k05n2lonm9riKMXpaxeIYuu4Z2IWXtJkZ6oP
      v1JjobzEyPaR9rEDz6On77YsRjqR5P0rZ+mKp8hmsszNzfIfP/k5V0av86df/jY7Et3cyE8R
      Pex9aRlgGeiYiVX2UX5AaMK89CjFNRN+kfGJcfYODD8xufTLhV+mEPT39WFZVlPSuF4nEqJt
      /IWUoBSZVArLsp64moYnkSiKCMOQuYUFpOO0xfY6PDtopXAbDSzL4tbYTS4sTpAY6kMJqNsC
      q+yiYhbVmQVyO7fhLZVJZjOY2eZCNPL85qL2PhaguuLy2sGjq64lcyaq4TsSs+Bx49Yocctm
      +46R22+6Q2xqcWGe96evQDZ2l4vGcwSh1Lxw5Cj2Cl9ltVLh3fx1dMxaP48+bjFUNRkYyKIF
      OIYFWnP+6kXypSXePPnGPV1Chmli2TbeRo1WpORqcYb+VI5cPIXnucRiTddF35Ytq146OnmL
      qdLqvsLKEBzftp9UJkM6m+VPnRj/+dxviaxHsDoLFWHKQuSr9NYl20e2caY6g0IzKctcu3WD
      owePPPx5HhFCCHAcFsvlZrtC20beMUFprUEpqtUqhmkStDT6jc5qdk3q9TqFYhGkxIzFOqme
      zyItu2YgOXTgECqMmsFbpdB1D2dLN4EhSaeT+HMFgloDI+Ggk3EEEFUbvLnjBUZnp5gQ7qYn
      ge546q5FvRklLShCmI1xzVskMzHengAa9To3b46STqYIUbx79QxzUa3Z5GQdA3v11k2O7jrI
      1m23A8jxRIKtIskUG+jBGJLJVEifbfLKC8e4cO4cx196mV+PnaUhFbsnx9k+vGPDD+jEYrzc
      PcLF2THmk9G6PvpKQlBRJSgXyF6K88rxk6tfoDU3x8f4aPoqx7btZfvQMAD9ff18c/AQ2/q2
      oFptB+OWjVSaR9L2wjJwqiGYFvVsjP6uXv7Hg8cIwpCG55JqBdqfJJqBpPXdOoLmijaKIqRS
      SNMkpjVPhjPryUKtUMc1HOeJcfl1eLRMzUwxVpzn9b0vorUmX1rCCCJiSxUaSiFNg3h30/0e
      29bs/qa1bqon1wPCap2+nl6GBrfyo3d/ebvp1D3wo7sVE1oKZBqzEbInO8jrr3+lfcL3zn/C
      1NQkr71wgsnSPJNmA7HR6loI6v1x8tUiW2lOAFEUceHyBaZVjXQRKtkN0kMNyVRQIZ3J0tPT
      y9tnP6RhA0j+5tK7/Esp2D60ff1PqDUH9uwj9DwW3Ck2lKTTmmPxQU620qFWEgQBf3/hPXyp
      +aMXv9IerzQMTh59icD3+b9/8v+RSiQpRR7dOMypANBNueqHwAt8dG8Cq9jgwvh1tvVuobe/
      /6GO+UUQBgHmGu4pDdiWRSQEruvSs3Vrx52xDpVKhcVikXgq1TH+zyBhEDB2c5Sr46P0Z3IY
      UnL+7Bl2D4/QUyhwpnyN5K6174/ID5i7Mkq6t5vXtu1r19+8OrKfd+auI+17u4Yjre7q8SIJ
      IvoKEf/z1/6Eb770+ioxuKVaGbsrzd49ezm+5wUGQodj8aY+jhmso5Rpm3wydplfffQ7Jqcm
      8VyXX42dJS0s/s0b32s2dd+AfFBlenqKnu5uan6j/bhvCf76wjssLebXf7MQWI7NZ3M37w4E
      34GRr2EiKJfvVjttNOqkpM0f7nuVXFf3Xc9Lw8CwbWali4PB94+/wXf6DrKrYj9Um0pRqOM4
      DqIRoEt10qHBlYsXHvh4XySmZa1yF6ooQrUaxmityWazDA4OPsYRPrkopajX65QbDZK53Co1
      0A7PBmEQcO6zT/nk0lmihkdF+Vy8eIF8YZFYIsGZqxcJKjX8cm3N95uOTbIrh+xJc7041xRh
      BHYO78Cqr7apWmvChrfq70Q94uTI/vbfy/eq8X/9b//7D08efYnxmUn++qNfsb9/uO0T9wpl
      Rvq30tPTSzwe58WR/QwPDpFqKMyIZgvINfxPUmmCSoOTLxzDNE3mFubYlusjF0typjC+4SpZ
      o9mb6md8YYYbU+P4yds3gzIE9UKZA8O71txFXLt+lfO3ruPXXaqm2lC3RydtpsMKqlJn99DI
      quccx+HY7oP0da8tv+A1Grxz7TQvdG3jT1//DqlkCr9WR9kGE43Cg2cGGYKMMkk2FANmEiOC
      7SMjdPfd3a/hScSr15tdwFZ0CQt9HxUEpFKp5uT2FHyOLwqtNZ7nUavVqLhuJ8f/GUVrzfuf
      fcjY3BTELEzbxkdRDlzSXTkWpqZZzOfRqRhOdwbDWjvu0yhXMJIx6obi6o3rHN6+G8MwqBZL
      FKolItFMuhDFOl8ZPsit2SlwLKJKg9878hoDfXd7EsxcrgvdKuU3kRiyufUMfZ9jx060q8yg
      ufKNGXFePn6So67LwYkx/unmZ7g6AqvZqcsIFK9uOcChPQfajV5+8LXvIYTg8pVLTY39jfLn
      lSaX60IgqGRu3PX0ZGWRMAzXdDecmx7lWlSAnIDNeJk19KW77n5cCKQQnDn9GaFQvPTiS6ue
      jiUS/NtXv0tfXz/SMJiemuRvL77HiJ0jG0ApCQ8k1G6bLEmFWCgj4mle2bWf3v7+ZpFcEOA8
      wQZCa03k+9imidtoELouiVyuKRsBz5wYnGpp8ieTyfvKzFrO8PE8D8/3caMI07I2jKN0eLrR
      ShHWXcxQYyYsRNyhXq6QGh5gfnoBpy9H6oURhGlgWCZRECKkWOUG9OsNsJsTgxCCetLg7979
      Nd956cu8evQ4xzyPiZkpFspFDp84TjaTpa+3l08vnycf+e2uc3cm9bSnmj079zA8uA27dSEq
      1So4WHHTeq6LbdtomvokH187T5+26Ev0EsYMrpRm+PK2gxw/sDrVSAiB73mMFWbvXTwlJYHv
      05XNrrnKr0YenuetOQEU3GqzV/AGxMo+aWzK+Hxt33GOHVg7q0ZrzZXpm3zt+Gt3PSeEYGDL
      bXdGoCKCuEEiluQ7gwcZW5zh46VbqPXSUTfCEOjBLAtC8M7N88ibFzi+cz+5eIodu3Zv2D3t
      cRL5PqqV7ZPL5bBtmyAMScVi7YYoj7LB+uNGa40fhkSVCj3dd7sJoXkPSSnbN53neSwVCgRR
      hDRN7FgMu5Pi+cwjDYPXXn6V9z94DzsRp9Rtk0jYlK5NNAUSk3Es06RSXCSxfYDFW1OYcacp
      mOk4JHpyRF6wyngLKZl3In78yTu8MnKAbYNb2bdrDytF9VPJJG8cP4nne+sWYa6yUCuNizSM
      ZlFPuUQqncE0TbRSlJYW+ejsZ/TmuqmpgKUkQIN//fL3eNP3iSUSzQYhK9w8Wmv+8aPfciVY
      urecsoBzk9dJWA7YqwctvRAloFwptyWjl4ManutS9ur3bBSfEBbHBncxuGUrg0ND6958S4t5
      Xj96cpWhX0kYBKiW/PGOoWHeqhzGDwIs28bRkqwVo6CD+69mFqI905e6JdZshVOnPyFjx+nq
      7qZ3YMsTZzCUUviNBiiF4zh0d3cjpaRer1OpVHAc55lrBmMYBplUisWlJYIgaO9wlFJN11cY
      slQs0tPVRaFQaFZDK4UZixHvBHifC7RuNqwKgoDPLpxlya3hLi2QiHrpF3HAJMokyAkHt9rA
      zKaIvADpWNi9zSyg0AtYnJxBIjC7V2cBCikoxDQ/nThHfPQc3zl0kq0Dq1PZpZTEYxs021rv
      ieV+tM2kn1aXp3gcwzBwDc3PFi5BwgAEE6rKf33/F3SHFiPbR+jt6SXbddu1UqmUmawXYDM7
      ZUNyfmmyKYSWWb0t3mXlmCsVSKVSVMplHMfhp+//hrdOfgXf825LQGzAkqMo1avsz2U3rKz8
      5MZFEraD0Jqtw6szjyrlEj/64BdUAw+XiEEnw9f3n2D71m1EUcTC3Bx/fPgNzoxe5srCJLW0
      8WDqoZFGZ+J4lk+gJZVSmemFOY4efhHYXHHcF4FWiiAIEDQzqBqNBlEU4bZaGWbvEI17VrBt
      G8s0mZ2bw7Ftenp6qFar7SreWqOB2xLxM2wb+xn8Djqsjdaa0bEbXFyYoHB5jNSebcSV5M2v
      vUUqmaJULPJpqcxMuYg93IeLi5OKI+/w/xuOhTGw9g4TWtr+toVnwz9d+JA/7/ruhoq7K+9D
      rTXGf/iLv/jhRsYpHo+vKh7wXJcbFy6xiNteqSIEpdBFVjw+nL3GVw+/3JSurVSazeXf/wlV
      a/PZMcqSa4qtJTD5d9/973BiMRzH4dL1K7xbvMmQmUaFEWeLE/cOwEqB6Sl6E1lyXWv4/1ts
      yfawZ/su0nc0xVFRxN9+8CumRZ3QkmAZVETI3NwsR3fs49RnH7Glp5dt23ewZ3gnw5lezsze
      fLBGMlKgbANtmygVcevCVaTSJGNxLp0/z5b/n7337LHrTNP1rnfFnVPtypk5SKREiaKkllqt
      jtM9p8cHmIENAzPAgb/5X8zfsAHDMGzAxz5nYE/3THt6OkjdCpRINUUxiLlYOe6c1t4rvf6w
      q4pVrJyLVF0Au1W1V9qr1nrD8z7PfXd1rVmtva9IiVOvo+s6iqpSqVSw5qscF1jQCXoZOwLL
      cXAdB7vRaGZnCIEPaKaJEQweOXd915CSkaEnXPvqGulwnPffeY8zXQOcOn0GTdP4+OonjGdn
      CKgadlBDj4TwXRfV0PFsB8dzUANbXxNy8XGyZfq71hDxfA4hBJqA9fPll+DYNnfv3OKBm0OG
      l08rhOszo3t0BFrQDIOrf/mSTyfuoQgFJ6yxvVXR5XTGUssyiJR5KQrHsbk3PbK57BshyPoW
      ff3rF5WFIpFVR+0TE+MMO8VnvgDztEWSfPb1Na4WnhKeG6Zv+imv9pygNdmC4vr4OzGS0RRc
      JMWkxohdoHV6EtXU+eLTT5hwy/zNuz8meIDx9UathvR9pO8Ti8UAcF0X3/dJJBJUKhUymQyp
      VOqlUgNdsLkUQmDEmrIl6nym08vyHY/YOsVCni9vf80Pv/9DWtvbF58F33X57OrnOFULy7PJ
      1Rvo7UnqpQqOkNTmMvg1m0DP9syfFEPnXm2W47MzdLW1b26fT7+5jmM/q9BdqEasVatMjI0y
      OjZCpVTCbjTQDYM3Ll/hQtexFQ2gZ6rYIY24EgDfZ7qWx4uaOBF9++YpzzFXKS5bCKnZjeaa
      waN73GvMbfo8NV0yPDG67jarvsBS8u3k0xXfHaDmNOhp70QKqIQE39oZPn74ddPLWOw8w8OL
      B9B0nYZV53Fxhs8f3eaL4ghtZpRysbDj4+8E3TTxfZ9kMkk4HMZxHHzfJxgMUiwWUVWVcrlM
      qVQ60OvcTaSUlEolMvn8YvqmoigoinLU+H/Hycxl+Mn7H9LWsXy97t63d5kozOGmQgSPdWF0
      phC6SsO10cIBzHSCQG/rjkT/XE0hV8xventt1C/z1R/+K2dT3agSzved5NbQfcaqWeZEo6nL
      4woMReVy10mKpRKPclMQWsW9y5foikKpWORxNQPm7i52jdXyVMqlRZXSV0+eZXh2khFvFpTN
      LzL6msKv7n/BP4SjpFItm97P8zyeFKZhlfa83KhxrG+QX9oNxnOzAHTEUgTDYf76wvf43+9+
      vGM7STes4+mCkcIsqqHgC8nY7BS350b4uys/pqt7c1O/3ca2LDra23Fdl6mpqcVsH8/zFhdE
      29vbXxolUMdxsOp1yo0G2pEz1xFLkFIycOzYCg0nKSUzmTlCiRhOtoSaiBDpaqU4No3e9kx1
      eafPknQ9UpHVVZxXO4f647//23+cc2tM2SUm7DLfTD5mkhpVTTbj1oqCpwlsFZ5WM0w5ZZzA
      Gouatsf5aCfHTpygUSwz0Sju2ugfQGoCUWkw0NnbjF9pGn0tHXw5+XDLjaurwNDkKK90Dq6a
      UroavudxbegujrbyO7WqIV4dPE1bSysnegY40TNAR2tzGiaAe+ND2Or2q4SB5t/D0KDhIBMh
      xGyZcmsAJ6gxOTmJ6Uha0wdQNOZ5aKqKZVl0dHQQDofRNA3XdYlEIriui6Ioi5lAL3qDWapU
      KNdqR4VbRyxjUa8HVqzNCSEwhEK9WsXvTqLOr59WiyX06O6GbwdCSRLPrV0+z8Jzqyz5DSii
      qdi5VixdiHUXMw3LY7C/Ka88kO4Cf4cN3irn/yo/wpORIaB5wzVNaxaXbYO86vDV/Vub3l5R
      VSL6KjMNKemIrT2TiESjtJm7aOOXioCqIPtSzb+HEOTdGg+Hn2A3Ghvvv8uI+Vz3tra2xXxj
      wzCIx+MEg0HS6fSy0f/zxSgvElJKrHr9yJP3iBVI32/KxCwZ/S/ILtRr3pJOfgAAIABJREFU
      NW48ucdkLkP+4ShISfbp+KK8865dg9XAdb1Nv2O7mkJixw1uDN1jbGKMSqmE6u3+i+5rCr99
      9BWVcom/3Pma//P3v2r6D28T23M2va0iBAPx58qpfUmviPDu+Utr7ieEoDOa2pFO0Jr4EjFb
      xvd9jIDJvQf3KOZzy9Z19hLp+wQMg0gkQqPRoFQqLVO1hPnRz0tiBp/NZnFc96jxP2IFqwn4
      SSmpVSrcvPMNdlgj2NtGqKOlqeWvqc2Cr11EjYb448OvV/1sITlhqd7brouND+emuTP1lC4j
      hiZ8PGP3i17Kms8fbnzObLlANirZlOzDakhJd7x189sLwRunXiXzTRnXc4kHwgykOzl7/PSG
      CzdvnHqVqx8/xA/vfkOoNTyiVYnUbG4/uMtHQ9/ws1fepjOZJpZM7qkVo5SSarW66Ar2fNrw
      aryojaeUsln09ZJ0ZkfsDwIYefwEX1cxohFEvBk6DCdiWOXaroaApO9zvq13U+9YU/5nNxGC
      fFhCMMAINih7Z2ZxvzCJjAbYUXqp5dDVvjWFylg8zt+9/1fNs26yIZvLzPH5tzfwQ3ug8igA
      RZBvC5AzyxiVOmFPx6nW+MPIVbr0KJfeukIguHY14E6QUqKqKpFweE29kcVLfcHTI13XxXEc
      jJesqvmIvUFKSW5mhn/+za9pe/sVPNtBCQUQlabKsR4MUKlUNlUfu2mEwGH1kPjzUtCwyyGg
      hQtAVRZj03uFjAW3f3wpGVRjfK/jFNFtmKwIsUoG1Bo4jsM/3fiIe15uz+6H0xpGhg2oNnAD
      KjE1wN1v79IXaeHa47tcu3Ed398Vy5oVqKqK7bqLaZ6WZZHNZoFnI/1SqYTjbD7UdhiRUjIz
      O4saDB5p9R+xKaYnJng4M0b0RA+aaWBGw01BzXgE6UvKmRxmMrar5xRC8LA0u2bK9fODs0NQ
      RrqHSAm56orYu+pJfnD6Dd5/45097aQApqYnKYg9jMcv0Q7C1BH5GhN2iWIIPh39lkZLkM/n
      HvPN7W/27PyBcJh6o0E2myWXyy2GgDzPI5/P4zgOlUoF13WXaZG/SPi+j2VZR+GfIzaF73mM
      Dg8zXS0Q7V4pw1yeyaDEQlvy9N00YZO7w483tenL2wFIiTpTJu4uT1kVrs+lcDftm6yU2wmu
      bXNj9MHGCqhr4cvmP88He30jHQBMDa87gRs1sBoN7FQQaaiops4fZu4xMzu9vevYAKGqaJpG
      MBgkEAiQSCRwHIdcLkcoFCKdTpNKpV5YQ3jbtsnn8wSj0Rc6hHXE/iB9n9s3v+b24/so4ZXh
      QqdWxxUSZbvtwoYXIEmHV84sVgvBvtgdgJQYFYdgxUVtePT4IfTGfPxLCGQyxJunzqO5zRFn
      vCG4khzgh+98sOcjf+l5/P7m59xvrONgthGWgz5eQCtYGLNVRGMTnYCmQNDAbgku1g3oDY9A
      oUHA2JvYtfSbVnMLNnW2bVMoFEin0y+FCqjrujRcF/2Av4uUsumvsI0ZlOctDwH6nodVrZLP
      7OD5PGKRhZltrVpl5MkTHj95TKijBSMYWLFdOZNDT+xiWvjzuD6RcGRZ1s9aA5cXc0i2gIQ3
      04O899a7VMolYokk/+VPv+GJX0Q4Hr6mMFLJ8lqki8fVOf67Kz8iuYrF465flu/z2798ws3K
      5I46GkVAKhQlIxsM6HFG8hUaraFmw+75zQ2EeBbiWnouRaBkKpjhEJbrcKX7JPHE+sUh28Vt
      NOju6gKaD3ixWCQWix360fKCaqdhGNTrdTRNQ9d16vV6U6fdMFBVlUKphHYIir5mJiepVCu4
      rsPpM+e2JBnwfCaYY9s8ePyA6PysJtHSgue6SN8/CnNtk4VBkOu6VHyHlt7+FTkq0vPxlb1N
      huhUQnR2dGy8IS/6DEARPKzNcf/xQ0LhZo96rr2fWF0Q9zQuaq1MFbKc7z3OSSVBvWZtcMCd
      I32ff7v+5x03/gB+UOd4Tz+nYx384Ec/5kSsHaXaXE8Q2WpTxU9KWssC4Ty3yGvZKEGTk36U
      iz0n6O7s3ps6BJr5z9VqFcdxKBaLpNNpQqHQgTeYG2FZFplMhqnp6cUOAEDXdbK5HNOzs4xP
      TSEMY0f6LLuBlJJ63WJ2aopKrcrD+/dwNij6W2+9JRAMEolE6OjtJl/IU8hmuXH9GsXCwepK
      vagsaEG5to2u6xgISk/GqU1laRQry7aVziZm8jtAYfMdjPrjv//bfyzUVzcifhGoCY8HxSkm
      hkd4ZfA0relW3hg4g5erIOs2F/pOoaoq5869glDEot/xXiCBz7+5xrXS6K6FmAqNGj97/V1a
      WtKcOHGSUM1jLpdBVRScgIparGObCt7zxXASjJpHzAjxi+//hHRLes/CXq7joKsqtm0vmsEs
      ND7PT0MXHszD0DlY9TqW45CMx4lFo00T+3kfg1K5TDAWQw8EDjzrx3Ndhp48IhAIoBo6rZ0d
      tHS2MT0xSSKeWLyXjXodq1rFDASQUjIxOsLM1BSKEExOjhONRCkVCoyPj1Aqloi1JNENHddz
      KRYLhEIhuvvWV8k9Ym18z+P6V9cYHxvD1gWKqSOBUFuKer5ENVekVq5gtiX29Pkv1y3SWpBE
      bKUm0PMc3hmA5zdNYTaDlAy29yCEwKpW+eLr61x6/Q0eOwWGK3O4DRvDNIkn1tb/3w0E0Jlq
      27Y0xTLyNbSGT1lx+b+u/juT42OoqsqlS29yrr0fyxC02jrtjoG9WvtUbzqWTbglynuswqmo
      KrVaDcMwKJfLWJbF3NwcpVJp1Q7gMDT+0EzRDRgGvudRKBSwLIvZ2VlqloUxn+550NcqpWR8
      ZAQXn3K9SqVQZG5sEkVRMCMhbt24sTjKHx0ZZmZuBt91eXjvLnokSDSd5PY3N4m3tjAxMUY2
      l6FzoI90TwfBcLMAKZ5K0tHbjet5TIyOHOTXfaGpWxbVSoWJuRlCA51EB7uI9jUVQRtVC7Ul
      2mz893g2KYM6d0aHNrVWdCg7AKNs0+8EuaS1EnE3uEQpeS91nLfOv86Nb24wPTnJ1emHVKsV
      fn7+CreKE+RKBWZnZvbl2o/1DfJGom/HOkiKEJyuB3k/OsCHxy6SbGlqhAsheOvca/wodRJN
      UZhMieXaTUWr2QHpKq6pcC7UTmyPYv8LaLqO4/vk83lqtRrFYpFEIkEoFDq0KZ+FQoFqtYrr
      OFSrVfL5PDMzM9TqdWwpMQ+Jf7GUEs9z8TyfnoF+Wnu7GJ8YR0pJLBFHDRp4bjOkYOgG6c52
      JifG0U2TSCxKNB6ja6CPuclp0l0dtPd1r9oJC0Wh+1g/rrc39SLfBVRVJaDpJE734VQtxBJp
      cKGIPQvBurU6TqaE9Dx8x0W6HuPl7IqF/9U4lB2AHdaoqB49PX38w1s/o4sQqu2tegOF7XG+
      /yR3Hn3L76a/5Z/ufgqe5ObQfVrSrfQ1AozMTZLLZfatMfrhpe9xIdi+oz+4HzWZ8mtYmTzR
      YJhQ+JlolPR8Oju7mLZKYDnPBPpkU8FVKdah4dJj6XT07oNEtBCY4fBiVXBrayu6ri86gh2G
      3H9/3ray0WgsehUoikJba+viYrDQNIKRCPq8qctBI6VkbHiYcqVMfjZDZmaWlrZWvv+zHyOE
      oFwsIl0PVdPwXBfDNACJMDXE/DMhhKCtu5NioYBQxLoyHY5tUyoWefLwwT59w5eHulUDwHJt
      Aqk4wfTyQZci9q6pNWou5yLtBGaqnPQinPZjvNl1gsz8gGy9d+9wrgEIgaX6PMlNcrall7fP
      voY9OsuUW1mmRqq6kp/2XWCwd4B/vfEJVUMiELyVGqDWqHP+5FlO9x9DAsFgiNR+ZABJie+5
      RLUAt2aGt2cFCc0sHtenJjzmMrOcP3l2MYavahqRaJTKyBRz2Qwy/mxdQ5kp8XrbIH6xRm9b
      J76A7q7uPW/QpJRI18WdN0g3DGPVB+8gGlbbtikWi2SyWexGg2wuR8WyUAyjqZ4qBI1Gg3A8
      fmgaf4ByscjE6AjJjtZmRpKm8ejefepWnXiyGUeeGZukva2dx08e4bou0WScUDhMOPaswl1R
      FJItqRUa9c+jahrJtjRCU5gaHScUDm9aKv27jJSSx48fUSuVeFrNYiRW1otY+RJKePczyazZ
      HBEbzh0/xWuvvkZXdw9tbe0kUy0omkbNsrAsi4Bprtr5H84OYB5fFUzNTHGx/xQnTp5Cq9QZ
      ruUWUx8/aDvFm6+8jus4/PHBDaShEhE6P3v9ewQUjXAwhBkM0t7aviuN/+zMDKNT4/i2TSQS
      WbTSXNC/qZbL5Ap5/rc//Zq8VaZSre5IDM/BpxaAiKuiOZJ0a+sy56loJMLN7AhKyUIaGghB
      qq7yzquXeOuNtzhx8hQ93ZsThtopiqI0R9dS4joOjm0v+gAvcFDx/5plUahU0EwTbd6g3QyF
      0HQdoWkouo4RCKAessYun81imCazszMkE0miwQjJZArfdilmcziuQygaYWxoiO7jAyRbW9Yc
      4W/U+C/FME1C0Qjjw8OkW1dWsR6xHCEE6XQrQw8fMTc3h5mOr4jz18tVlPDuDS6klPi2S6qu
      cKqzn2Q6jbnguz0fehJCoM4/455tE1jFkOnQ1wHMKnV+dfUP9CTaSIXjXMgkmcxmCAeDXDx+
      FljQ5mluX1Y9Prp9jWK9ymdDd/hPP/vbXbuW+2NP+Dz7BBRB370Y7x57hcnZGY719vP1w7vc
      mRsllohTi2o88YoQ2WGDYmogJVO1AsezuRUft7d3cCXez5flUUS5jkyFySdUiqUS3f39+566
      GI7HcW0bz7LWrPpdTZBqrwkFg8zMzCBUFUPTVmjHCiG21EDuFx3d3QD09g8sy0SKRMJMz07T
      0t6GpmmMPB6ib5dDbJ7nou5h2OJlQwgBpk6otw234aAryrL3z/d9tF187p25IpGiw/c++JBw
      JIKywfO71pkP31P/PELw0MvzMJNr5ll6HsQVMrLO1Ts3+OGV96lWq/hLQi0PyzP4mgJC8tFX
      n9ESjnHm2CmMHVgSeq5LSDUWhe5GqTL6+CoIwSe3noAA2RIizy6LngmBGzG4NzXMucKrxJLJ
      ZZ+9feUdZn+fJ9MoUC5aoKrNRd8DCmMoqkrNcdDr9UWD+EqlgqIo+1YbIKXEsqymR4JhYNs2
      iqahv6AFTksbfyklI8PDRFsSTI2O0XtskPaezj1Re83lcvi+v6G893cd6ftUSiVGhoYIphNY
      nocRfvb3cOoN5A7tYJ9HT8foS0QIhcPrzlyllOD7yBe+EnhhlL8gfCYlUn2mNimNZw+pF3j2
      tb4sj0JRUrSqvH/p7W2dulop809f/oFJWV0e05//b7kHngfLMDUyssKdu7d5+53vLZvimYEA
      v/zRz8nmMty8/Q33yzOEI+EDi2MrqophmmiaRq1Ww5+XiXjeJGYvEUJQqVZpuC6NWg1V01BU
      9YWNZzfXlTwKuRxzszPouk4xk0M3mx3awInju37OsaFhwrHIUQewDvVaDddxsKwa1299jXqi
      A9eTBJ9z+arM5TBaN87J3wq+ZZPuSK9btS2lpFGpgBDYUhJfRfn4xekAniPoCN4+8xoAuq6B
      z9o5TYrgq9wwrU9SnD52csuN48ORISZFDdZ7EaREcySe9HfkULYqQuC1R/nk0S3mGhWOt3Uz
      MHCMyHwZfzAUoifUR1trO123viEYPNgURtUwqFQqlMtl4vE4kUgEy7IWTeL3SxTO9zxC8fih
      i+1vhVqlwsTkOEJRKBQLDJ48jq4bqHslJDZPNBHHkOoLK+C310gpuXnjL4xMjJHs7STv1UlF
      V66XuPUGvrq7a19ew+Z8tJPeTRbtBU1z7aZx165qHxGuz+lIG+FIU/7h6ewkqOvf4IYq+dXQ
      dX7zxUeMjI9sKS0xV9tEIZUvSWRthNI0rt+LnF/ZHuVedYbff/kJH3/xZ6YnJpZ9bpgmly6/
      RfCAc9g1Xcfzfbq6ujAMA2s+E2F2dhbYH0/gVDKJqWn48/aNhyWzZ6sEQiEEEA6EGOwdwC5Z
      TDwZ3rN7KKVkYmSURrlGV2/vnpzjZUAIwZV3v8fPfvwznFKVSHr1ItPyXA4jtbua/0jw3Y3l
      JHzPIxGLkUokFsOxz/PidQBSEnYFP3zzvfkfJY8yE5uKefuawu36DP/520/4y7db0Mdfp6hL
      KdXBa+bfF1oMotMWiZLXvB5f7m5HEDQgYlLvT/J4doKP/vwRtUpl4/32GSEEkUgETdMolkpk
      83l8Kfc1lKBpGqlUCs9x9qwAZz9QFIUTp87Q2dNDS1sbnT09JJMp7EaDQi6/6+erlivYFYtT
      Z84euP7RYafRaPDpZ59QtKoYyZXhFc9xcednvbuJYupMl/PY9fqa20gpwfMIza8NrfXuvXB/
      YWF7/N1rP1i2oCvl1uLLUlf5ZOjWphuGi8fOoNRX6XE9n4Q0+HnneQbcEL7v0xFPIasNkjmH
      6OS8YNtuIgRoCrYGM16VQmH3G4GdIqUEIRbXADRVXSzAKhaL+1YUZts2Cs0Cp5eJto4Oxh8O
      4ToO7iZGgptFSklmZpZTZ84euP7RYSc3N8fvPv49Zd3H9Vb/G6i6RiQRp5HdXSkWIQSFEExM
      Tay5jWvbRILBDTufFy7A12cmaG9/JnUqgLARBG/t3nA1HE0wMz1Ne+fGnsAt6Vb+9uz3eDI7
      Qc6uMJmdpTOS5HLvacxAgI6OTi6cu0AxnycYCjExPs7U+DgTziSNqoMd3f3sEz8WoIsoN77+
      C47t0Dc4eHjCHAt1EfNm8YZhkIjHEUIsSi+H9ihMJaUkk8mgqirlSgXmi9JeJhRVZeD4Ce7d
      uwtCkG5r3dHxbNumOJdFIBjsGzzyPN4Az3W5+/QhfleCsKKw3igvmIhSzRd39fzS9+lSI/T2
      9K36uWPbhA1jcfS/Hoe2AzCrLkHDpKA6LGSx9soQH164vHxqKgSDyQ4eza3tuRtw4Hg4zWQ5
      R96cny0ogodPHxGLxahWK82ClzX2F0JwfOAYxwaOAVCctzlsbV/uKpZINYvNjp04QSgQoG+g
      nwf37/NVI9PM6d9NTI2RTIYfDVygXCpiNxqYh+TFFYBl20jfxzRNAoEAnucRCoUWTWP27NxC
      EAwGqVarBIJBpKYdno5xF3BsG03TkL5PS3vrjhv//FwWTSr09Q2+0Gsl+4aUfHXjOoWwwDCD
      879a3gH4noeVK6KZBkYktH01gDVI2ArvXXpz1b+V57qovk80sjnDmcPZAUiJaLj88sIHZCtF
      ZuZmiSXjXD7/+rKpqee63Hp4l08m78E6iR5X2k/wSv9J/umzfyduKxR1j0gDbnrj3Ph0gqAt
      effEBV45+8qq+3uuy7/8/v/jtTOv0D8wuNjQr0drR0ezBD/VwuQff8OUcJrVuruFEHjJIJ+O
      3+eHZy6tMPw4UIQgGInQqNUI6DqJeHxfs0kikQjhcJjp6WmUFzgDaDUmx8epNyyMYICOnmah
      2HaL6/JzGdKJNIFDInz3IlAqFJisFQikWpG+xJ7O4SkQ6mgBwHMc8uMzaMkwtl2nNJrHaNm9
      FFDp+3RG0ms2/r7j0LaJ9mmBwyEFMR8zXsrpcBuXXnmNjvYOjg8co6e9a0Vl3a+v/oEvC8O4
      2hJnrOdvjJT0mQlODJ7gtVPnOd/RzzfDD6mGFBxd4KpgaTAzM01bKE4ivlI5U1EUTg6eIJFM
      bvpFU+Zz9XVdp6+lneHRESzHbl6jts6IwJfgLnH7Wg/Hx6vVqRXLlGfm6OntOzQ52wvyGI35
      EJA5r7Gz16PMRqNBuVzGNE1UVaXuuofmnuwGtWoFX/oIBPVKjUqxRKNSQzP1DauZpZQ4tk2l
      XKGcL9CSSBHa5Ejxu4qUkszsDOFIBNdx+OLeTbxEUypcej71oSn0aAgt0pwNFKfmMNoSqIaO
      ahro0dCuraf4roeaqXKh/+QycUiAerkMrktrKrWlweChmAGYJYeWUJRpLHwVhO1z5tTxdW/c
      zOwM96szBIWG0pAMxNsoOhbjcklWjOdzJtTGpTMXFn81l88RU0yCrk9edRYLzLrTHQTMtUMo
      qqpSyOe5+fQel46fJxbfXK/u+T6jw8O8Gu/i8cwE1XyBfH8UdHXVBl6vObyXPsnj4jRjVFHq
      Dn589ViecD1UVWWynCPYkEyOj9M7MLCp69oXhMA0DHzfp1wur5mKtptomoamaWQyTfVX+ZLl
      sXd196w6yJmemqSuWcSSq0t/SynJTM4QMAJEQiHCqbZDKX9x2Hjy4AEPnjzk0sVLBEyT7OgE
      Wl8z7OZMZlHTMdRksxOtF8sQ0JvSz7uMqNkEcxYfXH6XanX5gN13XQxNozWd3vJxD8UTYAdV
      wjb8tPs0dx7d52cf/ISWDUSoWpIpPuw4y/ljp4iEI6AofPb1l4wX5jsAX/Jh6iRvvPr6sgrQ
      /t5+/ofefhzb5uaDO1ydeEBvNM1fX/5g1RciOzeHRBKNxlBUheHiLHe+GOU/vfvXRFaprHse
      TdO4ePkyDcuiP3ccRVH49ce/JdOurirQ4YR0Ggb83Q9+wb/88d/wpM2QYzc7jOeQQQMxNovS
      EqFo1Q6d1IGm65RLJRqNBl1dXXuuA+T7PrlcblGWulKvvxSm9MtY7f4JQUdXN6VCgdmxKaSQ
      RBNxguGm9IZt22SnZ+np6t0TyYiXESklrm1TsS2shMnNe7cJBAL4ERPVcnmlpY0HFPG6WxYb
      /Hq5hpbeuE3YCp7t0JjO8Ys33qf1cnPNcUEOZmHtoVIo0DPvyb1VDkUHIA2VR3qdp1P3+Nm5
      C6Tb2jdsKAzT5MrFN5f9znaf6fDEHIVLr7y2Zvm/bhhcfvUSF06eQ9O0NUdDT0af8sfZ+0TQ
      +Yd3fs5/fP0DPrt7A9fZvOaPEIJAKISfyXDt7tdk0/pyE5elKIIv8sO0TrTwg0tvM5PNEMlN
      caswAWFjeQMgJa3xFHnf5lhfP61th0u5UQhBOB7HrlSoVCrouk50E53mTnAch3q9juO6JNo3
      fo5eJgKBAD09vei6Ti6TITs5AxJMw+TYwPoz6iOWMzkxzjdP79MbaaE+NocaCWPFDcxIEjFV
      5MbsU2RUIzT/Hksp8XxvhdDgTpBSkq4Jzp5/i3T62WK/73nY9fpiaDMcCi2usT0fYl3qxbGg
      JLzUKOZQdABAU/QsqDFVLfDqNl9aT/rzhWIK/+HC9xZHxIV8jsQactAbZc68dekyhesWN0rj
      PJ0a5bWzF/jrd3+4revr7uvjzuQQslZedztfFfzrnasM1gy+/+EPGRgYwPvTH/l2ehLZHnvW
      eSiCSHuK42aMy5evYNs2wUM2rVe0pky167rNGLTjLBrF7CZSSvL5/KIfsRk+OD2kg2Jp+maq
      tZVU684yhL7LdHf3MDEywv0njwgNdmAkY83nSUrk8QAB5bm1LCnx2b0ZrletEyravPP29wk/
      N2gSQmDXapiG0cx6iz7zH3Bdl1KpRCAQWFx7W6rDVS6XCc+/G1LKQ7IIvATN8bkweHpb+6Yi
      cToI8qNXrzRN0OdZmPYu9IZbCkUIQX9bN60EOH/y7Lz09CYWaNegM5EmPzlNaXQaP2KuORPw
      DZWyW8cr1Th1/BSpSIzCXIaaVcNz5yuNVUE+l+evrnxAOBrdk4Z1pwghmmlx1SrxeHwxPLPb
      jbMQgmw2i+M4TSPuWOyokvWILeN7Hrlclt/97reUyyUsQxDuSKPq2rMkhucb/3kapZ1p/ksp
      kZ6P73j0NAx+9P4PMVYxKBJCoKgqQdOkra0Nc0lRrG3bhMNhYrEYlmVhGAbZbJZarUY4HMay
      rGZ4tFJpRj4OtAPwZdP4XYLwJce1BBd6TtCa2vpiBjSnwG2tbSti4Y5tc+vBXWq1Kp/dvcGf
      799ANBw62zrWONJyFFWltWX11KutYhgGJ7sHmBsaQQHqio9cOOzS4wuBH9CYKxdolKucP3WO
      nrZOTrb3kPR1ZrJzyFyVE+3dxIwQqVTLjq9tr9B0Hen7VCsVTNNczAjaTbLZLJFIU70STUPf
      gfT3Ed9NXMfhoy/+zKPpMSzfxZU+wvHQkxFUY+PBVb1cQd2B65f0fWrjs+D7nGnvJd3atuqx
      fN/HrlZJrZLx47ruYrW9bdsY80kYhmGgKArOvGMfgGVZBxsCSjsa7/ZfJBgM4tg2fT19e5KT
      /PWD2/xx7gHCl0hVAV1Sbli7fh4pJeVyiUgkum66o6brnDp1mq+G7/N2rI9Zq4S0bIacAjK6
      JCQlBF48wFeZp/Q+befU8VPE/CS9PX2cypzkV1/8kROd/fT3D+z6d9lVhCAQiVDKZHZdFtqy
      LBzHoVwuk8/n0YNBAkepjUdsAd/3KWSzZOZmmR4eI9LdhhIwmiqetoJqbpxcIYRAev6OBjaK
      qiIdj1djXZw4uU4UREpaUqlVZ/xCCFKpFJqm4TjOstTrhX/VahVz3iLy4ObIvk/Ja3DtyV1S
      8QTHBo+vSG/aDeqWxa3Z4aY8gaqAlLTLIG+cWr3oazXKpRL37txhYnyMQi7XXABeQ89mcmKc
      Lz/7FLlOQyeE4PyFi5jhIA/yU/zNOz/m5+/9CL2+uvG9DBn8+vF1Prn5ZXPhRwha0q2c6TnG
      o8ePqFsWVrV64Mbr6yFpdnzBTeiTbAVN06jX67i+jxYMLouHHnHEZpibnubOvTsMZaZI93bR
      yJVQDY1YfyfR492bCiVKKTdUJN5of+n7xNJJzp1/Zd1zep63Zm1LMBhE0zR83ycej6MoCpFI
      hND8QnEsFiOZTBIMBkkkEgcUApKSYNnl9UgXP3jzXRKpFhRVXVHcsBtcu/s19+pzi4ViKWnw
      9+/+Ys1zWbUatWqFQOBZupwqBN+OPubfxr7hq/EHfDv8GGo2kUBoWYxuwRu0s7OLP/3lKp0t
      bWtmIQkhONU1wIl0N+FoFNMM0Jto5d7kMP4qRWC+pjBeyNClhkkmUwgh6OnoYnZ2ll/d+pTe
      UJJkS8uhbfyEEEjfx3ddPM/DmF/A2imu61Kv15vGJZq2rkHGEQdehBoGAAAgAElEQVTHwuDk
      ICxB10JKid1oMPJ0iMcPH1L2bPTuFsy2JGrARDV0lE2uVwkhaBQr214DcIoV1LE8V869Rqpl
      gxC4lEjXXTXFeWnWz4IR08Lvlv73wucH0wE4HqGyw9sX3iQUDu+phk3UDHJj5AF4Pi1KkP/+
      8k8WfQSep1gs8L/8+Z+5OTXE2dbexRt87fYNPisMNW3dNJW6Khmystx6fI/ZmWlymQzjc1NE
      9QBTU5P85vbn3Hey3Bl6SNoIE4/GV30oNE0juMQmMRaL82pbP26xykwp16wYXrqfKpgeHWcw
      3bW430BfP+e7Buns7j40L9ZaqLpOpVRqVkhr2q4sBmuaRiAQoNFo4El56Gohjmg2NPVKhVqx
      SL1aRdM3rlrej2sq5fP8y6//maxTQwYNEqf6yN5/Sqgtua2BhG+7eEiUbZj1SAnHU52cPXV2
      w3dCKAoNy9q03s967H8HICXpnMfP3/oAXddp2ePcdV3XSUuT7598jUuDZ4lE1s5D/+z2dUb8
      Mq4iORFsJZFoFlw8HH3KhLsyddMzFDL1MiNOkRErx52H9/jGmqIsmhXGtgZDcxNoNZvOdPum
      ppJmIMCJ7n5e7zxOtxIh3AC/blMVLigCS/MpPp3g3Kmzi9lIgWDwwDyAt4qqaVSKRVzHQVGU
      XVHqXJDdcHz/wBuWI5azIAeiSonnugQiEYw9FgTcDJPj41z7+jo1Q+C5LrFjXfiuh6KpmLHI
      9kbxVQtpaIhtiL8pukbUVehu79ywnRBCgO8T3oX10v19WzwfNW9xqu0YPf39+1KYomoaZ8+c
      29S2xXq1KV9geXR3dS/+PhmKQGUVnSFYpvJZT6zMPLFUn8/G7nGis494MtnMi98IIQhHo5yO
      nuH0qTNYtRqTUxPcmX7KvcYMfT29SMCu19ctYjuMLNgzLsQxdyskUKvVDvUayHcZMxRqOrM1
      Ghi7vAa0HaSUzE5PUbZqBDtS6LEQqmmgwjIz963iNmyU6Payz1yrwcmBM5tvE3fpHu7vIrAv
      6VOjxFPJQ5mjHdIM8CXH4u3LQgmJSKzp+rUdhKAeVPhfr/0b1699uS13qmAoxPHjJ/nl2z/i
      Hy58iCkVxoafMj41zp+++nx713WAGMGmmNZuKYRWKhVCodCWqrOP2B8WMk9UXUdoGv6SKtSD
      wrVtHj19gpmI4lkN5m49Iv9olNp0dkfHlYJtN8yy4RCLbl4rSwqBZe08k3FfW2FVKJw8fpIL
      F1478FHAavzojfdocTTO9xxf9vuuji4GvfC61pDrIgR2UOXa2AP+/Ys/LSvF3gqKqtLd1cOr
      r1+iJd3K48lRnsyMkctmtnddB4QeCFCt1chkMlSr1cUq4e0gpUTXdQqFAuaRrPGhRfo+6iGI
      /UMzZJhIpZARk3BfOx2Xz5M82Ue4c3v1RwvoARPPamzrWQ67gtHRkU1vrygK1jqWkJs+zo6P
      sNkTuT7/8eQVLl28dCgbf2jqA/39+3/N8f5jy35vBgK8f/4NtMoOrAWFoNpiYpUr66aIbgZF
      UQiGQpiBAPkgTM7O7Oh4+42qaUQSCWzbplwuY+/AstFxnGYn4u8sB/uIvUUoCk69fjjCdIpC
      f0cXpaHJZhHqczU7vudtrxFPJ9EciVOqbWk/KSVd0RTd3T2b3kfMh093yr51AJrtEzcP/wgt
      uIaGzHR2Fje0Q6kFVaGh+LuiT6+oKj+49A4fJI/T1dq+8Q6HDFXXcedtIxdSOVc4K/k+1fn6
      hrUe9nq9jud5qIZxJHZ2yIkkEoeik7YqFcYmJwj3ti0q8i6ViSmNTm/72JG2FKK+9VCkVJUt
      F8EGdyF7ct86gJQRpm0T/ruHlUAouLaC5xYYtgv8/vOPGRsZhvnMiG335EJw5fLbpLahA37Q
      CCGIJJPowSDZbHZFWMz3fer1OnNzc2QymRXxTt/3KZVKzSrgSuUo//8FYLM59XuNpuvkclkU
      IaiNzVJ8PE5tMkPx7lPKI9NYs3m8xvZnpZ6/tRBvMy16a4NLe772ZafsT0BOSk6muzfe7pDS
      qNf5dOQuaDt/eP2gzg1nhhuPpmm99QVVu87rrQNEkwnaUumm4cd3BEVR0AMBao0Gs3NzpH0f
      XddxHIdCoYDruui6jmVZRKPRZRlDC96/iqKgqurR6P+ITTP69CmJVIqq7aHEw5imgV2qEj3V
      S+HpBO1vntuWqUujVKGcK6Altp6f769jLP88Uko8xyG4BevHtdiXDkB1JKd6BvfjVLvO7PQU
      9x89oGzVmncruAsjzXklz7mIBGkw69X4ZniCy/7p71QHAM3RmG6a2LUac3NzzZmAECjz2uVL
      haygWfm7kD1UKBSoVCp4UvKS2b4csQaObTM3M0NXb++2j3H89Gm+vnWTyPkBlFAzbVMLNN/r
      xGA3yjZN3LVgAKkqaMGtp4LO1YpI3990dqSuqiuE4BYknrfCvoSATkfaaU2/eNrkvu/TqDd4
      58q7vNt9GvQ96C+F4JEsEAuGeOPcxWXn3kxao/R9picmdv+69hFN1zFDISKpFPG2NmItLSia
      hg80bBshBJlMhmKx2FRCnF88jkajRKNRjCPlz+8EDcvik4/+SC6X29FxrFoNfEltJsvc3SfL
      PtuM6udaqLqGKtlWSNfCY2xsFM91N0wVF4DjeTuuffF9f+87AM32eff0xRemUnUpiqLQOzCA
      bhgMdPaibrcWYBOcSHcvy4v/5t5t/vOf/7X5QKyDZdWw7J2ngx0keiBAIBpFqCpCUVA0jUgq
      1VwjME0qlUqzM240sG2bRqNBtVqlVCpRqVbRDkFl6RF7S6Ne5//5f/+JfLlE9w5G/wAIgVW3
      KIw/y57zGjZWrkh5bGcZdUbARG4jzdsN6VyfG+I3X37M3Mw01hJhzAWhuPkfsOcTJqZnZpid
      ncXdoI1YehzbtrEsi3K5zOzc3N6HgMK+SstG4kYvAB4SuQdmzwAIQcNznnWSUnJvZpSG727Y
      cU7PTPOrq3/kf+zs3lNNpYNAUVVCsRh2vY4zn/O8YGaRTqebDmC6vqbg3hEvD416vSmXrIgd
      Z7+EIxHSra2UDYkWDWFXLayxWWzXoeXssY0PsA6+5yPE9sbVflDHCkg+f3KHPjPB629eBqBa
      KOC5LsFwuLnWJQRmMIgRCFApFCiVSqTTTb+SRCKx6rErlQqWZVGt1VB1Hc0w0AKB/VkDUITY
      whLH4aSzrYMuQoyzB6NtKXk4N86HCz8Cl/pP0dPWuSLOt3w3yZej92moklw2Q+dLuH4gFAVV
      17GrVRTDaD7E1SpCCEKhEFY+f6gUJo/YfaxqBQnU8ehLtO7YM0QIQXtrO3FcMuUC1lSe0Ole
      DKu+7fj/Ar7vo+5goCiEoB7RGB0dZyAzuJjhFzCMZjRACDTDwLVt6tUqqq6jeB62baPr+jL/
      X9/3KZZKWPU6qmHgC0EklVpcZ5BS7n0HcCzV8UI1/r7nrZpRIhSF4y1dTGQeIY1dzDipO2jZ
      GpfPvfHsXEJw5vjGtphWrcZENY80VK5/dZ1fdh1+RdDtoOk6wViMRq226BlRKpUoFAqoe+Au
      dsThIhiOEAQunjxHS8vuON/1Dwzw5dXPkUKiBU20gIG+xcXb5wcevuvh+T7aDp9HRdNoDLYw
      ND1OMp0mkkjQsCx8x0FXVaSUGPMzAISgUangui6VSoVqtUowGMSTEsd1MYJBzOjqApiZ2dl9
      WANQXpz0vNmpKQr5/KqfKYpCOhJ/Zt+4W5gableM61OPt6QT1GjU+cO1T3CDKoRNHvkFRsdG
      d/niDg+aaRJOJAgnk5ihEFIIjHCY4JH713eG7u4e0q27ox4spaQmXQSgtMa2PIioZ4tN+8Z5
      atkCuclpjNb4rlyfEII7D77FaTRACIxgkFAshrbER8Ofby800yQQizU1tgwDqetNc6RYbFF8
      cTVaWlv3IQvoBRmdlYpFivk8yTVGGENPHvHRgxtNjf7dZF7SuaHITS/mAORyOe7ameb+hoar
      wNgWtEReSOanv2YkQiSVIrAQEz3iO0G6ra0pfb4LxOJxZLUOikC6Po7V2PS+Ukpsq44WDy/+
      7DRsjJbVfT+2RcOhN92+qB68VK5i4ZlfSI1WdR0UhVA8TiASae4znxIqpcT3PHzPo2FZiwvI
      C/vveQdQrm9NF+OgiMZinDi7hhnDfIw+F2FvOjQpOZ5o39JiZiQURnOeVQLKiMG13FOqlcru
      X98hYz2/5SNeMuYbK8e2ty2iuBpmIIDRncaOB6iXK5QnNp/9I32fcF2iLMkKdFxnW0YwK44t
      JV6tQWC6wluvvbnuGuBGx7Eti3q5jHQcdClpiUZJx+PoUoLj4DvO3ncAuXr5UEjAbsR6jYrr
      uRQyuW1JOW/y5Ixkpvnj1T9vqrxbSsno8FOkt2RbRcF1Xb64dhVnB+JqRxxxGMjMzvLo3j1G
      h4aaiq+Gse3G8HkWrCDL2TxaqYHIVIj1dmx6f0Vthl21+WZNCIGyW7FhCdbQJLbnUimvNKHa
      CM9x8ByHRrlMKhajq6ODtpYWEvE4pmmiaxrxaJSWRIKWWGzvO4CeWPqFnqZL3+eLm9cZDtRh
      rzwMpKQUhMz0NMXC6msQyzb3PK4/uoMXXj5j8KMB/pIZJp/bma75EUfsNesVOVq1Grfv3WH4
      yRMCa4gz7gQhBJquc6Z7kOOdPaQ721E3UeQppcSpWniOS9QWDCbaqT2dwq03FkXldoJvu4DE
      bEty8eRZ2ru6NrWflBLXcRZDOxHDoLuzk4Bpoqxz7/YlBDRZzdPYBd3qg0BKyfDQEFdnH8MO
      08PWxfGJVSVIyejTp9TWCONI2dzm1q2blIS74ppE3QFN4d8///hwyO4eccQarBfunJmZ5tbI
      I+qeQyKZ3LPzv3nlCvVGA8f3NlwDkFLiWg3iFZ9BIrz1zrsM9g/SFolTnJzdkpbPWtQmZvEm
      cpwJpOnu7duULITnediWhSEEbr2OValsusPclzTQaVnj6s1rmIEApm7QmWwlHk8QCof3+tQ7
      xnMcro/cwwvs7W3SSnVOpXq5VZjg6eQdfjd7j1+eeZvTgyeXbdewLG4/uMuTqVFqsZUvkIyY
      SGDW8vj0xhe8/8Y7e3rdRxyxF+iGwdnWHnp7+vZU5qNcLjMd8BDhMHpo/eIyu1IjWZF88N4H
      y9YBW5NpxtU6amAH1ykldqHCxa7jxEJhTpw5u+ldFUVp6mYJgfR9gpEIlmUR3MRiedW296EQ
      TAi+KI9BbV7Fcdznw86zvHXhjQ12PHgc18Wv1CEsQd27RUcvanK/NI2dbOb1usDjqVEGOnuX
      VffeffqQP2QeoAkJ6zgr2YagWi5Tr9V2XDRzxBF7SaVcZnhkmK72DqxGnZrdYGJ2CttUOPPK
      K3t67lgshuELRGL9d0RKSQyd9955a0USSEuqBVGb2pYRvJ0v08gWicfj/NW5N2hpbdvWPEIo
      CpVaDUUIHMsitslZkyoE6o///m//sVCvbrz1TlDEYrojqoJouJzvP3HoU0R1Xef04AkKcxky
      TnXvrldTsAPqsuNnKgUe3b9PQgsSTyT48uZ1ro4/wDVVfH2dh812CU1XCYRDNKoW3Z0vrgz3
      ES8ZUnJv6CFjk+N0tjUXXW/evsnvhm5yc/Qht8qT3C9OMu6WietBzvWf3OCAO0MoCq2hOE+f
      DqGE19aTEoUa7568uGoKat2yeDQ1imLoW5aQVgIGvu3SG05x+tSZFYkoUkqsanWZP/lSpO9T
      yedJxeOkkkmk7+P4PlJKAqaJ4zgoirLq9xLzarsH4sw+Wc3hvCAG3rpp8ovLH3BRaSG4j5fs
      B3UyIZ+Pv/yU/+OjX/Fx/glWaBN/Lsej1hnhkSwRCoWO1gKOOBQ06nU+/tNH/Muj6+SyzSQF
      u15nem4GogH8VBg0FRSFgCe4cmJvR/8LJJJJfvTaO7RYCo1Mcdlnvuuh1Ry+f/YNIrHVDdsT
      iSQtBY/Sk/Etn1sIQaAtua75zHrrAEJRCAQC+L5PPp+n7nmYoRC+qjKTzZIpFNZtZ9WD6gDq
      elPE7EVBNwx+/oOf8oO+VxB7qAi68sQqedVhUq1v3o0sZKDVXcyZCh/duEp2bm5vr/GIIzbB
      yMgw1/MjqHMV3rpwCWjKeYwotWXFlSFX8N+++n16OvdP1yocifDWK68TrvtYszm8ah3KFqmK
      5MrAOcLrVJsrqkqyrRW22S5IJOn29jVH6cYGTndC1ylVq7iKgmoYIARCURCqiqppaJpGvV7H
      sqxVB4P74wi24qwqo5kpenv7DuT020IILpx+hblyga/KY/sWvnJat75Y7voebleURq7Krz//
      A++fv0RHRxeRNTRBjjhit3EaDfQlC7jhUBg9W+WVwVNEYzGK+Tx3797BzpWgM450PfRMjV9c
      /oDO9v23jhWKwk9+8BOKuRwogmBgXmtno/2EoL+nj4fZiW2JErrjWSJnn2sHpWR8coKJ8TFU
      ReGNN99a87i+76MHAotVwQvXoBkGdq2GbduLMvOWZaHr+jLRuAOZAQA8zk3uiqflbrNeyEQI
      wQcX3sKw9qmwbX7NZMv7xILN/2+JMBP2uXHrJpXvQIXwEYeHpbImjbrF0KNH/OS9D3n/nfeo
      1+vcefgtX1bH8dLN0bVQFaTjYts2D5884vHQYx4/fsTUxARPnzx5poe/x8RTKeKJ5JqN/0Iq
      9ujTp4vfsb2jg85Iclv1Cp4Cbc/pG83MzvD59ANKfmPdxl9KiW6a+K6LO1/8ubT9EoqCGQig
      zc8EgsEg7rwH+cK/g5kBAFNelcmpCXq6d2jusMuMj4zQ07d2Dq5mGAzG2njg7syVaF+wXSIN
      kIogYB6Zph+xfwTn07yl7/Pg2295ND3KP7z7Lr/+7b9i64KgrzSLp/RmkagsWSgSfvP4L7hB
      HakIhADpNW0Sf2pXee3shQP8Rk3y+Rw3nt5D8SR9g02bW6EoXDx1jj9MfItqbs2bQg8GMJcs
      Lvuex1cj95GmyqsdJ9btVDzbJqjrRJNJypUKjpSLMwGYVzdYsr0QgkAgsBgOOrBFYAB0ldG5
      qWc/z4sWHTThSGTxpnuuSymfX+bKJYQgJc29k4XYTYTAkh6ZUp5c5qg6+Ij9RwhBa3sHAz19
      VGpVim6d2cwcITOAXl2yQBkL4vQkcKMmaEozo0YIxLy+jqEevOmP57rcGL6PHTOxFJ9GvU5+
      fkE7mWrBm964iv95goZJ3bIWZR+EouB6LsKX1NZx+vM9j1gwSCwaRQhBNBJB9bxlUZXVuo4F
      H41wOEwwGDzADsCXRAMhhJQUcln+dOMq/9Pv/gv/82//b+49vr9vU77nSaXTi/F9VdNQNW1F
      2frJgWMotRcgi0lX8aIGSsBgeHLsUIbcjnjJEQJf+sQjMZKpFv7mg58SDUcYHh5u1tgsbibW
      THSIOQqnj+1tSuha+L7P3MwMQ8NDXLv7NXVTgARNKDiOvRhy0XSd4739W8q6k1LSF2vlyZPH
      i/pdvufheh4dMsBg/9ruZL7rElpS4yOEIBaNwvwgWnoexjq1QgscWAhIsRxujT/ms+G7VHBw
      DQVMAXj8avgv3Jl8ypm2XnrauojH482V7X1YeK2USgRDIdT5mxdeZeHUME2iwqC44pNDiBAU
      W03+kh/hrUplzXS2I47YC6SU5Ocy9HY1s3rKxSLvnLnIw5EhctbcxhI6UnKp88Ti+7jfPBp6
      xO3RR7SFE4xnZlBVFU8VvN53ikg0BkuahxMdfYyM3kYEthBuFTA9O80rFy4CzayiuAXvXnlz
      zTC0lBJdUVZ0NoqiEDFNKvU6AV0nugmvjAPrAPywwRgWqDD/P4tIVeGJV+DJZB7x9GuSisl/
      89r3aW/fvGLfdpBS8uXVz7n05mUSqRQCFivzlnY+qXQaXdOAzev3HxhSEqx4iEKDSqlIeH7K
      eMQR+4KUtLS00NbRfHf7jx3n4bd3KZRLiJYgjOegO7lmVp1ueVw8eW4/r3iRhmVx58kDrHIF
      x9OJ9negmgbS8wmZzxaJPddFCEG6tY0LxW5uVaZQNiMu5/mU83lSra3L3snvvfveulpJnuOQ
      XGUgtxDe2YwMxAIHFwLaDEIgAxo5w+O/3v4zD5482NPQkBCCD3/8EzKzMzy8e5dSsbjqlO7/
      Z++9guPK0jy/37kubzokEt4Sjga0xSKryPKmu7qq7fR2z/bY3ZiRVrNS6EEb+6CXfVBIIRPa
      iA09bCg0D9qVxmqme2d2etpVdXWX7fI0RU/QwHuT3t287ughARAgARIAQbJYzF9EBYrIm9fh
      3vOd85n/VywWKZVK9+w8tpV0idB8kTAaiYWFqhuoyn1FKAqtOyppjrZlcX1ggJHpCRKZFJGk
      jaZq68bTpJQ81tS9Sg7lfjIzM03AATMcYs4vYeeKCCHwbJuyZS3HBsuWtfxe9ffuprGsbWic
      ChY95so5+nb0LP9OCLEcQF8PAWiadstEbrNFn0KIL7gBWEFO9fiH4ZP87OO379kgJqVE+j4X
      zp7j7YFTJBILuI6zfKPz2SzAcgDloUBXKbk2IcMkVhvfNk31KlU2y9WrA/Tt2kWhWESNhWjS
      QrhNkVtk1qXvo8xk6bWDvHDoyQcmGZMr5PE64xj1NcR62gjULvl7BBcyU/zis/ewy2VCkcjy
      jN1xHFzvzp4B6fvsCNeheVBbV7e5E1sc6KWUWJaFZVmUy2Vs28ayLDzPW5aVKJfLa1YDL3cX
      29yRHzCqwsXSLFeGrt2T3WfSKf7z6/9I2XPIlYq88cHblEpFfM+jkM8txwMSc3OU3Iek6UpQ
      R1c1DFWrtIarrgCqPCAOHDpMqVSio6GZV/cfY7qUQZRdZKG8evYqBH5DhJJtbYvO/lbRNA1F
      VTDqahCKstwzQDMNvFIZE3VVpa6UkqmpSRLlwpr+e9cq4xYtvFIZ8mV6O7ro7+i5Zbs7IYFy
      uUy5XCYQCGCaJrquo6qV8/F9n2KxSLFYRFVVHMdZnR20wqA+sBjAllEV3hk+S2td4+Yt5x2o
      idXS19vH+59/RpsI0d+/h5qaSgA6HFm0/lIyOT1J4WFJq1cVMj0x8pkSxU8/5CnXYdee/gd9
      VlUeUcLRKJ0dnUzPTKMLFSdfxsiWKfdVenGLnIVqe3xlzxEEULbKaPqDedkMTUcp3+pWsXNF
      jrbtpKGpCX+x9SJU1HoXkgkIrvbfSylRiw77A/V07eiiWChSKOSpiceJbqHfwVK1b2BFpfXK
      lb1hGKsMk6Zp2LaN67qYprlq24fPAABZ1eU/fPY6vaF6Hu/aw46OTlT17i9FSsnY+Dj9rV3E
      NJM9/f23LD8d2+Z8auKeykNvO4rAjwZIOCU++ewT6uvqCYbDBKtS0VXuM3OzM5y4dJaIGaJo
      W+gZFzUWxspZiJogMhLAsz1+M34JK6DwzsQlHm/s5sUjT9/35AUhFFRndasXz3YQ6SJe6Ea6
      5YnTJyjlC6QCPvFojFZM5rkx4/ZzJb5z6FkCZrCS5RO/MXHdyhVtRCPo5u0DgQCGYVAuVxrf
      KIpCuVy+T3LQ240Q+JogIS0uzo9xZeg6WDYt9Y0b6qKz/m4Fu7r76OvuxQgElmsClh486fu8
      89F7DPjpjYuzfVFQBG7YwNYFV8+eZ/+u/gcWXKvy6DI3M8OliSGO7trP5PwMj/cfJItDIazc
      kIzXFFxdWXzPFaYKKRpkgPp4/X01AuOzk2SCK95/KXGmEjze209dfT2qqvGbUx9TiAfIWyVQ
      BLbj0B2pZ9bKIhZdRqGyZH9v/12NTStxHQdzCz2ShRCoqkq5XMayrAdcCLZdaAoJ3eFXM5f4
      xYn3bttr9E4IIVA1DaGqtHR0rKo9kL7PqbOnOFmafvgG/xWUgyr5Go2FRDUjqMr9YUl3BqC7
      r48//Mb3UQMGHQ3NjKZm+daR58Fd/1mUusrPBj7DKhbv1ykDUF8TJ399At9doVBgu1xIjPPW
      yQ+ZnJqgtaEZ1TSI7GjGjIQ53r23kr2oKkjPxyuVyXk29ja2xfV9H6t8+xaW67FkBMxFAbmH
      cwWwFkIw5+S5OniNGl/Ddhzm5mYZmhxD2g5BM4jvees2SLixG7FmetX1kUF+OXke33j4s2hE
      0SF1ZRRVVWlsbMT3/VUaIlWqbAe2ZVHM57k4cIkPzn5Gd0sHhUIeezFjpb62jmePHOf0tQtM
      ONnbZvtIATsjTdTUxO7b+dfU1NASq2diZgoRCiB9SbTk4zSE0eNRXKtMWBgkpYVQBFJA1Ndo
      aWklLgK0GFEONvfQV99GNBZjZmpqldTMlpCSbDpNOpOmtiZ2x/Fs9VcrRtj3fRzHQdf1hzMG
      sC5CsGC4/N34yYo+t6pUZuvTHuJzl6hu0hqOs69xB3s22HfTdRw+On+STxJD+NqXYJCUEt9y
      mNF93ho4ydWRQVzf4+Wnn6exuaVaJFZlWyjkc/z4w18zuTCLUrRRI0H+3zf/M8WwilH2+W9e
      +W2CoRD5XI5T8yMQuMO7pavMphN0dNxf8chUMolVKBKqj2ItpNnd0sFsJsW8KOPM5zl47Blq
      Cnkuz45hSth9dDeKphGvr1+1H+n7fHrlLHtLeXb37d7y+YyPjBCJRvnF5c8wrp7m8dZeWmvr
      iUZraG5quuP3Vw7+4r61hLzfLMkoLw1migKGRlmDhFeEskP/jp1rflVKyfjoCFNjY0wm5vjx
      mfe57qSQW+j5+YUlGkDWmLgKpIRNKijxp1J0tnUwMzuD73lrtr+rUmWjXLl0iY8WBrFrDCjZ
      0BLDDmsITcXTFQJln87mNj499RmjxQQCEJ7EKPv0OiEymQwytDrQWc4XOdi9+75OUi6ePUPa
      KuK4DkIRTI6OsrNtBzWeipUv4OmCVCKJW7aZm5xCAI1NtzZ4EULQ195FJBRet8UjUmKVShSL
      hVvicxcGLvLB5c+5OjlMzioyX86RC8Bgfp6ziXEujA9xsKUb8zYy1rZt4zgOwWAQVVUrfQO2
      4yY9VAiBoqzvxinkclwdvs61coKM4S/qE32JZsUrH8ygjk6HfVwAACAASURBVFz893mZZvqj
      N0ikUzzW0sPxA0eIbSFFrUqVXDbDB9fPIwMKSsZChE3Q1RtvkSI4M3aVPa1dHOjfT3jYZL6Q
      ZW9XH9FolHcvnsIL3VoNO+3kWJifp7Gx8b4Uh3mOQygYoj0aJBUBp2ARam0gFInQ3dtHQ1Mz
      44kZZgyH3HyCZ449RW93RcDNLpcpFYur3iHdMNYc/F3H4d3TH3N67CoT+SSu9PntrqO88PyL
      y9tPzEwyUUoga0zSbhKClaF7KbDsee6iPM36+L6/qoD1gfYDeGBISWft+kulgGmy4FtkApIv
      1cC/FiteIt9QmcOGhjCnyzOMv/kTfvDqb1FTNQJVNkkkWsNL+47w1qmPyemg1kVuyD0sPnM5
      z+ajk5/yzde+yaHYEVQhkEJgl8uMFRJg3rri9g2VH37+NgfqO3n6wNF7nsWmaBq79+1leHCQ
      2XyaQCxCZmSKWX2O1rZ22jo6KJQK9MW70LsPogUM0ukUru1w6dIF5hbm+c63v7vueUrf59cn
      PuD9wXNMOLnKcKMCUmIHFDzXRdd1Zqam0FFQEeuqj4VVY83Z/8oCu5Udy5ZVTO/mBj2MCMen
      s/GGqJzveauyfXTDYF97DyMTZzffjethx5fUpzz6Oro49uRjVeXQKhvCc10uXbzAjJWlt7EN
      Q9c5NTTAQlwl4KmgKvjJSkc6JR5e1PlXiIbDFT0aIfj7X/+Mbz3/NUzTZHdtC2dz04ilGN4i
      QgiKAfgsNw4XBS8dfeaeXpcQgkAwxNj8NFpbbUVyeUcrI9kM82c+otGMkl5I0NXVg24YWKUS
      r7/7K5SIiWI5hFvqKRVudedIKSnm85y+eoG/vfwhvgI3dW7h50OnGZgbp1ELkyxkuVScxZAK
      OgoBTUc3dBQp8ITE93xmHJd/9/d/zu8/9xo72tqXj7P007KsNbWCxP/++l/LkfTcvbqHXzxc
      n9/d/Qw9XeuXYNuWxa8+eJvzSvqB6ZA8CEShjIKCrqo06GF+94Vvru+vrFJlkYnRUX72m18z
      06CiFl18QwHPR5o6wnLQyz4+Es/UMAsuhAye6ejnmceeRNU0rl+/ypW5cb751MsIRSGXyfDG
      W79kUhSx42vHohTX55/0PMHOvnvfJ2B+bpaPpq+gBgOrPyjaHGnqIR6r5cy1S+Rci3LUQAiB
      a5WpKUjCisGxJ48jhCCby3L+2mVOjl3hWnqGkvArg//tuGnldCfqRIB//wf/iprFydtS4Zdh
      GDiOs6p6WFGUR28FgKZwanRgXQPg+z6GabK7o5fzQ5/dUtb9ZUaGA3iAB0zIImevXODo/sOr
      iuGqVLkZ0zShZKOVDdzw4vuy1OrR1LFXTIDLrs+3Ow5w+PARlMVCps6OHfT27lz2Z0djMZ47
      /gw/PPPuusf0VUHR2Vou/EZYmi0LoFQo4CRy0KSgGjfGA0XCxYkhrIECtMcRIrA8kdfMAEUT
      xs5fJ5VOYTsO708NkAh4i0kqGzyRTb53ac9idm52ufG7qqq4rrssBREOh5frMjKZzCNoAIBE
      KVexrGvc3KV8eD1gQOCRvD0VHJ/zAxcZnhxjb1s3Bw4dftBnVOULSk0sRn9/P5+lRu/YIcMP
      G2Slszz4A2v6yB3Pw14nNVT6Pizk+Sj9Oft39m9bsxjf97Eti/GRYVBVQqEQRiDAyfkhlFiQ
      7Pgs8b6OVddSBkRtYN19xnra8DJlfI8bg/89RApIFHPsWgz2CiHIZDLouo7neViWRaFQWK53
      eiRHuFggtOYfYtnqC4FpGIiSjQyv/8f9MqO5PmptlEG1yPD4WS4OXuXJg4/Tu/PBtOar8sVl
      cnyME6NXKMYNNjK1nc4mKkWZK4yA57oVaYPF9zKVzyBVZe00DCGgMYqTsSkWCkRjWysOcx2H
      VDJJTTRKMpkgmUigBAyueElUVUeOjEHZQW2JoRo6qqFTmEsSbtq4CKUeCWGrCm9/cgrMe7+K
      lkLwwdVzPHXoyKpVu2EY2LZNJpNZVgx9ZA3AQiGDkBIJeJ63/OClU0kymQzdPb3UxuswVZ2H
      pO3LtuMGNaYoVfRYQgbDuk3r9FTVAFS5hebWNvY3d3FuchC71qzIINymYj6fz68anBzb5i/e
      +Hv6mzoJBkOUfIeB61dRfQu/ee3OVwClWIBPr53nlSee2/Q5J+fnyWUynBi8yMXkJAXpYAvJ
      QeLU7e1GCIFfG0IoYlkGWg0Ymxr8l9DMACEjSF7cO5fVSk7NDJHN5YgtxgE0TSOfzyOlpLa2
      lmw2SyAQeERjAEB3bTMfnP2Mc9PDoAi+9/iLtDS1UFsbJ5tKA2AGgwhvcx12vlTcvEJSBFlv
      +/RMqnx5CEUivPLCV+i50s7VuXGuZmdvK5eepKJlv1RsqBsGT/cf5hcXPsavDVa0dOo0hHJr
      P+5VCJjPp1elN26EQi6HbZeZLWR4LzOyIhdScLmY4Gm7HUImamB74n/S87B9d+N+/7ukoHhc
      GrrK04efACC6oq+5XGzRucQjludYIe9Y6EJFURQyqstPzn1Q6fylKOzoqQSHpZQ0mzXrtqt7
      5LAcoko1I6jK2hiBAPWNjZwrzFAI336kc/BXiTa6jsPw5BhBPVCp2heikgJ6p0Hd9XisuZu/
      e/cX/NXbP+Hd0x9j23du1HTp2gCzqQT4HsZNGnS6B1poe+sLBi9fJa15d95wG8lZN4TzfN/H
      8zy8xYZQSz993380DcCIlwVV4U+++n1+u/cYMREgm6u0e1zKRBCKQl99K1THfwCMolt5QatU
      WQPXcTh95QJSSqJzJUR5/XBwR7B2ubseVFIVnzp0lKd69m9uwqWp/GL0DMPkmFJKfJYZ5aef
      vn3770jJ5YVx/ubce+zt7KVNjy4fU3F9agOhVZk+20FrextRtPszlkhJQKrUhCJ32KySCfRI
      GgAUwdvTl7g6NsSu3l387le/Q11dZVkkfX+52XNjvIGI9/Crf24HrgKj0xMbanZd5dFj8OoV
      rsyOISyHQjyAXC+DTkoOtPSsctmEIxHq6xvQhLLpFbdv6jdWCkIwkU/eVnrZ8zxG03O0B2sZ
      TcyQz2RRFl29DY5OT2/vpo6/ESJ1tRxu6eF+WIAmLcy//c6/4PjBxze0/aNpAAA0lQuTQ7c8
      cEJRKBYq4njtbe3sCFWlEAD8gEZO2svGsUoVqMwkB69f4/LoIKkaFS8ewtfXHlZEycHI2eze
      cWsNjmPbDMyN3dIgfrNE1ABGYP2V6kJigYRXYqaQ4v97/w0ymres8jsX9Jiam7mr46+HUBVU
      eY+zgCT84MCz9HV1rylGt5bU/SMZBF5iuJTg43MneWLvY8sVr1JKUtk0VtmiJhJlupiBR6cW
      bH1CBrphbroLUZUvN4n5eS4OX+VKahrq1/CdS0mPUsOB1h6iuomhG4TCN9wTZcvi+sgg74yc
      o3i3wotSsq+la93Yge+6/Pjku3iaQlYDDG3VtjFXpbO3Y83v3i0NnW1Eh6+RDtzbFfSfnXmH
      ulgtxw6sX7ezUg/okTYAnq7wXuIa458u8L2nXqlUz/k+MwtzHNy9j7fOfExKc/jSi8LdCSmp
      I8B3j3+loiW+iSYUVb7c1MbjzGWSuCEdYbnIpcp5X6Jlyxzp3MULB55YU1fKdV1+/ptfc13N
      rSn+thmk7dLv13B8/zquDyl578P3uZydAe2GywggYkkCikZjOEYgeqsK6XZgJbPkNY97OpYI
      KOAyMDnCsQOHKZVuTWJfyphSVRVN0x5hF9ASQjDkpDh75QIAiqpyYPdekqkEQ+nZR0oLaC0M
      V/JsbQ8/OPwiuqatuYys8uiiahpfeew4dXmJmSiBLxG2S6dn8icvfIdvPPXSuqKCiqJQqweJ
      5H1eivehZcvgLDZblxJsFwp3zp2Xjscev4ZvfuW1VcVly59LyfWrVxi8fp3GpIvqrJ6FN0Xj
      HD1ylK59W2/UcieMaIiQf+9Xz0LCrsYOLMtCURSCwSCmaS7/FwwGCQQCFWG9YvHRXgEsIwQX
      ZoY5uu8QUkpeP/k+WcdiZ6SRM+78o2MEFuMhpg0xzcR1HI527iZkBvnRibfwbZcj7Ts5fvT4
      Az7RKl8UhBB0dnXzbU3n7IVzROrr2dXWRVNT8x2FBBVF4SsvfoXnHQdNVelt6WQ+l+JX1z+n
      IRBG9TxGg3euPQlNZjny4tOUyxaqpq7q9yGlpJDN8ubJDyg7FsWIRoceJW8Vl6UZxgspdhSK
      BGpunzlzN6iGTneskfOFmeUeHPcCiWQql+C4Yaw7URNCoGlaZRVwz87kIWOWEj/+4FfsiNRz
      zU6BpjCfyULkEUl99H3qUh67evo43LuXeG0cKSUXr17ixyOniDiSg/F29u/e96DPtMoXDN0w
      6OzpobO7e/OTJSEqhV9CUHZs8qUiz7XspmxZ/MYbhds0b1qi1F7Djy7+Bt2R/Mmr/5RQuOLG
      cWybwZEhRuYmMYNBlIDBN/bvJxKP4ZRtLpw/z2BmDl9KNPPev+ddPd1cOTNL+V7GFIXgwtQI
      34M7rtQfWSmItZCqwhUvxZVEAhazAvxHZvCX7As08ewLj1G/oq9oJp3i4/EB0BTyYUlGcdG2
      SXirypeQLc5sNVVlemqS1z//kGR0cR++BO2mwX8dAUc0BUMavLLnMMFgkOT8PJfHBsnksrT1
      99Ia66Z1V/eqimHDDHDkySeoHbjGZGIORb93z3UhmSExPUskHEYWLIgF7qlX4XRyjHdPfcLL
      Tzy9pst2ZV+A6tt8M1+Gxu+bRMvbvHjkiVXt63zPY3RynIQoAwrBlM0LLx2hkM9X+wVX2VYU
      ReFXAydvDP4AilgesKXvgwRtPk8oYOKoUBepoew6pJ0SR1v62NvWQ3NrK29+/C4nFobxTY1O
      GaK+WELTdTRDX3NGPJdKYDv2PYlrSd8nO5fk0w8+5OS5M/Tv6OXs0BWOv/gcdljH0+6NEfCB
      ty+f5uUnngYqM/2Vg/7Kf1cNwCNOrCT4p099nZqbFBVnpqf45fDnFReYlBzp7SccjeJW6wCq
      bCOObfPZuVPMCoulsqRYCZ7rOYCiKHw4eJ4oJk/1P8ZZ/zI9HTvo79tTydgDXNuuxBoWB/Cp
      XBLfrAxr436eybOfsr+ug65dvWsGiJ944ij5RJr5ZBazbvs64GUXkrz5k59z9tpl0qVKXdH0
      hSQAv3zjDVrrGmlpaiK+rwd3nbqJLSPAld5tEzaWjEDVADyMeH7lP0Qlpc3xQV38Qy+2sRS2
      hxRUVjRrFddISZuI8M1jT1Nf37D6QZGST0cu4YcrQbyYp3Os/7F1m1pXqbJVLg9e4aPkELor
      8QtFvPowRzp2s79/PwC7e3dV9P6lZEd3pYBs6VkVgH5T0ZftuTemtaqCHwlwITdN9myejtZ2
      6pobluVeADRdJ9bcQPJq+q6vxbMdpoZHOXXiFJeHrjGVnF9zO19KJhNz4PnE+7sxFop4hgKh
      AJ7KXbuH2owor+ytCMHdTiivGgN4mJCSqAU7og30tnfQWBOvNHso5IhHYxQti3wuS94royoq
      va2dOI5DOpfl8uwoI9l5umoaiQcj+L5El4J9fbuJ19XfcqhcNsvV7CwEdYTr8+quIxSLRXRd
      R6nGAKpsA3a5zAeffcSV7Ayv7X6c3R09uK7D8MQYvZ3dy9stN3sR4o4Z9MVigbLn3OLXkAGN
      Ua/A+OglXjIfJxAOIj0fI2gipWRhZAJ/G5o/XTt1jn/81etMrDPw38xkeoHac1eJhsKcu3KJ
      Xc2dND25F0dny0agJ1TP//DdP6YhfkO2eq1ewEtU3+aHASnpVKN874WXKxkOKx6ORlpwbZv5
      1CCBYJDe5t6Kj14IJNDY3EJvdy+u667ZeWmtY50bGlgu6GkWQaT0+Zv3f87Bzp30NnfS3tl5
      jy60ypedcrlMuVTCDAY5sv8xGqfrObhrKbMsyMG9Bza1PyklvucxMzfDLwdOrF9pqyr4hsro
      8AhZq8BjBw5hBMFK5Tja08/701fu7sKAvscP0D1wacMGAODS4DUQleu4NDWCfUoSa6gj0t6I
      G9pculCN0PnvX/u9VYP/nagagIcAYbl855nnCUXWzlN2XZfJ9AJnFkYQlwVtwRj7Wror7fJ0
      HVXTNtw2z/M8LsyNwqKnJ66YvH7tFJYuMRSNtvZ2kBLHtimXyyTSSXZ0dlWLw6psCEPXMXQd
      oSgYgQC1dXcerEqFAslUEt0wqK+rX36WpZScv3KRT0cuM+sXkPodUkY1lUEKEJIMXLtC/+49
      qIqgraWV/dk0l9wUirp1f7xuBogEQ5v6jkQua8Q5nsvl0UEYHWTvfC+tx/ZXdIrWy35agSLh
      v3zyVTpb29b8fL33U33ln/32/5i2Cps66Q2zgROvcmeCNrx06Ni6n2u6Tl97F3vq2jkzM0RC
      dbiWneX66BC9dS2YAXPDf4eJqQkujl7DMSsv00I+gxPUIFuiNJ0Ax8VxHH79xusUCwUCpkld
      vG6VX7VKlfXYTCW557okFxaI1dbyZ+/8I5+MD3C4tY+AaSKEwCmX+auP3yBjyuXY1wZPgqzq
      sTA7RzGXR5Rdxman8KKBu57IBFWDz86cxpd3p/lTF4zQXddMIGAS9TWKYnXyhe6CKsEXgBAc
      jnfwx1/77rr394EYADmXBddHmFU1tU3jSxo9g0YlzDO9+2mqb6z82nXJZjKkEgkK+TyhYBCh
      VHqnhkIh2s0YxXSWTClP3pCcG7tGMZWhp23HnR9uKfnpZ++QCK3wGS75RgMa+SAMzU9RnF4g
      aXiM5Oa5VJjl6tgQvfWtmGY1PbTK9uG5LqoQpNNpVEVhxE4zMHydgbFBUqkkg1NjTJczy2qe
      m6WsQVo4XMpOM1nOEsg7GOEgQtm63ElNQ5zdrTsYGR4mb22toewTu/bzx//yv6K7p4fu1nZa
      a+uZnZhiX0MHB1q7iXkaj+/aR19dK166QEpamL7Ca4efRlnqZ7Li/G93LRqWA/k19Da2YeIu
      hQDX2z75IynBk1/6XH3N9tkTbODbz76yrL45MTXB56NXuJacpqxIpK6AhNDncKC5ixcfO46q
      6+zo2MGO9k5y2SyXR69zdWGC2WySYrFAOHz7UvfhkWEivrb2yk1VQFVQUBhWXHxNBREGKUkV
      C0i/2jmnyvaiGwaarpNKpzm0Yxe/mb5CxhRkKDCeHKxsFNgGfR0hkLrKWCmFPpBEU1Xi4SjB
      YJBIY92mjIEQgt5De/nj4D/nT/+f/5tM6cbkWlUUAqqO5dr46wRm6yMxvvu9f0JwhSyFbgZ4
      8chxArEIiqoSb2tePqfDtUdoHR3HyeTJZLPULdbyrMz+uW0m0P/2D38mhxLTG77ATaEpKNky
      SkPk7l1Bvo+Zd2myNNKyTClm4Fc8aPgB9UvjatIdydNNfTx3+Di+7zM2Oc7Hg+cZsTNITax9
      nSWbw8FWvv7S1279fOlBu8P98T2PH/3mdUbcTOUXG1xSi0SBr3Ts58mnnt50b9YqVVYipUQA
      VwevUbBLPLbnwHLufi6T4f/84Me4xn2a/ElJpOjTt2fPluICUkoyM/P86G9/yPnR6wDsiDfx
      +//8D1mYm+fK5QE+v3yBgK6TLOR4vHcPQlF49dVX2dG/a1PH8jIFvv/484RCoVtWADf/vBlN
      GircQxeNX2NCIg+AYmiVCr+SgwjqEN5gSbTrEyn6tIoI+w71097SVpkZJBMEgyF+dPod0sb9
      7bl5T/B8Xu08xGP9B5iYmuCdK6eZcHNITYHbFYuYOpbvIllj4baB+zs9M8XQtWtMFJIQ1DZl
      TKWhksikmJ6cIJXLsG8xf7tKlY3iOg6fD5znwvQwmhRMOjkcXWC7DmEzRD6dIe+VCfoKuft0
      Torl0tnZveWgsBCCUCTCt772GsrbKrqm8fwLLxBuqSfS2kDXwT08t/AimmEwd3WY/U89iWro
      dzxeMZ1F+j6KphEIBVE0lY5QfLnx+1LK51qVv2sZgXufBaQp+PFKZFwWykhVgboQIltCTftg
      qBVDsA7C8Xk23MlUeopXXnmZWG18eYBayop5tmsfP588B8rDPfvcHahnb+9u3v38Ez5dGMLT
      lTu7u6QkaEk6u9u3PPsu5PJ0d/cwfjHJiF+8UVS2ARTL4eL8EJdKc3xl95EtHb/Ko4vneZwf
      uMg7189QDlcmiAQqz/zbk5fwhKwUNAoB5v17v6NSIxDZXEbPSjzHJZ1IYHY08v0//gOEqoJY
      MSNXFMJNdUgpaevtRjPXV+9copDK8B9++FdYro2qqDzWu5vdXX20dfWv+50lQ7DSCEgpl3sF
      3Nc0ULlioJc1Qbx0EWyJYjmI2hAyU0KoCuhqxTCoCnW+Tl9nNzt39CA9H9dxUPXVuh77d/bz
      0eglUg/rKkBK6oXJS3uP8qNPfsWYl117xu/5KLZHnR4iIS2kplBjK/zR898kHN16GXtXVzdv
      nHyfEb206ZZ8MhzAL7l87+CzNNY14CyV5lepsgFUVeVg/z4yc/N8UJ5clcrpanfZIWyrSElt
      pGbrE6qFFMVSCb0xdsfsOCEEvlJxwd6cqu17PlL6nD95Gl3T+ej8aWat7PLn7wx8zrsDn/Pj
      cC3/IVbL/t39eJ6HcdP7d3Mh2C8+eIcTw5f5l69+/8HWAcjaioX1XB+RKiBjJtgeeB5qqkxv
      tJHnDx7l7MULNDY1cfTwUSTgOQ5CUVBUFSEEiqbx6t5j/PryCVQhcD2XpPkQBSUlPNe6m5+e
      +5Bpimu7YKRETZWoD0Z5oecgoVCY2XSC/T27mZ6aIhSO3PZhW28JWCoW+btPf82kzN95BXVz
      cFhKpK4S14P4SH756Xt8/6vf2uhVV6kCgOv5LFj5ygzZl8gvwEpeW1FrsMRGDYJbttHit38f
      Vx0rFubEW+9z6NgThOKViZznuvzDD/8TE+l5km4Jd520UgnMFtL8/v/xb/jmkefIC5fDHX10
      1jbSGK2lJhZjd1cPV65fY3B2kvHkLD+5ehJbkSR/8peI//XnfymHU7MbOtH7gbA99kaaeWbX
      IVpa23BsG7tcJrzo41rC9zx8z0PRNBRFITk/Ty6fo6unl59++Gsu2huvxnugSEkbYer1EOed
      DTaf8XxerttF0soxnU6wt66dp44/c9sH1FtcOd1MYmGe/3jyDXxDRS+6aFJgqT7S9SuB4KAO
      WQuj7GNLDyUUwA/q4LgIRWFn0SReF2fUyfB4Sx+6orJ//8G7uSNVHkGy2Qz5bJaFXIYLk4OM
      ullcIR+IW1cUbfrbuwlEw+TnkhQLBbSiS6yrBS26vlvISudwyzbS87EUDz125wYz2fEZ/LLL
      f/rNLwkZJk/uPoDjOJTKZT4bukTJd+64j65YI7XxOKXITfE7CbWayctd+/nx4Clu7kmv+Xyx
      DEDUV/nBoRdpa25dcyAs5HOMT03S2dZBOBKplIEvqlMqi+0KkZL3znzKx8mhL35MQEpCluRY
      Ux/vpQcrBYGufyP3/nb4EgR0iAj/7KXv3NZwzE1PYxWLdPb23mokpGR8fAzP82hpacUwdIqF
      IrZdZnp+jqJXpre5g4FLl7g4PkhnZyeuZTNQmsecL7K7dQcXSrP4QYOD4WamShn+i2/8oJoN
      VGXLOLbNxYvnGZ4YY4gcxfvl+5cS0iWElJiqTslzQEqskAoSWhyDkB4g2lSHXbRwfY9wTZRy
      sYRll1EMHS1s4uWKSCEw6m/vlpVSkp+c48/f+EfKcmsqu63BGLHeDvwtJkd9MaQgpKQek997
      8qvE19KxkJJkYoG/PfEWh1t66V5MDRNCoOo6Uko8x0FZdAu98NiTzHyQZNjL3OcL2RxhV+Fr
      3Qd4Y+I8Ulfwk3mE6yN0Fd/zESEDEVonQK4I8Hz6WzpvO/hL32dyYpzHn3hy7e2EoHNH16pf
      LfVwrWtoXP7dsadrOXDwIONz07w+9Dnf6T9O07ONzCfnOTtSKcY54yd4tWtfdfCvcldomkZr
      UwuPHT7CLz74NRfnxyhHjHsfDvAlnu1gxwIUFcnNw+Osa7GzoYFcsYCqa6g1NeRzJbRYEFO9
      0UxeCcTYKCfPntny4A8Qi8W2PPgDX4Cm8FLSqoT5o6e/TjgYwrYsUgsLy59Jz2N4dJi/OPVr
      2iJxju8/jHmTqJkQAm1RE9x1HFzHYSGfvpED/0VESg5GWnlv5AKWDjJTwg8H8GJB3LCBHw/h
      +RJK6y8Bay1BJl25Ts91SSzc6vYSisKhx48sD/6+73Ph0gV8f+Ol6rZl4Xseb104wS9Hz/J4
      Yzf9e/ZS19jIYHKGSNGvNPP2fdrjTXfeYZUqt0EoCs3tlay21556iS4zzrJgzr3C8/EzRexY
      YF3PgeJL8rNJjLoowqh4HFTTwM2XcFN5nOnkbZU3b8YpWpTKd+55vB7NZg2iPnrnDW/DA18B
      tIsIL3Uf5IOLp7m8MMG+QANffemrJJMJPr92kdlihuFyCqkpTM1M86e/+juOdOzi6UNPrKp0
      8z0PKSXFQoFiocDRum7eT16v+Ku/iEg4kRrFC2pIy61Y8ZtTPjUFbLfih1+DdFiQ8i2k7/PO
      6Y9pisSoXzFrX2I5u2BRPOvN4c9pb24lXn+rFPRaCCGwy2W64s3sb+uhr6u3YlCkJCg0vrb/
      GH9//TMCvqBug/usUmWjRCJRsPL39BgiXbyRhroObkhn2rXIXR+mRuo0NDUS0gPs6NqNpuvk
      slmupKZRguundEopQUr8kk1d2mXoLtzvzc3NWHc5hX/gBmDGzvLXVz+spH4Kl1E7w5snf8O5
      5AS2sXgTFwfGZK0Kwue96ctEtQD1tXUEAybnRq5wYW4MD0nBszle30PYCOA7LpibK2y6bygC
      b0nutVBG1m5NR2ewnOTq4FVkqczF1CAN0VqaW9tQVBXp+/i+j6qqCEUhl8vy7vgFDKESrdl4
      2qgeCKAZBkcPPr76AyF4+akXKBYL/I6uoer6LQ06qlS5Gzzf47lDT3L5o59R0vx78y4XbWxN
      oHoSb6nmYImlzDcpUcsenqlh+Bot4ToOHToM3MgO1uJVFQAAIABJREFUCgRNpO+TzmQo2Bb5
      UhECOko4gDA0IrZgd6wFQ9Np724iEonwqwsn+GhsYNOn3B6O40TuPt36CxUE3hSLukCm5WOF
      V0tBKGUX1fbxLBulLgzGA7dz6+P5+Oki/loGwPHQHB+it9Hxl5KDRhMvHTrGx2dOcDozTo0e
      JKjqOL5Htxbj6ePPEA6H+YcP3+SKk6Q9r/Lq0edobltbOrZKlS8ac/NzvHPhM4aLCZxtloMQ
      yQKRMgRNk3HDxl+swdEdSacfZChgIRyPp8IdDOcXiPgaz7/84h1jXeWFDEd37SOVSjGVXmB/
      zy7C4UqswHEcXNcllc3wr//03/Lx6OWNnSsQVg26Wttx4lsvVFtC/eoffv/eyUHfS4QARVS0
      QRb/ELrtE3EVLA2kpiBDOkqiCP5iZs0XcCUg00X82Dpyzb5E8eXts4KEYM7Oc2n4Kp2Rep7o
      3osiJdOZBK7t8DuvfZeAaXJ58Aofzg+ipUpYySynUqNYCym6O6pa/lW++ITDYZScRTKfIads
      b8Gnki1TjpsUhY/re8jFSvh2Eeb440eZn5wmpgc5dvQJdvf00dzUhB64/exbSkl6PsHOzi7q
      6upob2pZLtCybRsA0zSJRiL81tMvMzE+wcDs2C37qdWD/Hev/Q7P7jxAXAthmibx1mbskL4t
      QfEv8NT4DkiJlrMJqTrNtfXsqG2mr7md+voGzl4+TzaVpqY2RrnZxy2XmSvnmClmyCluxd30
      BWE7hl7heBSl5EpulmA0wuPd/XTVNBIOhykU8ji2Q9EqgePSq9cyGkmhBwyaYvUPos6ySpUt
      UdfQgBh0Iby9fUb85sVAquLRaRnUGjXURKO0tbcTjkZ48fAxUvMLy7G0YCR8m71VcB0HKSrN
      mgIr3KK+7y9X6y5NvEzT5H/+F/+K3p+18R/f/Rk5u8TRHbt55eCT/M5Xv0V9XUWRtFgq8m/+
      +v/iXGpy2zKiHloXkOnAb3UfIW8V2b/3AAHTZPjqVdo6O/nRh28wnU3xYvcBnjx0BKEo+K6L
      LyVzC/OcGL7ItcJCpRHzA0QWbTzpry/G5/moySKiPrK20ZKSiK0QK0mmgi4yoFVWDQUbDJVe
      s47xcoYmJYSBwtjMJDFpEO5s4uldh+ju6Lp1n1WqfEFxXZe/fOvHTIh1quXvEqXs8nLfYzS1
      NN/y2UaVbl3HwS6VMUoeQd0gl07z/HPPY9s2mqbheR6aplXicjftT0rJzNwcswtzdHfuwND0
      ZZfRElMz0/zXf/7vKKh313BmiYfTBSQlzzfvoa2+kZ07KxF43/epraujkM/z8fXzlKI6Q4UF
      ro0MUquZ1Nc1ABAJh9nXvYsOPVppfXgXLeC2jC8r2T2JPPJ2fjxFIHUFxfFWxzGkxHDgmcY+
      eiINTNpZosJAsRzsbBFZYyJ1lSRlPFWQVVzSTonn2/t58ZnnOdr/GPFY7b2/zipVthFFCKaG
      R3FKFsV7kNwnNYW56Rl2d91aMLmRwb+QTFPrGzTV1NPR0UkwYNLb1Y3jOMsibL7vo6/QMhNC
      LKdkCyGIRiK0NDVjBkwcx0FV1WWJZwBd0zk/dJX5YrbSDewueShdQDFXpb22gUQqSXNbe6Wi
      Lpsll8nw0/Mfkg8t3jBFMIPF3wx8yB/40Nvbh+c4SGBH5w7qBk6QlO69iw2slRMsQSby+JqC
      rNtAEEdVkOkCmlRQVYUGM8q+5i762nZQF69jYmKcYGKKOhFgVHhIzbwllU21feqEiappmMFQ
      1edf5aFlysuTKxTANDctXHhbpMQouvTUtW35/fBcj7rmBsLRKFJKFFXFNE0ymQyWZVFXV0co
      FKqkqxeLKIqySr5ZUZRlQ6EoCoFAgFwuRywWW+Uu+l/+8L/l9OUL/E9v/jW2cnf1EQ+dAVAc
      nyP1PZy4dI7fevm1yi+l5NLQFa4PDZJVLTBXB2iE7xMKVrJsbtxgld9/+jX+9IN/vPtaASkh
      VcT3KsEpKcSij27lg1RpdoEEGTYq7pqNoFbktPeUIrz6yjcwDANV03Bsm7dPfcTJxAieoTAm
      86ALlv+kUqKVfXZGm3hi91462zvvdSlNlSr3FM91Kbo25XqTbS8LFoIa1aS3u2fLu4jUx5mZ
      nWJvZDfOYnFqLp+n7Lo4nkcqk6HVNJFSLruAVsYCpJTLribbtsnn8+hr6HcZhkFLbR3qNrzQ
      D50B6NRqGM7N09HURGBxUJ+ameLtmQGk7iKDt0bnpaFxfWaclta2SjzA90FRqKmJUSMCpLkL
      f5ovEXM5nHjwjtr9G/p7LVXoLnX28XziZYUdXV3kczkam5tJJRP89L03mYxJWIpjSIlWqKSW
      tYXjxCJRvvrkcSKLMtHVwb/Kw47reRi2v9wvYLtZCLhcujrAk0ef2NL3s8kU/fXtKJqG71bE
      Eu3FsUbRNDzXXR7gPc9bVjRYS3E0EAhgGAaWZS1vs3JlEo/X8ZXug3w4dhkzYOL7PnPu5l35
      D50BmHKyuNLnW4efAyrzgJGZyUrurrF+EZKuLl7qYlEHwNzcLDnFAbaYFeR4kC3h1Ie2TXgu
      WPTBcqjRTYKqwTMHj9Lb01vp9qUopBYW+OF7vyAVX53WutuJ0NrUiGIaHDt4pPKwVF09Vb5E
      uI5D1liz79324Hj09HSu+pXv+xQTaTwk0fr4Kn/8zaiqiuu6leYviyKVqqZVZOsVBduyWFhY
      oKGhAdM0sW37FlmbJZbiBSsH/ZWGIlZTw7/+wR/xBwvz5PJ5/v3rP2TOKWz61jx0BsAxFExb
      YAYXewl4HtcSk7f9Tp2jcWhnP9L3EYt+N9/z+OWFTypdtzaJki7R7BrMWjns5si2qo7WCZOm
      cJz2rh0c2HsAbXEJuHSEXDZLOrx6cNfLHod27WNn3+Z6iVap8jCRyWbu2ud9W3SV86PX6Hcd
      dMOgvqkRdyHHwd5+XM9jfGqcouIRrImsGSeIxGPkckXKzmr9riWtMqdcpmhZZDIZamtr8X3/
      9g3bFwPErusu9ye4meaGRpobGjnQ0sXw9QSlDWYH6R6EpPrwGQCA/to2gqGKAcjlskyWsxXJ
      hzWocRW+vvdJPr96kYszI/zeM18naJokEgkmnOz6VcJSguMR9BXieojWmnpy5SJDmTm+f/A5
      4rE4f/vWz0hsx9jveChll049xvOHjxDUAzS3tq05gzeCwVUNM4Tt8e1dx9jZu3NTh3QX+ywE
      I2s/zFWqbAcrWxLeLXPpxJ1bpN4NQjCjlpkdu8QT9V0YUmF/zx5UXUfVdXb27iKdTDCdmEOr
      u7XhixCCicwC7pBkR2cXqqqu+swIBsknkyiLg7lpmliWRTC4tgzM0j1bygZa7x6OjI8RaKil
      cyLGcDmFK7hF+3+JZi3M3qZO6hsaCNZEHk4DEA3cuGGqqiKkXNfH3WLGyJWKvDM7gFQFw5Oj
      7NvZj6HrlXTMNVBdybH6Hva2dVMTjWIEFpdpUpLLZQmHwhUZ6hoTxN1VJaqu5NlIF+072+ju
      6b2lLdzNxOK19Gt1DDhJYlmPgzv72dO7a9PuHs0wbmmtWaXKdiGlJJvN8On50wTNIE8fOoqq
      acsGIZ/PE63ZXNvF2Vzq7tyaN3e0WwtfsivUwMGOnTQ2NmHc5KKpratH+pLJUgozfGsWX317
      C7YvuTh4ma7GdmK1tcvH1HSdSDxOvlTCcxzi8TiBQIByubyqWGwluq7jLSWXrNOdrGCVEKEA
      +3bt4YCqUsjnmZifWb4eS3os5DPUBSM8deQJAivO++EzAK5Hb3PH8j8916tk3azDVTvJtdEE
      cnHmMJ6aY7/cg6HrKD63hn89n1c7H+NA7+7K4VyXUrGIbhjohkGsNo6UkvfPfkYOh7tS1JaS
      vkCcZ556dtnVcydMM8i3nnuF0Ce/4fjxo8TuIp+/OvhXuRdI38dzXf7u3de5QhqAj8cuYSga
      UlQSEtKeRW+4gbZYA53xRoJmkEQ2Ta6Qp742Tl97F9fGh9m5owczYJJKJbmcmtryiKW78ERD
      D9OZBFNODs/38DRllfs26Cl8reswh/bsv207x2gshpOYXtMAKIoCCoQa4wwnp+hTFaI1N/oD
      LE28XNdlanqaQCCAGQjg+/6qlcBS43bHcYhEbu0sttJ11Nuxg3OnRom1NCKEoKapntbe1UWe
      TqmMaugoN9U9PXQGIOypNDfeqNSL1dbSadYyxjpysYpY5TIZy8wjfZ+3zn+KH7z18g0PrLLF
      x6c/YzA7R9opUfBsDEWlv66dsmuTsgrMiNKNDJyt4PtECj7fee3lDQ/+S+iGwasvfHXrx65S
      5R6RSib4xcn3mSykSHklMCpukAXNAVb4xjW4VJ7n0tw8zF6qrMZVBaRETEu0cxInoBAe+AQD
      hYJVIuAr0BTd3CpASvr0OC/sf5yOtg6QklQqiWM7nBsa4Ex6nJImURyflzr28djetduZLruy
      qDSsiRkhXN+/bVA4VFvD3ML8KgMAlYmX0DS0UIhsKkXRMAjoOpqmLad92rZdGcxraiiVSgQC
      geUgM6zuWRwMBvnGweO8efEEdnjtsUQPrr3CeOgMQFG6FItFjKUlkxDsb+libPrChh6MtF3k
      z975CQuBtQvAbEPhnYUriKyFg1xU4tSxgDPF6cpGCmxHJsLBxi6CoTvrilSp8rDw5onfcNaa
      AVWAusHsOiEq2y/+v1QFzuJXC5pPAR8iOjJnoy1k0Q1j0f26+J0l18hagVlb8DsvvVZpGLW4
      Tbyu0rPilZYWjueyTE1PUV8bX7OXxkoGr16hvaOTYCiEIqGUzROuXV9WXVEUcuXimp9JKn3N
      w7W1FHM5iq6L6zg0NTWhLKaqL60IgsEglmVVgsmLPdAdx1k2FlJKCoU8Zekh2Nxk8qEzANJQ
      mU8tUBuPL/8upG9cg953XBai7o100IKNIgRSUzgc76S9poFoIEg4GOIfLnzILFvv2HNbhMA0
      AhvzS1ap8pDw9Sdf4Mov/5Z8iG1/rp2ogSMlluuiz6XRNa3iqinZeKpA0yva+/6KIsuoEbxt
      XC0arWFP9Pa9MVzH4cK1ywxcu8LOPf1MTYyTz+WorY1RsMoY5vrjjzB18rnscj3O8u+FQA8E
      kFISWoyFlHI5kskktbWr3bqe5y0bhaVgsJQS13VRVZW5uTneuH4Go2bzk8mHzgDg+YSDN3xv
      UspKcGgjWA6KoYMQCM/neLyHZ587ChJmZ2fIZzLs6tvN3MI8P7/0KbOUuFc5xwFb0t7Uck/2
      XaXKgyIcjbI33MRJdw6p3YN3RwikLrB1A1tKQEKg8k7rts8BGeV6JlFJ99ZVEpk8hXyOSM3G
      +/SuxHNdfvzxr7lszRNerOavq6unrb0D13W5PHAJr0Vd18iEYlFG5ibZYwTWbJYkhFj+bnhx
      4M/k8/iOg2EYKIpyy+wfKskvzmK6qRkMogqxpZjeg+8JvEkEIFYMyr7nMZScvvNso2ijSRCR
      AMGy5FisixcffwpB5ca1tbXT1dvH22c+4c/PvsW4zN/TmXnQU/CoZC9tpo9olSpfZDRdZ3fP
      TlTbQ3G2R7FyXZaKHZfSJXXB5/48BeGRkzalYpFUSDKXTGz5EOWyxUh6DoSg7C4OuKFQZRIp
      BLv6dhEqSoqp7DqnKAjEo1wZG8RzN9b8XQkE0IJBiqUSlmURiUSWVUFt26ZcLi8HiC3LIpVJ
      IfTNz+WllA/fCkDqKufHrtHa2gZSMjB4hSlZ5E62rFWP0BKrxyqVeO2ZFwgGg5Ulla6TTiW5
      MHKNz+eGyaoubKE4bLOkQ/D21dN0NLcxMjTInv0H7vkxq1S5H8ymE+xr2oFbdriencHVFEK+
      QlQPknSKlAP3aGK1aAh8vfLT1SvaYSFza+1WoZJ1V68GmaBMe6y+MllbPI6qaaiaRmdXN9r0
      JPOpLMHY2vUBgbooF4cGiBnh5VatTc0tRKLrNHVXVcq+j10sYppmZR+BAJlMhnA4vCwpDdDd
      2YXn+3w8fvX23QMXkb7PldPnuDh07eEzAAAXkxP0j48ym1rg/emBO0o6C8fjxV2H6e7YQSGf
      xzRNFE0jn8vyi9MfMLTUG0CrrC/uNeGsS9GEfL7M+yc+Qim7VQNQ5UtDS0MTSqAOp2TR6DTj
      uC5GIEAgEuLauYuMelk89R6/Z1Ki+nCsqY+G+oYt70YoCn0NbUykB2mN16/rFWhtbUeZESRs
      a82YgFAUQo1xyr6PAJyyTS6XXd8ALH5HGgaZXI7amhqklOiL2UKVS7yRCtrX1cPo/AxT2Ctu
      wa1FeMVUhtHzA/zw8/ewpfdwGoCCLvmLi+8tZhrc+UGSusqPrn1M0+lPePaxJ8lPjTGXTzGY
      myOrehC4Dx3Cltw8EjqVCE3xJsw6jd7ePmK18dt/t0qVhwhTD4B0MEKVmffKOWnfvn7SZ06T
      VLe3reMqpKQ3UMe3Dz5DR3vnnbe/DUIIDuzs5/rJGXa37Ljtts0tbXhTE0zPJahprFv+/kqW
      fPjlfJFoc8MdG834vr8cI1iSiV7JSjnpUrmM45RxrDJzc7Ms5DP0NHdQ01iHttjC0rVshs0y
      zWaU8VL64TQAwKZLwn1dZaYO/n705GIgQWxZA+5OiLILoiIL3W3U0lnbiFe0iNfVY0qF7p5e
      zFCIuZkZgqEw0xP/P3tvFiRZdt73/c5d8+ZeWUtX790z3dPdsw9mxQAQCJAAQUrcRYckyjJD
      tvQgh0MOh23ZDj/IfnBYEQ492Q4pgnJYlmxLsmxTFEMkbNEEKIjECENwBsAsmOnpfbprupas
      3O9+/JB5bmdmZWZlVWVVV3XfX0TH1FRl3nsz8+b3nfMt/+8OZ554Yn8uJiXlgJkrFLm+UcUY
      WgkHrse77/2QDStkP3bauh+xZOa5tHiaL7/wGrnc1gaqnSLjmMr8At945nU6re3VNk+cOEWl
      XeHG7ZvEQhIaguzc1iqjwmKFT9Y/xVr5lDPHT5EtFEY6Ak3T0HtzAmBrvrC6WaVWq3P97m3+
      6Tt/QKxBqIuuxpkGq/euYt8VLJg5OoFPM3Tx1qqset2+qaPrAHbLDIXbxhLF5BsRl5fPUJqv
      0HLb3P3kBou5Eheefa5bvysEx44fByA3otMvJeWoUiyWkPcCGHIAd67dYN0MZl9cISWvzp3j
      p555jblKZWbHr21s0Gm36YQ+HUtSD1ocq9fJFyeXjWayWS5fugLArVs3aXreg76lPnJzJaSU
      fLx6G2dF4+yps90E88BLk+i9Vb8aGFOr1VhZvU+M5O9857dZDdvdDuvs4Io2J3VsTefZhVN8
      Ul2hHnt4tkatUcONew1lu353UsaSrwV0iPhx+z7H9YizlWP80q/86sR4X0rKo4Lv+8gRHbKm
      bcF0hTA7wvJifurZ15IGr1nh+T63avcpLc1jGQbzx49xe+UOV4pPT32MvJNFdztcu32D0tIC
      2eLgYk8IQb5SRkrJh3evM2dmOXP6bJJIDoOATOlBCWsmk+E773yPv/fetxHQHQupd3uatEgS
      64KKtHj1xEVeufA073/4AT/55a8SS0ngefyz3/sd/qf6O5wpzNPwOqkDmDmx5FRxga9/+SfJ
      ZLPJaj8l5XFhs15Dz2ztSNX2I+wTSv7ii1+lPFeZ+bHLc3OY6ysPavwFRH1Tu6ahsriIlJJi
      sUR1cwM3itD6OqSllHSqdYK2i7NYxtU0rt++wfkz57vnkBLXdZO5Aa7n8b3bHyM1MSCA+XL+
      JButOtdlg1rkctIucmL5BIVcVzrD63TYrG7wyz/9c1w4eYZ/9d0/ZG5hPnUAM0PF5jTBhiPJ
      FYsTdUJSUh5Vas062tDIUykltzfvs0Olgm1589hFLl28vL1BlpIgCDB2oIBr2TZlJ0/YZ/Dz
      lrPjhishBIVSCT/w2WyuY+ec7pAYIfBabU6VlyieKbG2usrK+ipyocTKvbscP3ES3TRpdjrJ
      6Mh3P3yPH9Tvbglln54/xq984Wv8P3/0bYQEJ5vlg/d+xJVnngUhcLJZahsb3Ll5g9/4v/8R
      P6zfpfW+f/QawQ4NsXxg9MMYUW0ncxevLJxKlTZTHluqXmvL/S+EwNKMme6G52KTr33uC2O/
      a2EQ8Mc/+D6e6+K6Lv/gn/8Tbty4vqNzdDwXGT9oaAui3cew5hcWOTe3TKYV06l3k7Cy5VOZ
      X8AwTZZPnODs8VM0NzbRte4uQTcMYk1jfWODd97/EX/ne787IG6pWG3VKJXKPHfhMi88cQkn
      m+Xy08+AEPz4ow/5gz/4Fssnuw7lWnudVtQtF013ALsljtFrLlHZwam6dHpjIXU/4vTCcuoA
      HkN8zwMYmfB7XPBcl0bsY/PgPWjcX2dtc4Nq2AFjNqV3Ipb83JXPkxkzTKVer/G/f+d3uOZV
      +eGtj/m3v/Er/Du/+OcJfH/k48dh6MZAqMXU9nb9xVKZYqnMDz74IZQgljHNvsTyXGWeZx0H
      u6957dbtW3xw9UOqYYeOFjOqguq7q9d4/uMPePaprfmJc2fOcfL4SYSmcePT29z3GskR0h3A
      LjFiQb4VI9zggbGPJS/kT3Dm9NnJT055JFm5+ymmUp18DImjiHeuvo9VHkx0OuUin26uEWRm
      V3edCQSXz4+fgmeZFk8vniEbCc4fP93t2tX1sQ5jHH4cJh23URBiT5g7vhPK2QJRGJFbnufa
      +l02qxvJ3zJOdmABefbsOSq5EmE8Xloj0uCfvv371Grd+QvNRoO4N0gm9P1uAYqUVIpl/suv
      /xp//fM/jyX01AHslifJoxezyKzFueOn+MbxZ5jrCL76yhce9qWlPCTOnDu/7c4vDEPcTueA
      ruhgadTrbEh3y3ugmwan5pYQYybw7QbXiFlbWxv4Xafdpr7ZNYAZx+GLr3ye//Cr/xZfeumN
      XZ0jDAI2VteQcUxrZZ32yjqVhd13FfezfGyZVrUGQLZcYLM6XtBSCMFrr7/BL33hazyTPYbj
      8yD8rB4TS7589hne/f73uXvrJu1mM5l/nuvtLnzf548+eIcfb9zFLuQIZIz+k7/2y39z092+
      wSFlkIqvU/c6+DmDTb/NK8sXeOHcU5QrlTT887gyzecuZZIAbNRq3VGAj8j9srJyj6rw8WtN
      jL4BJEIIRCy5W11FbiPbMjUCVjZWefr4Oazerut7775NqVBKhNOEEF0dnV0WY2i6Tt7JsnF/
      jQunz3Pm9NkdD28ah67rVDfWCYUk3mxTLs4l1z0KIQR2JkMp1glqTVaC5kAuYME3iDfb3PSq
      vHrlBeYXl6iur7OxvkaxNzVQNwyee/ISJ4vzPHXqHG+//266A9gRUkLLAz8kl89jxUAYExiC
      t26+z/LxEw/7ClMOKe1Wi1vXr3P944+5fe0aURhy7cY14gnb+qPG4uIiwY37RGE4kDiVUvLx
      revE1mxb78PeEBXFM09eRh+Oj+/Ruc4vLfH8M8+TG9OpuxNajUbSyXv1k4+JbB3ZdHn6qadZ
      XFqa6hgbm1Uqc3NEQ1LbG0bIp6bHycI8//3v/mP+h9/6X7EzmcQmxVFEfXOT67dv0Hbb/OCj
      97leW02TwDsiljhrHcKsyWrjPk4+h75RJVrMk7N3rziY8ujjOA6FUpFr167x/HPPoxsGL774
      uYd9WTMlly/w6guf4/qN69SlHDDFpqaDnFEXsJR8rniKX37z6wMJ99Lc4dDUklIS9+r9+51G
      GASEvk+9XseNAox8FkdOv6OobVa5e+8eP/GnvszKdzdZbdWwA5ibr7BS2+BT2WZt8zrlpqQT
      a9y6c4srl7tJYa2X//jd7/0r5p0C733yY044pdQB7Ahdo3O6hL3WJmdm+Lmv/iz/y+/9M6pu
      wBvPj54lmpICXWXHuco8L0/oVlUNRjtpNDpsLB1bZrNRoyEGw8pnl09Svf4hXmHvSfJSbPKn
      X/nyoaq2kr0GsXptk09X7uJFARnD4vTySZrNJq7v0vA7SOD+vRWWL54jrrU5d+mZ6c8RS0TW
      IpPJcHp+mftek+txAzvM8ysvf5nv/fAd3mneo5bXOJMv8c0/+UMcy+bs+Se6E8hMk1/9ys+y
      Wa+Ry2S5/kdrqQPYMVp3fOQt2aTRanJl6Qwtr8P8HiRnU1IAbt24zt3P7rEwN8/FS5cf9uXs
      Gk3XkdGDYsXQ8/nhzY/x8jOIn0vJ6yeforDNGMeHQej73Ll3B3u5gt1z5NdrKxiWhVnOkBUO
      nXqTV5//HI1Wk8Uzp3Z0/HKlwpUnLnL3/gpvf/oxd+MW6IL3O6t8+PbvMOdr/PpLX2WjXef9
      lVv85Z/9s9xfvc+HH77PlSvPIDSN48snOL58Ak3X+W8uXE5zALvBz5vEjQ6OneHjuzf58itv
      Tpw7mpIyDWfPneeFZ1/g/BNPPuxL2ROmbgxUqdz/9C7tnL7n8M8CGd4on+Ns5fCNUhVCYGUy
      nDl5hs79Ko21DYQQZIsFrIyd7OjsAMrz85w+c3bHJakAF5+4yFxxjr/y5V+gIh4IbZsxSEPj
      h7eu8tLTL/BrX/0zrN+/z/mz59Fiyb07twH4+IMPuHfnNqbQWV1LdwA7J4ox7jfJYbK2tsrr
      Tz2PMyF7n5IyNUKQfQSUYdcbNYTzYG2ZMSzMdgia2HUvwGm9wL/3lV/CGVLLPChC30cXAt91
      EbqO6YyWhCiWyjxXLOG7LldvXUcrOwO9IXEY7SnEpxsG8wsLICVfPHWJ37r1DghBqMEvX3mT
      arWKEIJcoUin3Q05LZ88SdxLmF+8coU4iqhtbHDqxMnUAewYTRDP56h4GeJYcunSpSMbr005
      nKx99hmVhYUB0bCjhBFJzsV53MhnrV3nlbOX+cXP/xQra5/xj77/+6zF7R3tBrRI8mdeeHPX
      xl/F5+Mw7M7yBTTDSPItMorQ4hhVtxRFUfdxut6dLCYE5VyOjG0TRREd16UdhoRhCFJiZgbH
      MAohsB2Hpy9e5rOVFTZXa8hidyi8R9TdHc3AZmy0G1Qik00REOmCW/V1fuEnvpYc28nl2NzY
      oNPp8MMPf8QrL75Mea6CZdvkikXu3LiROoCEsizhAAAgAElEQVQdIwSxY3I7crnxwz/g1/M/
      w/ETJx/2VaU8QszNz++6dv0w8PzzLz74nz5jd+bkGX6x83n+3g9/Dznk23KxzqKRw9B1TM3A
      1A3qXouXTz2F63ucO3Nu+xNLieRBFQ6AiGMMXSdjmti5HFEUEUQRnU6HSEosw8BxHGzLShyF
      ruu4roumaQRBgG3bGD2HYRgGTiaDW6uRz+Wo9YbEBJ6H67oU+qSbhaaxfOIEy/I4125cY7O6
      xpy9dWbwrhCCL135HC+evsh3b7xP4PpcXbk98JDV+/cxdJ25SoULZ85j6Aa+5yXzhW/fvZM6
      gN3i5030luTW9eupA0iZKY9UPmlopfvkuSc4895b3KRrOHOhxvnCIl9/8U2WF48BfbNup1wp
      x3EMYUjGNBG9oSm6baMJgT0kzWHoOjaQy2S2jFjs38lnMhmCXo+BMv7JMQyDcrHIRr2O0Tu+
      aXdX+OPegyfOP0kcxwP9EXvl1IluElkXGsV8gVs3b+B2OslQmZOnT2OaJoHnsbC4RC6fx7Qs
      7t65zakzZ3n9jc+nDmA3aJsdpKVTqkXcat3ktc+/eaRXbCkpB4VuGPzsS1/if377m0gp+cuv
      f4PTpwZn7SbGdgqJ59D3yZgmpbm5HYVihRADj+//WTVrGYbRDfNsOa2k3emgTan7FMcxmqZ1
      nc0+2ImnLl7qNtt9cnUgsaw6pK1MhlzvuoWmcersOQCcbC51ALtBMw1KHVg+dgw7FNRrtUPT
      hJKSctg5f+Yc/1H+z3J/bZUTyzvrnlfGOXC7mkOlfJ5sLwbfPy93p3m54Vm70M0FKCG44b9r
      QiCjqJsn2IYoCPDDEDub3bd8oRCCL37hS7TbbbIjilLsoTwFdNVr02XrLghzJutFjQ9q92g4
      DzxtSkrK9kgpWZir8OrzL24RNdvueSIMMeOY+VKJxXJ5pPEf9f+7QdO0sVIduVyOjKYR9UlR
      qPMOn9u0bewxVUOzRPQGv1z96MfcX7k3IJMxiuuffJLuAHZMGKGttThhF8kfO8M3PvdFrl29
      yjMvvPCwrywl5UgQhyH5YhFd18maJu0gQDcMpJREUYQQgigIuuWWvcWVlBLCkEqphK7rMzHw
      26H11DRHIYSgUCjQXl8ffG1DIx+Txx9QiDiKIv7xH/9/rEYd3jx2kVCTHMuXObd0Eg3BmVOn
      kaiwlEgdwI6JQRQyXDn2BC9/7hU+vXWLM+fPPeyrSkk5MpialoRW8rkcdhDgeh66YaCZZjde
      nsuxWatBEBCGIZZlUeqNWR1llNXqelrHoEpAJzHV34elrx9yAl/XdX79T/0cKxur3Kut8/Ha
      p/zh6idoV9+mEplkdZO/+JWf48SJk1y8fCV1ADsiikETWM2AH/hXeeGFlzh7YfxQipSUlEGi
      MCRrD0pFW5aFOUJmebGnvR8EAVEUTVyRq2PthOHHDx87juPEUY2iVq8ThiFC1w9Nz4YQgpMn
      T1HI5Xn52RdptVrcuneHXCZLznFwMs5As2HqAKZFSvLtmG88+waLn6tQKBaxRiRWUlJSRiOl
      xACyY+Lh4+L4hmHgTznKcZqV/fDjx12r7/vdeQIjHEW1VsOXsttQdggrAIvl7gyAXD7PlYvj
      daVSBzANsWQxNPnzX/15in2NHikpKdMTBgELxeK2K/VRRnzUc8YdZ5rjTzqelJJ2u00ulxtp
      /NeqVaSuo+s6h2Pdv3tSB7ANwo/Qmh4vnn4yNf4pKbskCkOypok5FCOflGRVfxNCJA1b42r3
      xx1rJ45D4Xke2TElm0IIJN2kbthLXh9lKZjUAUzggjHHT73wKuVS+ZEZ25eScpBIKZFhSNFx
      cPrCKcpYTxvTV93B0xrbSY5iO1QD2Ljy7rlCgWq9TtDpIG17ixbQUSJ1AKOQkjMiz69+8acf
      elY/JeUoEkcRxDFZyyJXLicr+N3G51Xp5yRjPvy33a7MDcOg3W6PdQCWZbE0P0+r1aLlusg4
      PpR5gGk4mle9z4gw5vLSmdT4pzzSNBuNfTmulBJLCJbm5ijk8zsy/spoDxtvwzASbZ7tnr+T
      ncI4NE3D87yJ58nn8+Qdh9j3CTzvQHoTRrGX86YWbohMK+RPX3mdSxcuPexLSUmZOZ7ncfWT
      jzh35vyuBpJsh5QSLYoolUrbVuTsRLpB0zSiaLSW/n7E4JUYnO/7Ezv9c7kcmqZhGAb1ZpMg
      jrvVTppGLCWxlDMtE02UTqMIozdzOAhDpBBohjEgbjcNqQMACCK0MOaEU+Jn3vwCx3qqhCkp
      jxqWZVEslpByco37rglDKr2Qz6yMv3qMZVl0Oh2yBzQUxjRN2u02pmlOLBeVUmKaJvM9PbD+
      /IaUEtd1abouUtMStdLdoKQw5nI5LMsaOE4cx2zW6wQ94blpSR0AoHkhL5ZO8TNf/tqRi+VF
      UdQdcHFIGlFSDjdCiC3qm7PE7hnLaY3/KJJBLWqQSxwjhEhUNfsft99YlkW73cZxnC2GNY5j
      XNcd60hVKCqbzeI4DmEY0mi1CHfhBOI4xpSSuRGqp0IIdF0n5zis1WpohjF1dVLqAIKI5xbO
      8LNf+KkjWemzL6u4lJRdEAcBmW3Go45b+Y8yVu12G9u2BxyK6hg+qNJLwzDQdX3LziMMQ3zf
      x5lS5E3tYPJSstnp7NjWyDBkrlIZmyOBbtjqhG3j+z6u5xH1wlFBHKOP6LSG1AFQakm+/pUv
      HUnjn5JyWIh7FT/TKuOOMv5CCKIoSrp+M5nMSImIg2bY2O7U+PdjWRY0m7uaCzDJ+Cs0IcjY
      Npk+uY1qrYYfx90cShx3dwe9Xchj7wCunH4Ce9wkn5SUlKmIgoB8sbjt48YlcNV/VdL1sO1s
      VW+AkqXYqfHvf53FXI7NZhPNMLqzh6c4jgSi3njLnRCGYTcsFwTovTBWFIbd0ZhB8Hg7AMuL
      +dxLT6er/5SUGTGps3cadqrlc1Aow28YBoZhEEURxpgy8eHXMPzanUwGyzTxfJ+4N6PYD0Ni
      IdB6lT3DaIaB53kYO0yAq/xAecTzlDbT0SKWoM3GYBuRpDJXmcmxUlIea0YMQhnFsMRD/38P
      M/3XvV1Dmnr8JHRdJ9tXhiulJAgC6s0mvpRbkrhxGJIpFHZ83bquj+1nEEIc0kYwKR9MCpKy
      K8McxxBLTjY0iCVa08NoeGheiNEKdjRZSB3Xi6OJzR4pKSnT4075Xepv1lJGLggC2u12UlN/
      2OiXsFDS1LM+vmVZLFQqVPJ54iBIqqBC36ecy+0qLKYqqMZxsO/0iAEKozhvlTmVq/Ddmx9w
      af4kz5+7RKfdIpKSY3PzvPXxjzi/vMxcqYyTdbh69Sp/cv86tdAlKFoPzqGcwqhzSqDaYrO2
      ybF9aIhJSXmcMGybIAgGko/DjEr8qjp5TdMOrL5/t0RRRKfTGSkRPUsyts2irtNotQDIFYu7
      Hjvred7EHGfiAIQbIjP76A+kxGj4hEV7y++7F/DgDV1t12l02jxTOsH55TOcOXFqoMvt50+c
      HDjE/OISr8vPc/WjH/N/ffQWfkZDuCFfqDzBXKXC7958h8AY+sAEyIxJdaPKseXjM3+5KSmP
      E1EYji0BHSfPEMcxnU5nZI39TjmI3MFBOinDMJibkfrw5B1AFFPYDMhUisRegIxjNiOPOLv3
      8iu7GbAoMnxqeBSkwYXSScrzFXSh8ePV23za3uQZc54wjvmATaTddUBNEeFFEYHrcYknukMX
      tvO4QvDkxad4c3MdSzd46omLlOfmQAjmCyX+wQ+/RWQO3WSa4PrmCpfllTQRnJKyS5T2T3/J
      5nB8v7+xS9O0pJRynOzyNERRRKPRoFKpUKvVKBaLI+cI9OccXNfdddWfZVnbrqgPG6p6aVw5
      rWG0fPKnlxDGg/hSpdZks9EgzO3NCYSmxpXyab529izLy8cHxNVeky/TabfRhKDTafPs6ir/
      9MM/JHZMbC/mhcJxwiw0Oy2iMEyGQ09CaBpfeO3N7s99N9Wpk6f5/GcX+M76JwMJZAG8u3mH
      z29WKafJ4JSUAcIw7M7nnbQ6l5LI95kf6lBVP6u6/v5dgHICew2l1Ov1RB9InaPRaBBFEYVC
      Ac/z8DyPSqVCu91OJnzpus7m5iZRFFHuTc6aBl3Xp55MdljQNI0gCMY6AP0X//Kv/c2WiAal
      VzMWtmHSbjTB3GU9bix5Y/48r7zwMpX5hS03kRAC07IwTBMnm6VUnuNcfoEnCot84cnnWFpY
      4sVnX6RZq+FknKnHL45UAhSCU0vLlFy4tvkZUu+tShyT2NAIak0unjp/JKoRUlIOAt/z+OYf
      /EsWSnNks6NDO1JK4iCgUixi9Hbp/d8/z/OI4zhp6FIllKq7di9hH03TqNfrZLNZgt7geNM0
      8TwPx3HwfZ9arUahUKDZbLK5uUmlUqHVauH0cn6+7yc6PtMghEh6AY6KrdjOARhGPotoulv+
      oDs2+Q2DxpSJW+IY3Y2IDQ3bjXn9/BW+8PyrU2vUGIbB2TPntvz+wlOXZhKeMQyTl559ke/f
      +4R7uAPH/PDTG7y+usrC0tKez5OSchi5efsmzU6LZ556OvndpHLGWzdv8PIzL1KZXxj59yiK
      EFHEYrk8sjql3W4nq+39QElDq/GNWq+zNQgCNE1L5gdomkahUEiMoNIWqtVq5HK5HecNjorh
      n5axLlgIQW5xDq013ZZH8yJezp7ga6Un+Wtf/1W+9NIbMxEo24t63jBhGNIKt74eT4Z88MF7
      MzlHSsphpFwokTO7u+goirj76R2++e3/l1azueWxge/zm2//PvOV+ZHfvTiOMYGlSmXAwKvV
      fxzHmKa57928S0tLFAoFSqUSpVIJ27bJ5/OJE1hYWKDdbne7b3v5gUKhgK7r2LZNHMfJbmBa
      ZpFo7t8lCSES5/UwmFj2o9kmWWHS3Kb5Sq97LHd0Ll55gvMXLs78ImdFtbpBQ/oMv+y4mCG7
      iyaLlJSjQqlcplQu8+mnd9A0jb//r/8FP//CF8nl8/z4k49Ynl+kVJ4jjmO++73v8uKTV5K8
      mzJ6cRgipCRr2xTy+Ye6GlbORUqZlEiqfINpmjiOM/A3y7K6na+9Lt7iFLIV+0Wn08G27URk
      LgzDZK6ASpT3O4g4jvftWrat+yycWCS8fQ+3OCYJW3c5b5T4xje+Snl+ftbXN1M26zUKVZ/G
      gkD2Jb0xdD6q3eNzU3T4paQcRZq1GplcjvnKPIZh8Fe/+ktU5hcIg4B//oPv8NOXXuW58hwC
      eOn5F8kXugZSSkns+2QzGZxCYaI2/sNGSpkY9v0qCdU0jTje2ywFFY5S8XkpJZubm0A3FF4q
      lajVaokUdSaTIbNPc4e3zcIITVA6toDVHDOOzTFZdIqH3vgDXHjiAudOn0HqW1/2jc4G9drm
      Q7iqlJT9595nK93KG8fBME3mFxa7apCmyb//03+OZy4/A3RDrsr4A0S+T6VYJNuL56uEq1pt
      h2GYlHQqgTFl1B5FhmcS7AWVswCYm5tDSolt21Sr1eRcaj7xfjHVK9EzFo42YrPgBeRu13j+
      uRdmfV37gxCIngLfMJEhuLNy9yFcVErK/nPxqUtjDZeTzY78m5QS2zSxbTuJ6VuWlVTxqJ8N
      w0gUPFW1j6qwSdmKpmnUajU8z0PXdXRdp1arIaXEcRzq9Tr5fD4x/LPOpXieR7VapVarTa8F
      ZOYcCKPBX9omJ06d2nWb8kEjhOAnnnuVQtXvisr1o2l869oPiMJwy/OiKCLwPMIphlKnpDwq
      xFFEbhcyKaLXFNbpdKYa5P64kc/nmZ+fx7ZtyuUy+XyeYrHIwsICvu9TKBTQNI35+XkKhcKO
      ehWmodlsUqlUqFQqO3AApRxOZ6tHtyyLdqcz0wvcTwqFIj918SW06tZtVV36tHr6GwC+69Ku
      13GbTYSmEbguXqeTrmxSHnniOEaXEnuXiztN03AcJ5F7SL8zD+gfdan+AUluYW6um4zv756e
      Naurq2xsbEwvBieEIFfME1Y3CTNGohu0EjSp9IYhHwmE4MKly7zU3OCP3XsDf7LQBtq8NV0n
      k8slpai6YdDY2Ji6KS0l5aghpewOd7FtCqXSnhK+Qoik3LLT6SRhosOaRN4O13X3/dr3y+AP
      s7i42FVe3cmTrHKehVKOqN6mUasThiEbpsbtO7e7DVtHBNtxePH8Zb7/gztIQ0tyAhb6QDjL
      GOqeC30fszejNCXlUSSOIir5/MiqEyklnudta6BUH4BCiah5ntdVDN1nNc39IoqiPWkXHRYK
      hQIbGxs7dwDQ9epGKcdcqdseHmw2Wa9vcmHml7m/HD9xgr8U/wT/5I9/n06++zacKs4jVC1u
      HA80skVhiGFZA3pGKSmPHHE8UexMSrnrksTh3cBh1P2fhOM4W4bDH0WsvtnNe65n0jMWT549
      v+eLOnCE4PTps7x+5nI3IRzGPH/yyd6fxMguZvX7TqOB126ncc2URwoZx2Qsa6ppV9P8G4XK
      DSht/aP0HVLDah6lxPaeHUAxNsfqhRwFTpQXuRBkeaNwmkpxdLbda7cRmkbYq3XO5PPopol/
      hJLfKSnbEYUhzj7nt1TyU5WPNpvNI2VQLcsiHFEpeFTZ8x7sbGlx5uPRDpJzZ89x7uw5gJGr
      /jiOMTWNyPeToTRCCISmEYXhlvmmKSlHFSkl5j6HZVTjmLIZlmURBAFRFGEfkfzasFzDUWZP
      n3bsBZw/fXpW13JgqG6+wPe7eucTKhNC38fsyd6avdWRer7lOASe1617PkJDIlJShomjCEvX
      0fd5MSeESJrI+omiaN8VRGeF6nEAkia4o8qePm3pBpSLsxlbdpCo1YfZS+pO8uRWJkOoNDui
      aOD5umFg2ja+6z6o2d1H4aaUlP0gjiJsTWPhAMq5lZbOMLquk81m8X1/qkqjh4lpmmSzWbLZ
      bCJHfVTDQntyALZmzETy+bBj2jZoGr7nJb/r7xjO9dVLj+okTkk5rERhiCkl5WLxQEIak2b3
      CiGS+cCdTmdfVTBnhW3byQCao8ieQkAZ/dF0AKMEn7JD8rGGaXZX/nGM3qt5FkJgHOHtYMrj
      R+j7VIbGOe4n05xH6Ql1Op0jEWJRrykIgqmnhR2W3OGeHIAhNLQjlgiRUhL3Vulab2pQFIbd
      2GRP6nZUUnuUozNtmziKEJqG12rhpDMFUo4QUkpymcy2BjaO46QL9qAGoqvdQBAEdDqdQ9s8
      pprj1LW57oPpioZhbBnFGMcxXi+SoCaWPczk954cgGMc/sSnlLI7uDoIII6xLKv7hgNREHTf
      eNMkCAJa1Sp2Loc+RS00kMhDAGiGQeD73eaWvsHXKSmHldD3mSuXJ97ryvg7jnPgRkoIgWVZ
      xHFMu93Gtu1D1TymZLDVcBcgMfhSygHnpRrgVB+ECoWp36vE+EG/x3t6N3O2M5N5vftFHEUQ
      hhSyWTKFAu12Gy8MCYMAAeSz2QEPPV+p0O50WN/YwMrl0HSdOIq2TRQDiT6Q77qEnoflOGA8
      miGylEcDU9e3LftUNfsPc/WtpCTU/IGHXS4qpcR13QFjPoxyXqq6yTAMMplMd5Zy37QvlfwO
      wzAJeR3k0J09OQB3xHzdw4KUElsISvPzhGFIvdEgAISud2WdwxB6b7xaVQghyGWz6LpOu6f8
      6bkuQtMwHWekCFwUhgMOwspkiIKgW1qqabitVlItlJJyGFCCb6UpdG0mJW0PEhV+epjlolJK
      wjBM9Iym2eHruk4ul0ueP67pTTXGqV2DaZpbwkf7wZ4cwGqnnhjAw0QcRfiui2aarG1sEEmJ
      ZppEvQYU3TSJgPsbGwjAyWQIw5BKuYyu62RsO+mIjOOYzc1NavU6hmluWdGL4ZtASpx8Pvl9
      Jpd7IP8aRRN7DlJSDoI4iqgUClNJPas5tbNmt41UasWsVuAHFTaRUiYr9N2Gw3aSAA+CIAl7
      7XVo/KQKpb3tAByd733wLm88+7l9DwWpGvswCLqraXUDjThv0Euy+FJ2BdyEIAwCMrpO2/ex
      dB3R+2faNlGvs3d1cxNL13FsG9u2CcMQy7Io9xxDvdFAWBZWX0JqeBUw7BDUl8drt9F0Ha/d
      xs5mD53TTHl8iKOIzA52pLN2AGpXsVujNpwg3s/8hFq1h2F4YHkQFT4yTTMZtbkXR2BZFs6Y
      wT57skJCE3xQ/ZQX3afJ7GJy0Hb4rkt1Y4Nau8Hd2jo36/fxZcScmSUTacQy5ud+4htb3hR7
      hFqfEIK256EZRlJfPCDtLASGbRMDjSCg1ul0Q0JBQD6Xo1gsks1mqW5u4rVamLaNNkVsVBn8
      TG8baNr2wG4gJeWg0YFO7/6ehlnX488qrNRfLrofIROVAFeNX7NgJzISKuylcg5A4ghmxZ6X
      obrY2/ZkFK1mk3/13tvcbW92B88YOggQxQw6UAfqSKQfsXb/PovHjm1/nYYx9apbSUFruo7r
      ++R6sVLDMFhcWCCOY1qtFmEcE8YxUte3fCiB50Gvc7j//ZmklJiSst9IKfE9D3t+ftv7cL9q
      1WeZV1C7AVVaOSsn4Pa6+2e96s9kMjuWlFavsd8RzKosds+uJMho3Pj05p4vpJ8//OD7fKp3
      oJhBWAZC22o0pZScNUssLi3N9NzQdRZRGBLHMYGUbNRqtNttWr2Wb03TKBaLzJVKaHFM0G4T
      el636qiHputopjlyN5KS8jDRLYtavTvQaZKcs6Zpe44/j2KcHMRuUSET3/f3fFwpJa1Wa0+x
      /kmoheJurlM5Atu26XQ6iZPa0/Xs6dl0Y95/cv86zWZjr4cCuqvvu83qtm981oN5MmxWN2Zy
      3mHM3lZL0zRiXacVhrTDkHqz2b3O3htfqVRYXlxkoVzG0XWiIEBK2d1xHGA5V0rKNAghMDMZ
      OlFEvdl8KBU++1FZpEoylVHcjYFVNfmO4+xrv0Emk9mT8VZlsUqUbi/aSTMJJrUt+Jc/eotg
      BnoYmqbBNh+ejGNeWjrPU5cuU67M7/mck0hKPIUg9H2yva1YFEVEUfSg4asnpWvSbbBRRFGU
      JKUHXsMBzf5MSRmFYZr4vfv3oJn1DqD/uLZt43kerVZrR0ZWDahRWkT7yawWhaoiStd1Op1O
      V7Cy93rjOB6wUeOYmZtbNwK++/6f8KUXX9/TcTaq68jM5Die7kYcm18kN2PpBZWcHZUriMIQ
      TQianQ6Ndjspj4vjGE0Igt7ISAwDUwnD+T4Z0wTDwPN9YmBzfZ0wCNA1jUhKcoUCuUIhTQin
      HDhBn4TBQbKf59R1HV3Xk/GTqlx0koSFqu0/qHm/cRyjz7AcXPUQ+L6fjNv0PC/ZxUx67TNz
      AEIIrlbv8WYQJOJou+GDm58QZyZfVinU0cRsvHS/8JuMYxjjLfsHxAtAPUpdxcjkkxD4YYhj
      WSwUCkgpqa+tceXSpe75pKRWq3Hv9m1KCwtk83niR2TQRMrhRsbxbLb/hxTVZavCLaNQUg4q
      tn5QRFG0L01sw6WjqgFtEjO9B+K8xdsf/mB3T5aS23du8Ul7bduH1tzWTLZpcRwT9N0cmq7v
      yXkNo5smotfUoWlasjpRCCEol8tcvnyZaz/+Mb/zm7+J127P7PwpKeOQgPMYFCgEQYCu64kI
      W6vVotPpJHLTjuPsesj9bhmlNjwrVOnotNVQM810CE3jR+0Vclc/YHl+CUs3KI4ZGBP3WroD
      38eybe58eovvrH+CsMdfuIxijKgbNsnPIPyjadrMq3TiKEICuqYRBgFhEGDoOmGvqqg9wsAL
      IXjttde4dOkS7XYbt90mVyph7kAG91EZUZdyMGialoxnPAjJgYeFaZp4noffE2qUUh64wR/m
      MH1XZ57qFobOW5s3YOMaIoh5tnSSV595CYBGrcbK+n183+dG7T73/QboGme1AqEGWBMuxw95
      Ui8RyJDl+cWtEgz7RBzHxEEwKHutaWhjqgREFFHIZrvNKZqG3VMC9Hwft9OhUqkA3W1gtVql
      UqlQq9Wo1WrEcYyUkmPHjnHrzh2Onz0LQL1e4zvvfR9T13FMm5yd4YkTZykUCsRR1I0p9vU5
      HBat8ZTDjTAMXM97pB2AECIx+IdpwMxh+W4aeR9o+93Eq5jNhQkhQNdB1/lR6x617zWpek0a
      hJDpyiULAzC7yYmbdMMwgtHnlnHMU5kFvv7ym9y6c4d86eDGUEop0YRgrljEMk2klDSbTbww
      JOqViQ48XtNotttEQdBdwfdqqpu9zstGo8Hy8jI/eu89inNzrHz4IaVKhcLCAqI3dex7b7/N
      86+8QrvZxMnlqNVqfL9+GzQBErRI8uVGk+cuXiFbKAx2NEPiFHayg0h5PAn6elcOmsO0En5c
      Ebfu3ZO1Rp07n92j6bX5UeMe0no4FSmiEzAnBjPWAjhXWuLlK8+h6zpN18U4aDnYnnqioWlE
      YUgoJYauIzVtZMXQpBX4nevXKRcKaJkM2Xx+m9N2vyCtZpOPb15D7+URyoUiJ5ZPdEtTe+qC
      /UlqVZ2k8g1xHKcdyCkj0eOY+XL5wM/ruu6ByzrHcYzv+w89BKTKTQ/DOcTNe/ekVB+ClNy5
      e4dv3fgBfubgnUC5I/h3v/aLAzeFqmW1LItao4Gn9Pkf0rCVva5a4iji/soKyydPzuR64p6+
      eP/7IaUk8LxkZ+C77pZdQkqKlJKMplGcsBDZr3tGlSkepKRz6gC2MiRlKTh18jS/+PyXOC+K
      iPreW42nRay3eO7Y2ZGSDyrMkqh/PkRDttcvhKbrMzP+6njDzlAIQRzH3L97d2bnSTkY4jjG
      P6CB6KHv42QySVPids2Jw4+b5t849qsZLGVnjMxk5gtFvvLS5wmDgGs3r/Pe6i02zGBfV91x
      Jcut2ipPbVapzFVGP0jKZORiymRsx2HJcbrzGtIms6NDrxkxcN3uVDkeLDqiIEAyGO7bC4Ju
      tVr3tFuN9SjJhmkXhOqa+x8/LIrY7wDGHXeWOxDP8x76gPn+iWAPGyHEUAhoDHEUcfvOLe7X
      q2y4Te7IJkKfvTOQUlL2BH/u81+n2IatEPYAACAASURBVCvzVFtFTdNY39xEDH2AqntX9ESr
      DsubexhQMxREL3cxzWjLlIePMoah7xMFAZleiEZKSRSGM3EAUkru3r7FvbX7RDLij95/l3ev
      f0QkY1449xR/86/89S0DY/ai4TN836m6/J2EQkZFB7Z7TD8qLLLT582KKIqS17zf55smBOT7
      /nRloJquc/bsec5yHqTkvasf8u69T+hktLGOQPohuUAQS4lPRGTpiDFlnjIIkWF3NVBF8tZ7
      7/C1N7408JhqrYYYSrjGfToXqWHbihACoev4rosMAiLDGBhmk3I4UZ+PadsDo0RlHBMFwUwc
      eRxF/MN/+Vv84+9/q3vsvr/9cPUWGdvmz33lZzh36sxEKYFpGf6e9qtibqmkm3I3Ms15hv82
      7hj7XZGkZCkOSm5iGjKZzHQ7gFGEQcCNOzdZrVfZ6DRYiVpgaBBLlnB48fRFTp04RSwlge+z
      trHG2zc/ZN0IBpyGjGK+WD7PkydPJ78r5AuJ91LDkjuel6hryjhOJBM0Xe9KOPQ0/AE0IQjj
      mKg3EexxJwrD7k4pDJOwQsrRQ83ynYXKbLvZ5Ff+q/+AlU595N8FYGkG/+mf/jX+6q/8hT2d
      axw7SYbu9PX2P14Zfs/zkgTwsCMYDk/NEjVOcr9X/qqPKI7jRNtou8fvuhHMME0unL/ABQAp
      2Vhfo9Zq4tg2y8eOJ3F6HdAdh1MnT3Pi+Ene/eg9/qR2u+ssgPnI5NXnXsDQR1+KmvST8f1k
      RGN/eaNKEo96Y1udDpu1Gk6h8FjnDXTDwHddRJoLONIIIWayoJFS8gd//N2xxh+6OwIvDvnf
      vvNNXn/6BV648kzy3E6nkwis9c8UCIKAIAj2RUp5pyv0/tW+GqQyzvj3/254p7FXgz1L479d
      nqTdbmOaJpqmTdXcp+v67ncAe+FHH7/Pv9m4gdTgq4uXePnp5yY+3vd9pJQ73orGcUyj0SCM
      Y+Je9+5h2X4dNGEQION4IKSQcrhRX/igN8o09LxktOheqG5s8Bf+1n/CSmtzqsc/u3SGf/if
      /S0qc3P4vo9pmkRRtMWoqql5+/0dG7XwU0Z+XB7QsqwHoo87TGQP7yZGPWYcSmxut93W016r
      ev07HV35UBwAwIfXfswf3b/K84UTfO3VL4x8jBAC3/fRNC3R8RhHv+dWU7ugm3gJw5BGq4V+
      QEOdDyth0K3kSquCDj9xFCX9G7MK30kpuXP7Fv/tP/kN/vDG+zt67oncHP/jX/svuHzuySSO
      fdCdvMrIKcOv6vpVZc+0YxJ3ksie5niTHtNut3c1T7j/Gqe53v5dxk4+k/0be7MNl5+4hC50
      FgvFsduuOI6TsM+0H1oQBER97e2GYZDNZmnPYFjNUSeOIqTnoW/TgZzy8BF9QoVCCOQMwipS
      SjbrNT6tru74uXdbVf7Gb/xtvvnf/b2RK+P9RBl6KeVACBgYEHfbj+vZzu70267h83uet2Wx
      NWkHsVOjrwh6agCTnjvuvXmokuAXzj1JoTRHvdlMPNfwlk4NOlA1w5MqBKSUBEFAJpNJ/ql4
      ZBhFyN7W8XHFtG3MNAl8JBj+PszCuGmaxnPPPs9//At/CW2M7tYkbjfW+cGPd7Zz2AtqwEm7
      3cayLDKZzMjda3+sfy/Nabth2Gj3/1MKBnEcJ2GrUc8fzlfs9BqllEmIadzrHXfMh+oAhBDo
      pokXx6xtblKt19lsNGi12101TdPEsiwcxyEMQ9q934dhmBxDjXLrdDr4vj+yqsDzPHTD6HbN
      PsYhoDiK8EeMp0x5vHjzlTf481e+gCUeGFNbMyibkxcH7dDnrfffPZBFlDKgjuOQy+XGFnro
      Pan1nRxXRRZ835/ZIPlpHM5+OCf1WibNF5jkIB9aCKgfraccqj6GMIq6DTBhiB1F2Lad/FOa
      +ion4Ps+tm1P3Gr5QZCOXKQbVphVF2nK0UUIwS9948/QsXrJW+AX3vgK9Uad66v3+D//zbew
      dJ2PqytbnnusPL/jJOq0qIoi6Ma0pwntWJaF67rJzn+SIVSNWGoco3Iq/UUm0w5qUQZ01A7N
      71UsQnfxOYs+iknXoev6ttc9toLoYSWBp6LnrYkiiCIs0ySWkkazyUKlkoR3xrV3qxddazSI
      RjiAx00ls9Ns4vTF/6WU+K6LnYaFHiuklFRXV5EyJgpDfuO3/w8+Wr3Dj1Zu8tLJJ/nlV3+C
      qyt3+Pvf/SYRg4bjdGmBn3nudf7zX/9r2xYT7OR7pRqlVDjXsqwdlZO22+1kFvA4lFMZ1yTW
      brdxHIcoipK4uso5DIemgWQuuLIzpmkmuwllk1QYe5YzgPtRQ312K3B3uB3AEMrj+q0WjmWR
      zWYnanuoD2azViNONYRGEu1xhnPK0UNKyX/9d/82/+K9twDw5c5mAhhC47f/xt/m6UuXJz5u
      pw5gL0qdnudtKRUfTrB2Op2JFTlKnsI0zYEIg1ooqilqo2r6Vf5xuORTyu78EE3TZt4F3N/f
      sNvjHooQ0LSoF2k4DnEUJTXHkxo3wjCk2WrhlEoDaS8Zx8mwloNk1K5DSTfvJ+MGUafG//Fk
      HhtT6IQywhI6X7vyMm9eebFbNh1HBGGI63sEUcjvvfMWVzc/I+g5ClvoI1fncRwTDX0vp/1+
      ua67J6E21ZTmum4SFul3Bq7rbluLr4z08HHhQe7AHNOFLYQYef2qN8I0TVzX3RcZ6GazST6f
      35UtO1I7gAGkRAYBc8Xi2K2i+tDu3r9PZugNGle6tX+XK+k0GhSzWYI4RvYE7vrDMFLKJEzj
      tdvYM1oxyF4VwqjhNSmPIVLyvT95G0fTOX/2HFJKTp86hSYexJHVylcZ1o+uXeX7H3/Ayxee
      Rtc1TiwfT4o0VHOY31dqPWzoJt3Hs+yWBZKCERWScRxnKuG5ceceZSt2WqapGsL2Qw5COc/d
      DJo/ug4AQEoIQ+bL5e5Wy/PIWhZGb6Wr4nr1TgfzYQ6BkF0Nl6LjkMlkqDebuL3BNoHrks9m
      aboupmUR9RJhUsotVUtq1wKDN2MYBBOTu2Hv5ktX+ykJUhL5Pl6rxdzcHEEQYNt2YiSVnsyo
      kIwK16gS7Uwmk1SiGIYxVuNn1O5cGcadJGC3f2mSer1OoVBACEG73QYgt00X9U6lJnaCygXs
      JV4/jn6huZ3yUMtA94wQSF1nY3MTSXe+ab3TIeor63rYVS9RGHbH7hWLRHHMZ+vryVQz6FZA
      1Ws1gk6HoFeiKXqjJrfEGcecY7uVvWFZqfFPGUQIwihCsywarkutVkv0fDqdTiLDPqo8UdO0
      pMcmm82iadpA0lbXdbwR5cajmqDUqnivxl/t9lUYqj9UcxDyy9Ncm9rxz5rhZPROOPIxAaFp
      xEKwvrnZ3fIJQdvzyPe8rNtrp99vkrIwgDAEIdCAvG2T7fUxRGGI1utHiHuVTbZhUCiX0TUN
      oWkEQYDn+4RCbCldHfclUTuGuM+xjCPsbdNTldQUeDBlT9f1RLZgUlJxUr5NYVkWzWYzESYb
      93wYf0+PO686p+d5ieKlECLRJlJOaHiVPU1OYic5i/6qoEmoklCVf5jm9Y4t2RTjJbEzmcyu
      cgxH3gFA940JpSQDOIbRTWD1SrUsy8LtdPZ1BSylJPZ9sr0+hWyhMJCXCIKAOI4pFovcXVnB
      NE2K+fzIkjXTMMg6DqsbGzChzE7K7txfq3ejtzY30YQgWyp1/9590EDlk1R5gKMa8kuZKUYv
      5KjmRddrNVzX5cSJE1seO66LVTEqPq5kXEY9RwgxMi7ff8xvfe+PaEeDMgcIyOgmrTigU2/y
      C1/6yaQZalwidJLhHPWatov1T2v8wzDs2oNeaGaahrNJxxz+mwrFTfPccTwSDgC6YRBVBqYM
      qxKCM0V3MM1+GD4pJQQBC+XySO8upUxKxwDyuRyWZW3bHGKbJl6vmSSOIoy+Y0dCoPeGu/RO
      gq7ryChC791k7Var21jXi/1rUpJ3HJq+n67+U4Dud0btGE3bRp+fp1Or7epYw01RuVwuqchR
      FWiqiVPX9S3CZcPGKwgCPvObmHOFLefqLe0wgu53yLKssdU5yWvV9eQ6tlvlq9cyzqBOa2iD
      IBhwcErAbi/H7Ec1war3UXU2j6pGGuesj3YOoI8wCLAsi1qtlrxYVQpWyOWIhgSTZkUUBOTG
      aJRA9yZQ2784jvGCINmdTKKQz1PMZChnsxyrVJgvl5kvl6mUSuQMozvhKwggjok8j3KhwOLC
      AqVCgWI+j6CbX8gWCpiWhd7Tb09JGYem69j5PBvV6oCg4rT0SwyIXlipXq8nci2e5yWJ2E5v
      8H273R5p/AzDYNHeRrRwLsdvfffbSQ3+pBW2UhUed82jfr8XRh1XGeqwN6BprxIQwzOVlUz3
      8Pvgum7ybzg388jsAEzLouO62KbJ2toaxWIxMXiGYVB0HOquuy+hIHOCWqmqHZZSUms00C2r
      G6LyPDITDLKqjBj1+1wuR7a3swjDELunldL/mKWlpUQ7KehtRSPSuv+UyRi90sm1ahVL15mb
      mwNIumP7V8eTKndU4jOfz2+5N9WqWCWdXdfFtu0BXR5d19GFxvjShy4+3SHrmUxmbKOXGlIz
      behmFigJiP7OYUWn0yGXy+06MR2GIZ7njWwss217IBegROhUTsTzPKIoSj6TR8YBCE0jEoKm
      6yJMk2anAzxo5MhkMnz22We4YUhlcXGsNlAUhqzeu0ccxywcO9bdJuv6yPCRlN2h63EUjYzX
      b/HuvZ8N06TjuhMdwLavt9dxOK65Rdd1CoUC+Xw+iRXWW61kSHxKykh6xQfCcaitr1MqldA0
      baBLVzmA7ZKO/SvRfkPV/7OqNGq329i2nYQvgiBAF4LtHEDQaE/UAVLlrNslR3eSAN6OUVU/
      k3IdO0F9l8d1FY+SpO5PiFuWRafT6YaMpXx0QkDQffGaZaGZJpgmDd+nWqslN2Kn02GhXOb9
      d97BH/LKURiycf8+zY0NLl24wIXz5wlaLRpra6zcvk0wYp5A6HnkHWdsI1r/ikYIQalYpNNq
      EYVh0qswS0bpGqmtuOM4LFYqRL2W+ZSUSQghKFQqNFotPM/DsqyB+0vdV8Na9P3Ytk2ntxAb
      F+pQHbS5XC5ZpavFzXy+tG3i1Dk+z4fXrgJsuR4l5bCTQTGz+G70yzNompZISAyHyKZF5VF8
      399W+mHU+zXsfJ2ezbJt+9HZASgGXmyvRLTebFIuFhNDuLy8zMfvvcfJM2ewMhlq1Sq2YXD8
      eLe78ZNr14jjmEqlwsmTJwG4dfs2oljEUBOagoByPj9xFa9qo9VKSdM0KsXi2PDOfqPmuMZp
      FVDKFAhNo9Nq4YxQ24Wu+JmSbR+FpmlJCKI//DKN8RNCYFgmcTtCs8avU3XLIpdxRl6PajLb
      6cp+LyoB/c9VP/evulWyertEM5A4T+VI+p8/7pyqIU85jVG7IuW84RFKAo9DSonvedxfXSWO
      YzKZDBcvXOCLX/wixxYWMIHLFy/y5JNPkslk+Pjjj1k8eZKl06dpuS7Xb9wgDEPOnD7dVVAM
      Q6TvM18sbhvCUW90f/bf6XUDz7oxZVJ8U/1OSkno+0SuC0HQDV2lu4GUCag4/ThDKqXE8zxc
      1yWKooH7Tz1vNwllgHMnT+PXmhMfE0cRaKOnckkpk53LfjCcyI3jmE6nM9LoqqonVRmlnr/d
      8W3bJpPJDPRUjEsgSymTkJqaj7KdvtIj7wCEpoFlEWsa91dX+fjqVd59913u3buHbdssLS2h
      aRrVapWPrl5l/sQJJNCq16lubCAMg29/+9uEYUipWCRot7v19GNCOKO2kbZtj+yMHHm94sEk
      qHjEebZb0Yz7m6qCWFhYYLFS6WooRRGyNyw+JWUkQgxE4UetPlWj03Cy0/f9Pckg67pOzphs
      wAzL5IN7tx5qWFN951Xid5zRVUZ8Unmp+hcEQTKvYCevTUUXVHmo67pjp5HBY+AAoFvvbGYy
      nD5/noWTJzlz8SKRpnHr1i2azWbSPl4ol7F6q/pcsci5ixfxXJfXXnsN0zQpFAo0Gg3kmBXN
      rG7CWq2GrutJe3673U68v+u6hGGYaK6oG6bVaiVxxv6uQ/Xcdrud1Ap7nkccx5RKJSqlEqbs
      Dh1PSRnGdBw6vYEpw6jQRDabRdf1ZPWZPLcnq9y/iJnWGUgp+cFHHxDmtw+VZvStHcfqGLNm
      UunmuPBW/3NM00wWgypHoZxop9NJyjWj3iCs3aLkOlRV0LhcymPhABSFcrn7Q68L0Q0C3nrr
      LVZWVlhYWKBRrW5JDi8eP87a2hq3bt3ixo0bXLhwgaWlpS3bsO06+KZteVcJI1W5cP/+fXK5
      HGtra1Sr1aTXYXNzE8uyWF9fT+aORlFEtVoFoNFosLa2Ri6XY2NjYyCO2B9bFEJQLBSwe41k
      KSnDSCG4c+fOlq5TpZ3fnxhWVTeNRiMpv1TsZCcQxzGfrN5DN7dPU1q6MdZB7YXtvtP93/so
      igbCsJOS3kodVIWD1Jjb/lnms8oRqiS7KuEdvqbHygH0YxgGtuPw4uuvs76xwcdXr2LncphD
      2zdN18kUCrTaba5cubKrm0o9p387ppI0wx+IGiS9sbFBPp9P6qRVPbWqve6vBVZNIcViMTmO
      WlWo50JvNkKzmZSA9VPI5dDSfEDKCHTTxC4UaLRadHoLJKW7058AVuqgqvO9v3Ko30lMk5ht
      tpr4U5aouFEw9njTnm8ahuPt/bF8VSk16TnAgOy1Chcpg79fuQoVdlI7//5reuSqgKal2Gtw
      ATh5/nz3zR/zATj5fDKOcjceU33YQRAMeGJd15NKhf5a3UKhkMwUnZ+fp9ls4jhOUkusfl5f
      X8cwDFqtFlJ2JXB1XWdtbY1MJoPjOLRareTxqh0f2FK6KqWk3WxiZrPo27TVpzxeCNGTEpeS
      lu9TazSSqrp++geqqJ3Abitp/vjjD7CKk+WbFXkrM7D63u0ibVJYp3+lr1buKswy3Gg2DnWs
      4e/efn/XlP3p791Q53xsHUA/0zRGaabJxuYmC3NzY0urtmNcuZzSRe/f9lUqlUTWdm5uLrkB
      VaIpiqKkSxMeqB/2r0KklJR7sxKEEDSbTco9zaJRN3u5VMLOZFiv1TAsK20YSxlECISuYzoO
      tWaTvOOQHdNg1d8JO2l1Puo+DIKANbeJ4WwjBdFjo9NM8mL9dfbq+P2r9Um7gUlOAB504CoD
      quL2/d3Nkxi3SzgI1Ovu7xQWQqQOYFqEpiEZbej36sHV1rl/ZaFW6qqUrd/pTFtG1v8YFSYa
      d5MLIRKdlqW5Oe6vr6P1BmKP2xmlPKYIgZHJ0AoC/CCgkMtt2Q2oZKdaJQ8z6d41TRNHGEyr
      3uXnLb759r/m9YvPohsGnd58ECkldDrdn7snRQNsw6BYeCAyN+k73R+uVfLTCsMwphpcr8Kx
      qinsYTK8+EsdwA7QehN9tpstulOUZw7DMAnTqBIwFbfb640zrilk3PUcW1igWqshejHDMAyT
      mQVxHKNrGrGU3bCYaaZO4jFENwwiKdloNCg4zkBfjDKOvu/TbreTFec0ixYhBAu5AnelP3Fx
      JaVExpLAdam7AZ0wxLFt0HUEMO6ZXhRR3dzEtiyy2ezANQ33EQCJ5tZeJnkp+YaHjbI1nU6n
      +xk97As6KkjZHes4aw/ef8P1T1RKzhlFMxkhZxgGURSNHQ4/jJSSXC+RByQJ6+EVT7vd7uqT
      hCFhHHelplNn8NgghEC3LOqdDki55V61LGtgETPtbvnKuQvcf+/7ROXRoZWg45IPNE6VFsgd
      y1MoFqee/qfpOq7v0+nNDe5f0A07KLX42Uvopr/z9jCgFBF8308dwE5Q+hmq60/dLOrGntTx
      qMow1fPUDTFJH1zFNWeB8vz1ep2bt29hmCaXLlwc69CGK5RG3cCqDFB9gYIgoN5sIlIn8Nhh
      mCb1TocwjskPrXRV6HF4dR1GEXEUdf8bx8SyO1HPNAwMXSeHTr3vOJEfEDTbFHSbp5fPsLC4
      tOvwq5XJEPR9Dyex28Ty8DF2cxw17MYwjB0vPlVEQfUSqc+g316lDmBKhBDk8nk+++wzDMNg
      rpcMVtvaarWaKCeO+qCFEKytrbG0tJQMqtF1PTlGf3moIoqimTmAgWoG28TIdquIFhcXtzxO
      Jba2q0XubzqDbuy2Ui6zsblJrOvbjqdMeYQQAsO2ccMQv1aj2BN36/7pQWe753m4vk8Qx92k
      stoV9H6WUuKHIY16HcdyiJs+G1GHgmZxZu4YC6cXkglme71edH1kZZ/6nvi+T61Wm4l0i2VZ
      O95JqCYxFUpTNf3jms2UowjDMFnAqeeppjwYlIhOv6E7wOt0KJfLSUv3/fv3EUIwPz8PkHTy
      qYYrNQjDtm2c3lzgtbW1ZIi2rus0Gg183yefzycfUH/idlYlYr7vc+36dTwiFk8sc+f6TcrH
      T411VjudLdr/3Pm5OVrtNm3PQ/RmIKc8HmiGAVJSbbUwhSDTq1hrNJuEUiKFAMNg3B2hnEGx
      XKbYa9xs90qZZ12VZlgWm/U68+UyQgju3r3b7a3J5cj0vq9eENDqzRnYS/hX07QtjXOTUEUb
      KqSmlE49zxuZfHZdF13Xk/6MSX0FA53ZN+/dkzLdrk+H51HplV4qnRNN0+h0Osmqfnl5mc8+
      +wxd11lYWOCzzz5jaWmJ9fV14jjm2LFjrKysDNTpK49cKAyOv1Mx+0mrhk6nw51PP6UyN0el
      Uhn4W7PZZH1jA93QWdusMn/iWFKvHMcxn929x6UzT5Dr27KrG2yarbGSph3HJ9c++f/bO6/v
      NpL0it/q3MggAAZReWa00s6Md+1z1n7w8YP/dD/4rI+93rPe3UmapDAMAgGCCJ27qvwAVE+j
      idAITGL9XiRBQAMEiPqqvnAvPnQ7ePHytzII3EcmqVJG6Tg/fwvXGc7Hyr4EQBTHyQyMkjqZ
      cEpRMozke7jupkysEXmmfNOF8+w1RFpIIALTOtPD8gSwAoVSCWdnZyiVSrAsC/1+H4qioFQq
      wXVdaJqGwWAwtavOjskLfR9xzHRdF8ViceoDFQgjjkW5Q8uyMHRHCDWOo/Yp4mjsNbC/u4f3
      Zydo7u+BMob9Jw8vXXvvYB9Hx8d48emnU7fPEqGbhaIoU5aXaYIggBOHOHj6CO/fvsGT558s
      vZ7kI4OMzWVuc/AXRWwAMGdttCZBbOB5YIMBSoVC0i69Kun27stPM92JNK9grqpqIgst2KRL
      UJ4AVoBTinqpBGWSU0t3xogPML0gikU+/aeYGhT/Fhoi84rIwgFo0U6bc46/f/cNGof7IIQg
      DAL0OufY2W0ubFk9fXeE37/6/FJxTqSt8nRtiNH2LF999w1qB+Mi3em7Izx9JgOA5O4RhyF4
      HEMzTRBFgUIpainJlVVJ5+TFv7PevqLJREi4XCXyBJATzhgIY1AmC2J6xy7+Lhb1OI4XLpzZ
      3f6i3ug8dQBCCJRU17Nhmtg7PFj4GM45tBkLvJClEPnKRUXoea/7l6Mj2PVKsitR5AZDclfh
      HIqmgagqwDnCFVqpZ6HrOsIwTDaC6Tz/r0/Jc8vHb4qc9c8BZww0jlFZEJFn9Q/Pum0VRNEn
      T+dAq9GAM1xsnpGlYMzubhDTm+EcGWDBvFRRp9+DnaorMGzHak8iuW4000xSRMikdddBdPJk
      8/hpttF2mhd5AliCc3EBhRCUi8W1fHw3WfjE7jtr7DyLxk4DP/zlf8EYQ6FUzNU+GtP5HgDi
      mComn4fDIfqDAeI4wsAZoVGro7HTSNrbRL9x7+ICRnE6JVRr7qDTbqO1t5fjp5ZIbi/KJD+/
      jGUaSMLPY1b6NM/3fVvIALAAGkWoV6soTPx806Q/4KvY3YprhmGI09NTPHv2bOEvnqIo+PLF
      K7x9+xYjxlDbqc+9r2AU+HMlIoQmURiG0DQNxx9OoJZsaJaFVqOKfu8CnR+/h6Eb8GkEzjh0
      VYVq6qg1G1PXsmwbvQ8dlCsVWGu2l0oktwHO2JTzmei/z9ba0psicT8xzJWeH8qeoEV6SZ4A
      bpqJ9AMmrZ6z7zK98K8bEDjniTOZ+PfxyQlCGoMYGuKJi9ei3nzGGP723TdoHuyhXF1epCKE
      QLcMeL6HYuHXrgbxC/32/TsMfRcKJ+BkXAAvWAaKkzRYtV4D6mOl0VqOGkXMGV5//RVeffEl
      9C2ZXUgkV8Hc3Tvn0FR1ancuOnCyLZie510aIIuiKHHtY4zN9Q9IrzdieE7oCG262RQNJ4SM
      3QFlF9A8OAcNArQyvfWz2PQk4DgO/vTVX1Fv7EyNa1frY+lm3/OAUYCnT59e+sXknGM4HOLn
      t29QPWjBXPHo2D35gCf7hyiVSvjl6AjtbgdcJdhpNWEXtyte5XsePrw/xouXv93qdSWSbcE5
      RxxFl4yhgElGoDidXhW5/OxiLjrphApoNiWblYQRCA8FMa/T6/VQr9fR7Xaxu7uL4XAIwzCS
      FJJoOqlWq4mzWKVSwWg0SuZ5RMHZdV2Uy2UcHR2h1WqNX9cW37uPBhrHAKUwJ2/ysm6YbUAI
      gWmZKFcqlxZ507Lw0w9vUK3VsDPxBuB8bBz9/c8/QrUM1B/ur6VS2jjYw9v2CYI3HjTLwINP
      nmzrR7rE4KKP7lkHeHllTyGRbAQhZObizzkHnyzm2dtnIWZkhDQDMG3CNC+rkFUdFUJypVIJ
      5+fn0DQNFxcXsG0bxWIRZ2dnqNfrcBwHQRAkt9m2DcuycHx8jEajkTzfcDhEoVD41VBqtbfn
      44ZGEXRCULbtZDEVLVlRFCW98Vk2PZYVCgV8/vwznHXO4CgKSpmJYAB4/sVLtHs99C568Hwf
      3d45bNvG4fOnUNTNmrkau63ld9oQzjne//wWrebVP5dEsm0IIcBkUc9+32dN4KZvEzIQeTaR
      s0TzKKVwHAeFQiGRjRE6YWKXL1rPs7VJYTfZbrdRrVan6hfALawBMErHE4Q3ZJxQKhSg6/qU
      g5CIyI7jwDTNRFp5ljzyOnz9/s8M3QAADstJREFU3beIyLjfv6Rc7jQSH2h1pz6WhyZVFJt1
      6Ia+8eJ/XZz+coxep4uXL17CdRwU1pymlEiuAj7R3pknYMg5RxwEMOvLmyvSsEnReB2ZBs45
      KpUKPM/Dzs5O4uWdNm+qVquJvLNI9zSbTYxGIwRBgHK5DMYYyuVy4knAGIPjOKhUKrdjDoBz
      jnDihgVCwOeMS1/H65g1jSsWYNu2wRhLcm2UUgRBMLPnfxUoZ9g7fIDdBwcoLMm7C/0hy7Zu
      lcb4Inrdc/z07WsoqoL2+Rm++r+/jAO9RHJLiMIQcRjOvwPniMIQ7XZ7pe96GIbJ4ryMWdcV
      MzmiOcOyLBiGkaSAhYIAYwyapsG27SRbIZ5TnBbERlaIUQK35ARA4xgqpaBRBBrHMG6gVZBR
      CiNV4c8ep4DpN04QxzH6/X6i7jlPrnURCshWXL9uK4PeBTRNRW1nH90PbQwGA/zw/XcgILDt
      Ag4OD6V0tORGWdqZRgiajcZaO/m8su5RFC0c+hRt2en09CJEhkLIzYgTQtoW8tZ86xghQBgC
      qorI96dMya+jJ5ZTitpEFhbIP40noq74gIVC5iqv+cUnn+Lr77/D7uPDa+v/vU5UXUOpVsXn
      //g7ANPiVe2TU8RRhH6vB1VVYRUK4y/ZR/g+SG4vy6wnaRjCrFRWHgY1TRNBEIBSujB4zNpw
      ZhHKwYPBALu7u/B9P5GXFgVnAElNwHEcWJYFXdfhTSSthbqw53njbqKVfporQtU0gDEUikUM
      JqkgDoBFEcIgQGFGUXSb0CiCNWm7msWySKsoypRsc7p+kAfDMFArVZbuAO4qjVYLtVTuNH3S
      iYMQvW4HRqWAs7MzqH0VznAEQ9Nx8OAQ5WpVBgPJjeI7DhprLP7ArzXEbPE1SxRFyf0XIWqP
      Ig0t2kJ1XcdgMIBpmqhWq+j3+0kK6Pz8PJkjcF032aRyzm9HACCEgKoqnDiGZhiIJlr7UNWx
      x+wVowKolMtr777TrVtCSE1U4PNe88njx/jz13/DgyeP1noNtxm7MDul5zouEFFodQvFUikZ
      MuOcw3VcnF/08O03X+Phw0fYPzwcj8jLSWLJNWNa1lbSs4kjXwZh5pInvSSUhNMqwZxzFAoF
      eJ536fmE50gaxhhs2749AQDAVA5YmDvTOL6W3PAmTZxCSiGt+29ZVvIB5c0Zcs7B+M0Uv2+K
      43fvQeMYD6rPpm4f228WUSwV0dhr4ejte7z/rz8CHPinf/4DNP3jOyVJbi+KqmLgOGhueTMq
      pnF1Xc9VJLYsa2quQIg1cs7R6XRQKpWgqiq63S5M04Rpmjg/P09uV1UVxWIRuq6j2+2iVCrJ
      SWAA4FGEZir/D0ynfealgMRRbJZzD+ccvu9PtZEuotfr4XR4jlqOyeOPBWfkoFha3g4ahSF8
      3wejDKHj4+HjqxtWk0hmQaMIKmOJI+A8xHc+vfETzn7ZzaBoEc1KvMw7Kcx9bZNrz1MXXcTH
      2XayInSSf6OUwnXdXI9Jf3iz0jzi+MUYm7JxcxwHURQlOTxBp9tJPFDvC3kWfwDQDQPlSgV2
      sYAPpyfgjCEKQwwuLsZT2xLJFaNoGqKJfEMWkZIR8g6iZTOOY7ium7RlZlmm77UIUehVFAW6
      rud28ctya1JAN4limrgYDOBOhieePHmSDF3M0vQXH26eHL+QSxYV/kKhkBR7xYSfbduIlpjI
      SABd02AYBv78P/891lQnQL2xA1CO3b39RGt92+bhEgkhBJploT8cXnIEo5QiDMNE80fTNIST
      mQKxOK/CInkJ0e8/GAySKeDRaJTUA8T6kq4ViPqF+LtY1wghMgAA4xxfzBhixlCtVqf6ZAEk
      QxfigxRDFXnbRLM9wKLTRwx1RVGEmFEZAJbg+wF+eP0ar373JR49e5q8r4wxdM86aJ+colar
      Q1NUMM7BU9Wdol1Ec3dXBgfJ2hBCEBOC/mAw1TQiRN3Su/w8tb9ZbnzierNwXReMsURVNN3Z
      02q1wDlHt9tN5gRc14VhGLAsC6PRKOkWchzn1/b11d+GjxRCoFvWlJpmWpNfDHltExFYTNNE
      fM8KwOvQ7/Xw+3/5Ax48umxw39zbRXNvd+5jPdfDu3c/Y6feHLeWSiRroKgqKOc47/dRK5eh
      qio0TRvXqFYY5pwnJS/+Puv/gyBAs9lEp9NBoVBAqVSaSiOLFFC1WkWn04FhGKhWqxiNRlAU
      BaVSKRG3FK2isgiMSQ4vCKARgkqlkuwsOefJUe4q+vOFQBSlFH//6TUOHh5u/Tkk0/R7PTCf
      orW/f2ekNCS3D845lIlNrBCLrMxQ8hVkb6eUTslIz2oimfWcaTlo0zQT6Zp+vw9r0q7qeR7K
      5TKiKEoE5IIgSHwFxAmiVqvJACAW/1qlgnjyhqX/b5axw7YQE4IX/T5GPES5stzIRbI5URii
      c9LGw0dPNhLz45PjuCENbu4lnDHwMERzZ2epUXx6/RAaYukC8Kz1ZZ420KwORXHyELl9YSwj
      0lO9Xg+UUtQncvKEjOVn7n0AYEGARq2W9NSapjmVi7sKf07hAPbml3cIghCB5+HZFy9lDeAa
      4Zyjc3SKB4ePoMiTgGRNGKUglKKR6uATC6xYiEW3jqqqCMMQjLGpdWYe27CaTc8nAbhUkL73
      AUBjDNVyOWnVFH/atp3oZWwjVcAYw7tf3qM3HIByBtO2sNNqAgBiuYu8ERhj6J60Ua3UZF1A
      sjacMSiMoT6RbhYtmaZpwnXdpEdfdObkSSdvy2d82UzBvQ8ALAzRqten3qgoipLC7zrqf2lE
      3u7N0XtUdxtyob9lcM7RP+8hdHw0W7uJrpNpWVKhVJKbKAhQmnTZiACQbhV3XTdZT+YNnF4F
      ywLAvf8NFwMc6V3+Ni0gfd/HD0fvcPBIFnhvI4QQ1Bo74Dsc553u+EivKIi7IYpWEc29vZt+
      iZI7gGYYCCd1AJEyFkqdABIDlzRXvfjneY57HwBU08RgNEI9kwLY1OhdcNHvo1q/XxO+dxFC
      CBqTlJygfXyCOIoSbSqJZB6EEIRxDCv1u5K3sJvn2us+dhn3PgBEvj9lxD6r/3bdN55zjvZ5
      B7uP5e7/LlKp13De7WJ3f/+mX4rkDqAoCobDIfr9PiqVylRWYd4awhib6jwErsf/RHDvA4Bm
      mhg6DvTUxO62gkAQBCDGvX+L7yyWbeOi3b3plyG5K0w6fVqt1pS5+6K1IwiCSwNkaT+RdU8M
      eR937+fiFUUBU1Wc9fvo9ftz37hVozJjDKftD8lYtuRuwjc4AUruF6qmASljqTxe4aqqzvQh
      F49fl7zr1b0PAMD4Q9AMAxEh6PX7W7nm6x9/AAomao37I+/8MWIWLLgZQw2JZB5E0+DkVBQG
      flX1XLTY+74P3/fheR6CIFh6zTyBRyADQAoh9uRl7NtW3f0HQYDuRQ+GKY1L7jqFYkEGAEl+
      CEEwkZfPd3eSqHzOQizkpmnCsizEcZwEBN/3554e8iIDQAZFVTHyvI1cwvr9PnZ2m8vvKLn1
      MMalJbFkJSghCFcIAqZpJkoEWYS0s6gpFItFWJaVuIOtKjWdRQaAGXBFwWA0AjA9Sp33JLC7
      uwvuRzJ3/BFAaQz9HllQcs4R5UgzSOajahocz1spc6DrOsIwTHb4nufB8zxEUTRXiUBMF2+C
      DAAzUDUNAaXwN/giPDx4gF5HdpDcdUYXg3sl0kcIgS6n1Tcmnki950XTtES8zTRN2LYN27ZR
      LBbnBhLDMBK14nWRAWAOIopnyRvVy+UyLGiIwvy/BJLbBeccCidSLE6yMkJtcxV0XZ+aHl5G
      Vhl0HWQAWEAMTEXxrLLeIggheP7sGdzz/saFGsnNcNE9R6PZuumXIbljcMag5hR92+h5tpBi
      lgFgAaqmoT8crv14AiAMAsTR7DavVdq1JNcL5xyh66NYKt30S5HcQfTUPMBVEcfxxnNGMgAs
      gBACSsjUDl4Ug/N+uHvNFtjQQ+fdEcJUTSGOYvz0zWsMB4OVXhNjDIE/diAKfFmsuyrOTj7g
      weEjyBYgyaoQRUGQsmq8KhRFWTpDsAypU7AEZTLYUSmXp27PM+ZNCMHeRE2SUor/+ON/olKr
      ghCCslVAs1rPXWBkjKFzdApL01G0C4hojP5oiL0nD5c/WLISvU4XjVpDisBJ1oZOjGCEB8BV
      IKaINzkJyACwBEII/DDErGV6FZU+VVXx7//6b1OP++bbb3O5AnVO29BB8OVvXk1Zv/31269W
      +EkkeRgNhzBVAwWZ+pFsgKrrGDgOdq7YaMgwDPi+LwPAlTI5BRQzqn2rskpOkHOOs9MPAOX4
      zdPnl2wpoygCV2R6Ypt022cwiI669ACQbAghBDEA1/Ngb9lSNotMAV0xiqLACQLYljWl2rcp
      mqaifXwKTik44wABOIByrYpRf4DnDx6hVCrNHATRdR0qlwFgW7SPT9HaacHaMMhLJAJFVRGE
      4ZUGANFqGkXRVE0gDEMUCoWlg2IyAOSEKwpc10VpQWpAVdXEEDpP6+enn3yKMAyT3l/f92Ga
      Jk5OTvD4+WcwDGPhqSFmsr10G7iOi4Jhy8VfslVWaRZZF0VRkudhjE3NEQRBAEppckLIZhEA
      GQByo6oqnDgGyaSC0rMBnU4HmqYhDEPs7++DUnppdiA9HMIYm/IcFoMdh4c5DWRiBhpTqJoc
      VNqEQeccj58+v+mXIfkIUa4oAKQDy6yFXUwUE0Kgqio8zwOdWFYKPM+TbaCroGoa4hk7+3Sk
      bzQaUFU1cQbq9XpwHAftdhuu68L3/UTzI4sY7c6T0yOE4OVnL3D09t3GglD3mYvuORqN1rW6
      MEnuBzxj9HJVzPrdJYRA07RkwTdNE3Ecw/O8RElUURQZAFbFn4g1zYJSim63C9u24TgONE0D
      pRSUUtTrdRiGAcbY3AEwQgh0Xc+tIWLbNv7hxSu03x6BUppcW5IPSikiL0TpHmn9SK4PFsew
      bomukqIoicaQUBM1TRPkrNORK8aKEGBmYTaOYxiGMVZUjKIkHxfHcZLeETUCYH5XUNYibhlx
      HMMLAhCFQFWUsTORZClRGMLQF9dZJJJN0G5IRyrvGvL/D+m6l3zbpf8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Month' width='384'>
      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
      H+cU5QEeHvtsAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Summary' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deVgUZ4LH8V8f3KcgeACKKCqoqINiHBNz6MRxjFGzHomOZjzGceJuTHZn
      EyebmDzPbnySHV2cxCOeMU48UDReeIInIreIEgE5lBu5z276qHf/cK0NEZVETIzv7/OXQnd1
      dVNV36rq7rc0QggBIiKSjvbnngEiIvp5MABERJJiAIiIJMUAEBFJigEgIpIUA0BEJCkGgIhI
      UgwAEZGkGAAiIkkxAEREkmIAiIgkxQAQEUlK/6gmfOvWLcTExAAA7OzsMGnSJOh0ugfeTwiB
      oqIiXLhwATk5OTAajfDx8cHTTz+NQYMGParZ/cnU1NQgKSkJ3377LaqqqqDX69GrVy88++yz
      6NmzZ7um0dLSgqtXryI1NRUlJSUwm83w9vZGWFgYhg0bBr3+kf1Zf3EURUFSUhLS09Mxd+7c
      H/3aGI1GHDx4EFarFQAwadIkODo6duSsPraEEMjLy0NsbCxu3LgBq9WKnj17Yty4cfD19f1R
      0zx//jyKiooAACEhIRgwYEBHzvJjrampCSkpKbh8+TIqKysBAH5+fhg1ahT69+8PjUbTrukI
      IXD58mVERUWhvLwcHh4emDhxIn71q1+1exqaRzEaqBACH374IY4cOQIAcHd3R1RUFOzs7O57
      v6amJnzxxRfYu3cvTCZTq9/pdDosWrQIf/jDH9r95B43SUlJeOedd9DQ0AAA0Gq1UBQFAGBj
      Y4NFixZhzpw5931+RqMR8+fPR1ZWljoNIQSEENBoNBgxYgQ++eQTODs7P/on9BizWq1ITk7G
      li1bcOnSJbi4uODIkSMPXAbvZcuWLVi7dq36/yNHjsDb27ujZvexVVFRgdWrV+P48eOwWCzQ
      aDS4s8mwt7fH+++/j3Hjxv2gdfLGjRuYPXs2DAYDAGDx4sWYO3fuI5n/x83NmzexcOFCVFVV
      AWi9DdDpdHjllVfwl7/85YE7y0IIbN++HatXr4bFYoGtrS1MJhN0Oh3mzJmDP//5z9BqH3yC
      55HsKiYlJeH48eN46aWXcPbs2XbfLzk5GTt37kSfPn0wadIkDB8+HHq9Hmlpafif//kfrFu3
      DiNHjkT//v0fxWw/cvX19ejSpQvmzZuHIUOGwMvLC83NzTh9+jS2bNmCNWvWYPjw4QgODr7n
      NKxWK5qbmzFt2jQ899xz8PX1hRACOTk5WLNmDeLj47Flyxa8+eabP+Eze7zk5OQgPDwciYmJ
      aiAfRnFxMbZt24awsDBUVFQgPz+/g+b08RcdHY2oqCj0798fM2fOxIABA2CxWBAdHY3Nmzdj
      +fLlGDlyJNzc3No1PSEE/v73v0Oj0eDll1/GwYMHH/EzeLwYDAbY29tj4cKFCA0NRffu3WEy
      mZCQkIANGzYgMjISoaGhGDt27H2nk56ejtWrV8PBwQEffPABQkJCkJ2djY8++ghbt25FSEgI
      nnnmmQfOT4cHwGQyYfXq1ejUqRMWL16MCxcutHsF1Ov1eP3117Fw4cJWe2r+/v4oKirC1q1b
      kZyc/IsNwMiRI/Hss8/edRoiICAA9fX12L59Oy5dunTfANjb22Pr1q13rXC+vr7o2rUrfv/7
      3yM1NVU9IpBRfHw8kpOT8fTTT2POnDl455131L2sH0pRFKxZswZmsxlvvfUWli9f3sFz+3iz
      s7PDu+++i8mTJ8PGxkb9eUBAAPLz8xEdHY20tDQ8++yz7ZpebGwszp8/j/nz56Nz587SBaBX
      r16IiIiAvb19q5/37NkTGo0Gn376KVJTUx8YgO3bt8NiseBf/uVf8MILLwAAOnfujKVLl+Ld
      d9/Ftm3b8PTTTz9wG9DhAdi/fz++/fZbLFu2DO7u7j/ovsOHD8eoUaPa/J2LiwsA/OgV+XFw
      v3PGdw75HvSa6XS6B+5teXp6SrvxB4CgoCBs2rQJgwYNgsVieahpJScnIyYmBjNmzEBgYGAH
      zeEvx+TJk9s8laDRaNTTjO3dwWtpacGqVavQrVs3vP7664iKiurQef0luN8pyPZuA8xmMxIT
      E+Hi4nJXKEaPHg0PDw9kZmaiuroanp6e951Wh34KqKqqCuvXr8fgwYPxu9/97gff39bWts2f
      FxUVISIiAhqNBsOHD3/Y2XysWK1WREdHY/fu3ejVqxfGjBnzo6Zz48YNLF++HHq9HjNnzuzg
      ufxlCQ0N7ZAPDLS0tCA8PByenp5YsGBBB8zZL8+9ziOnp6fjxIkTcHBwaPdrvX37dty8eRNv
      vfWWNG+gt8edDyqsX78enp6emDRp0n1vX1RUhObmZvj7+8PV1bXV7/R6PYKDg2EwGHDz5s0H
      PnaHHgF88cUXaGpqwptvvgm9Xg+z2fxQ0xNC4MKFC/j4449RUVGBOXPm/GJP/3xXVFQUiouL
      UVFRgZSUFBQXF2PYsGH44IMP7jo0vJeMjAwkJiaitrYW2dnZSEtLg4eHB1asWIHQ0NBH/Azk
      EBkZievXr+PDDz+Eq6vrQ7+X8CRQFAVHjhzBihUrYDAYsHTpUnh4eDzwfkVFRer7KM8///xP
      MKePt3PnziE7OxvV1dVITU1Ffn4+goKC8Ne//hVdunS5732rq6uhKAq8vLza/H3nzp0B3P7E
      4YN0WAAyMjJw8OBBTJw4ESEhIQ89vaamJqxfvx67d++GRqPB/PnzsXDhwifi1Ma+fftw+fJl
      9f+DBw/GH//4xwf+4b/r8uXLWLNmjfp/Nzc3vP7669z4d5Cqqips3rwZQ4cOxfjx43/u2Xks
      VFVVITw8HMePH4ejoyPef/99vPzyyw9cJxVFwbp162AymfD222+369MpT7qYmJhWp8ACAgKw
      YMECBAQEPPC+dz4hea/X8c6ZlPac/uyQAFitVqxcuRJOTk5YtGjRQ2+kb9y4gffffx+ZmZnw
      8fHB0qVLMXLkyI6Y1cfCsmXLUFdXh9raWmRkZODEiRNYsGABXnrpJbz33nv3PBX2Xb/97W8x
      ZMgQNDY2Ijc3FwkJCVi5ciV2796NlStXtvs7BXQ3IQTWrl2L5uZmLFmyRPrvVQghkJ6ejv/4
      j/9AWVkZBgwYgPfeew/9+vVr1/2Tk5MRHR2N6dOnS/k+SlsWLVqEadOmoa6uDtnZ2Th58iTe
      fvttjBgxAsuXL7/r1M533TlLcK8NfEtLCwC0a7ntkCX72LFjSE9PR+/evbF161b154qioLm5
      GUIIrFq1Cl5eXpg3b959p1VcXIxFixahqqoKEydOxJIlS37wm8mPu+9unEePHo158+bho48+
      wuHDhxEQEIA5c+Y8cBoeHh7qoXdYWBheffVVnDhxAh988AGWLVuGL7/8kntaP9LVq1dx6NAh
      eHh44OjRozh27Jj6u9LSUgDA+vXr4ebmhgULFjzx57PT0tKwZMkSGI1GzJ07F3Pnzm33c77z
      xq+iKKirq8OKFSvU312/fh3A7S+FVVVV4cUXX+yQswe/BN26dUO3bt0AAKNGjcKcOXOwevVq
      /OMf/8Dq1avx3nvv3fO+nTp1glarxa1bt9r8tF95eTmA/z8VdD8dEoDU1FQAQG5uLnJzc9u8
      zZ49e9CzZ8/7BsBsNmPZsmWorKzEvHnzsGjRIik2YnZ2dliwYAFOnjyJ+Pj4dgXg+zQaDcaO
      HYtNmzYhIyMD9fX1T1w4fyqXLl2CoiiorKxEREREm7c5cOAAHB0dMXv27Cc6AI2Njfjoo49g
      MBjwwQcfYOLEiT/oCL+mpgb5+fkQQqhfDP2+9PR0dQdSlgB8350vcEVGRiI+Pv6+t/X19YWT
      kxMKCwtRV1fXaj1vaWnB9evX4eDg0K5vaXdIAP793/8dS5YsuevnFosF06dPh6Io2L17t3ro
      IoRAdXU1LBYLXFxc1BUoMTERly9fxuDBg5/IjX9BQQF69OjR5u/uhPO7p38MBgPq6+uh0+nU
      j3ZWVlbC3d29zcO7hoYGVFdXQ6/Xt/rMNt3bnQ29EAKdOnWCra0tXn31VUyePLnN2y9evBjX
      rl1DREQEvL294eTk9BPP8U/rwIEDKC4uxksvvdSujX9dXR2MRiMcHBzg6uoKb29vnDhxos03
      0Pfv34/PPvsM8+fPx6xZs9r9AYhfssLCQvj4+LS5bSsqKoLRaGy1DTCZTKipqYFGo0Hnzp2h
      1Wqh1+sxYsQI9Ut6s2bNUm8fHR2NyspKDBs27IEfAQU6KAD29vZt/vHMZjM0Gg20Wi1cXFzU
      z8AqioKFCxeiuLgY7777LqZMmQIAuHjxojq9e+15BQYGYtiwYR0x2z+5v/71r3B1dcW4ceMQ
      FBQEFxcXGAwGJCUlYcOGDQCAcePGqbc/evQo/vu//xu+vr6IiIiATqfDkSNHsH//fowbNw5h
      YWHw8vKCoigoKirCli1bUFdXh+eff/6J3it9kHPnzqnnQa1WK0wmE4QQiImJUcM4cOBAdOvW
      DfX19Zg6dSpMJhM2bNiAkJAQ2Nratvk+jBBC/ay2i4uL+t2UJ1liYiKA26/jrl272rzN0KFD
      1U/nLV++HGfPnsXkyZOxdOlSdd1vi4ODA4Db6/v9znk/ST7//HOUlZVhwoQJGDhwINzd3WE2
      m5Geno4NGzZACNFqG3Dp0iUsWbIETk5O2L9/v/pazp49G+fPn8fatWthZ2eH0NBQXLt2DStX
      roROp8Mf/vCHds3Pz/LulhACVqsVFoul1Re7ysrKAAAJCQlISEho877Tpk37xQagd+/eOHbs
      GJKSkgDcfpNGURQoigK9Xo9FixbhxRdfVG+vKAosFkurN3u6deuG6upqbNy4ERs3blQ3SFar
      FRqNBkOHDsXSpUufiE9L/Vgff/yxOtbKdy1btkz994cffoiJEydCCAGz2QyLxcKPeX6PEEJ9
      z+Po0aM4evRom7d766231AC0tV7T/+vVqxfOnz+Pv/3tbwBabwO0Wi1eeeWVVqeA29oGAMCA
      AQPwr//6rwgPD8cnn3yijtGk0+nwxhtvYMSIEe2an0cyGNwdiqIgNjYWwO03Ou5srIQQuHjx
      IgwGA/r37w8fHx8AaDU63r34+Pj8Yr8LoCgKbt68iaSkJBQUFKC+vh62trbw9/fHqFGj0KtX
      r1a3Ly4uRmZmJhwdHfHUU0+pG/WqqiqkpKQgKysLVVVV0Gq18PT0RFhYGIYMGSL96Z/Y2Fj1
      COBegoKC0L17d5jNZsTGxkJRFAwbNuy+37IWQiA1NRW1tbUYNWrUE3/KQgiBhIQENDU13fd2
      ffr0UT/YkJ6ejoqKinatp3eW7969e8Pf37+jZvuxdieqSUlJyMvLQ01NDfR6PXx8fPDrX/8a
      /fr1a3V6qLq6GpcuXYJer8eoUaPuOvWbm5uLI0eOqKOB/uY3v8HAgQN/3tFAiYjo8fdkvctK
      RETtxgAQEUmKASAikhQDQEQkKQaAiEhSDAARkaTaHYC6urp7jvPzQ1RUVCAxMRHJycmoq6tr
      9/1u3bqF+vr6h3psIQQyMzPVi1E/7LSKioqQmpp6z+kVFxejsLCw1c9qa2vb/JLS9zU0NCA5
      ORklJSXtnieLxYLIyEhERUVBCIG4uDhs2rQJRqNRvU1ZWdkPfu2/Swjx0MuBxWLBlStXHvrL
      QpWVlUhMTERiYiKSkpI65O/aHgaDAcXFxT/JY92L1WrtkNfQaDQiKSlJfR1/zDU8qqurkZeX
      p/7fYDCo07t+/fov6gt21dXV7bqQSnuYTCakpaUhMzPzkX4x7tq1a62+qyGEwI0bN3Dp0qUH
      rhPtDsCxY8ewc+fOh34i8fHxKC8vh8Viwfr165GTk9Pm7QwGAzZv3vxQj/V9jY2N2LVrF86c
      OfNQ0xFCYN++fThz5gyMRqM6hMX3lZaW/qgNRUlJCTZu3AiLxYKzZ88iOzsb+fn5D7yEXmxs
      LLp3747x48ejvr4eaWlpmDdvnjoER2xsLI4fPw6z2YzIyEg0Njb+4HnrCNnZ2di+fTtu3Ljx
      UNNJTExUv6l6PydPnkRWVla7p7tz505UV1c/zKw9FLPZrA4Nci+5ubn4+uuv77n+tFdFRcU9
      l9/2qq2tbbXRLC8vV7/J/+2332Lbtm0PNf2fUlRUFCIiIh56O1dSUoKVK1eivr4eBQUFiImJ
      6aA5vFtOTg6am5vV/3/zzTdITU1FU1MTduzYcd/7tmsoCIvFAoPBgNGjRyMzMxPBwcE4ffo0
      hg8fDmdnZyQnJ6NHjx6wsbHB3r17YTab4enpienTp981LY1Gg4EDB8Lf3x89evRAXFwcAgIC
      sG/fPpSXl8PJyQmzZs3C/v37kZCQAKPRiAkTJqCqqgo+Pj6wsbFBZGQkLBYLGhsbMWvWLLi7
      u+Pw4cMoLCyEra0tJk2aBG9v77seOy0tDTNmzEBsbCyEEGhubkZCQgJeeOEF9dKML774Is6e
      PYuMjAzY2dlh9OjR6Nu3b6vp1NbWoq6uDnPnzlW/cacoCiIjI1FRUQFnZ2f1sozx8fFITU1F
      165dMXnyZFRUVEAIAXd3d+zatQuKoqC6uhpTp05VvxFdWFiIIUOG4KmnnsKIESOgKArCw8NR
      UlKCgoICzJw5E5cuXUJGRga0Wi2mT5+OlpYWHDx4EJ6enqisrMTNmzeRlZWFzZs3Y/bs2bC3
      t0dWVhYmTpwIb29vPPXUUwBubwD27dsHIQSmTp0KNzc3nDp1Cra2tmhuboZWq8VvfvMb6PV6
      nDt3DkOHDkVWVhZ69+6NpqYmREREwGg0YsyYMfD398fu3btRX1+PF154AUFBQW0uT5cvX8bi
      xYuRkZGBgIAAREVFYfz48dBqtThx4gReeOEFFBYW4ujRo9DpdOjdu3ebF8nWaDQYNGhQq4to
      HD58GCaTCSUlJfjVr36FoKAgHD9+HG5ubujRowdmzZqF1NRUJCUlwdvbG//0T/+E3NxcGAwG
      XLp0CX5+foiNjUVJSQl8fX3xyiuvYPfu3aitrYWHhwdmzJgBg8GAgoICdOrUCd988w1MJhMa
      Ghowe/ZsODs7Y8eOHVAUBU1NTQgODkZWVhZ8fX3x0ksvobi4GIcOHYJOp8Nrr70GOzs77N69
      G4qioLa2FjNmzMDZs2eRlJQEs9mMCRMmtPkt2UuXLuHNN9/EuXPn0LdvX5w6dQojRoyAk5MT
      UlJS4OvrCwcHB+zZswcmkwlubm549dVX2xyEzN/fH2FhYer/U1NTcfHiRTg5OWH69OlwcHDA
      lStXcP78eTg4OGDatGlwdnZWj7xaWlowdOjQVtPs1asXwsLC0NzcrAbgxo0bOHLkCOzs7DBj
      xgycP39eXbaio6MxevRoFBcX49ixY+pttFot4uLi0NTUBA8PD/j6+uLo0aOwWCx45plnMGTI
      EPU1BQA/Pz9MmDBBParx9vbGK6+8grq6OnXDPnr06DYvY3lnzKiQkBAUFhaiR48eOHHiBJ5/
      /nnY2toiLi4OwcHBMJlM+OabbyCEUNfr7zt8+DDeeOONu75ZHhMTA39/f8TExOC1117DiRMn
      UFZWhr59+2Ls2LEoKChAQ0MDBg4ciKtXr8LT0xMFBQUoLS1FWVkZPD09MXXqVCiKgoMHD6Kk
      pAQlJSXq+gzcHlRu/vz5cHJyUq+xnpOTo17Cc8aMGbBarbdHcRbtkJOTI86cOSOam5vF119/
      LRRFEenp6eL06dNCURSxfv16YbVaxdq1a0V5ebmwWq3is88+a3Nahw4dEgkJCeLmzZti/fr1
      4tq1a0JRFFFXVycURRFxcXHiwoULorm5WWzatEm935EjR0Rubq6or68Xn376qTAYDCInJ0cc
      PXpUxMbGiujoaGG1WsWBAwdEXl7eXY+rKIrYunWrsFgsIiIiQn28devWCbPZLLKyskR0dLTI
      zc0V27dvFxaLRaSkpIhz587dNa0rV66I06dP3zX9O9M8d+6cSEhIEElJSeLYsWPCarWK/fv3
      i/T0dJGUlCTi4+OF2WwW//mf/ykaGhpEVVWV2LFjhzqtlpYWsWXLFvG3v/1NxMbGCkVRRF5e
      njh8+LB6m/r6emG1WkVJSYn4+uuvW71GQghx69YtERER0WoeKysrxYoVK8Tq1atFdna2UBRF
      rFmzRtTX14va2lqxceNGYTQaxdtvvy3i4uKE1WoVMTEx4urVq8Jisah/5zVr1gghhPjyyy/F
      zZs3hcViEc3NzSIyMlJkZ2cLs9ks1q5dK0wm012vnclkEtu2bROKoojk5GQhhBC7d+8WpaWl
      orm5WXz55ZfCbDaLFStWiObmZmE0GsW6devaXJaioqLEf/3Xf4nVq1eLtWvXiubmZhEeHi4K
      CwuFxWIRa9euFUIIceLECZGZmSmEEKK6ulps3LhRWCwWcf78eZGQkCASExPFsmXLRGlpqVAU
      RezYsUNUVVUJIYSwWq2ivr5eKIoiDh8+LK5duyaKi4vFvn37RG1t7V3LosFgEJ9++qkwGo0i
      JiZGHD16VFitVrFhwwbR0tIiPvvsM9HU1CQqKirEV199JQwGg/j4449FU1OTKC0tFZGRkcJk
      Mon169e3+Zy//xpu3rxZWK1WdZlUFEVs2LBBmM1msX79elFSUiKsVqv4/PPPhdVqvWtaBQUF
      4quvvhJFRUWiuLhY1NfXi88//1yYzWaRn58v/vGPfwij0SjCw8OFyWQShYWFYsuWLaK0tFRs
      2rRJWCwWkZWVJU6dOqVOMz8/X7z11lvis88+E0uXLhUFBQXCYrGIv//978JoNIri4mKxc+dO
      cfLkSXHt2rVWy9aqVauEwWAQBQUFYvfu3aK+vl78+c9/FlevXhWKoqjLhNlsFqtWrRIWi0WE
      h4eLuro6YTKZ1OV53bp1wmKxiLi4OHHx4kWxf/9+ceXKFWE2m0VDQ0Obr2taWppITk4WVVVV
      Yu/evUIIIeLi4kRycrKwWq1i/fr1wmKxiFWrVomampr7buc+//xzoSiKuHbtmli9erU4dOiQ
      EEKIdevWia1btwqDwSDOnDkjzp07J6xWq9izZ4+4du2auHLlijhz5owQQogzZ86I69evi/37
      94vY2Fj1dTKZTCImJkbdNuzdu1fcunVLfezc3FzxySefiI0bN6p///DwcGE0GkV+fr7Yu3ev
      qKysFIsXLxbtOgKIi4tDWVkZrl69iry8PMyYMQNBQUHYsmULQkJC1AsUaLVaeHl5qSOAtkX8
      39WFtm7disWLF6Nfv36wWCzYu3cvmpqaUFtb22pvpC1du3aFvb09HB0doSgK8vPzMXnyZHWo
      1LY0NDTg8uXLaGxsRHV1NZydnfG73/0OgYGByM3NRVJSEqZMmYL4+HgMHz4cOp1OHbvo+5yc
      nFqd8wRuH7bv2bMHBoMBVVVVeOaZZ+Dq6go3NzdotVqEhIQgOzu71RCtXl5ecHZ2RnNzc6ux
      O2xtbTF37lwYjUYcPXoUp06darWXK4TA6dOncfPmTSiK0q4riAGAp6cn/u3f/g01NTX46quv
      MGXKFOTn56t7aNXV1RBCoE+fPurYQyNHjsSuXbtgZ2eH3r17t5pec3Mz/Pz8oNFo4ODggLy8
      PHVAv4KCAjQ1Nd11TYKsrCxkZGRg7dq1KC0tRUhICJ555hnExcXBx8cHQ4YMgdFoRJcuXeDg
      4ACLxXLPcU00Gg1ee+21Vq+Ng4MDunTpAp1Op576+q7S0lJkZ2fjiy++gNlsho+PD/z9/fHi
      iy+ia9eud92+paUFO3bsgMViQUlJCbp06dJq5Mpu3bq1WhaB2xfrsbOzg52dnbpu2NnZoaWl
      BXl5efjyyy8B3L7sqRACXbp0gaOjY7sHpMvNzcXVq1exdu1a5OfnIzc3F0FBQdi8eTMGDhyI
      Tp06qctu165dodFo7rksA0B+fj6SkpKg1WrRr18/BAYGQq/Xo0ePHjAYDKisrIS/vz9sbGzg
      4+MDs9mMvLw8hIWFQafTtbnOjRkzBhMmTFCPMOfMmYOcnBxs2rRJfV3Hjx+Pw4cPQ6vVIjAw
      UB3LfvPmzRBCqAOghYaGIjg4GBqNBrm5uYiJiYFer0dhYSHMZjNcXV3h6uoKq9UKrVaL4uJi
      5OXl4YsvvkBLSwv8/Pwwbtw4REZG4tixYxgzZsxdRyzA7e2c0WhEfHw8CgsLMXnyZISGhmLb
      tm3w9vaGr68vFEWBs7Ozulzfb8h6RVHQv39/9OnTRz2dbWNjgylTpsDe3h75+fmYOnUqtFot
      QkNDkZOTo14k5rs0Gg169OgBnU4HR0dH9f3HadOmQaPR3DX2V0BAAN555x2Ul5dj06ZNeOON
      N5CdnY1Nmza1Wr7CwsIefArozuh+f/nLX6DRaNSLGQcHB8Pd3R1HjhzBc889B+D2hun69etw
      dHRUB3UzmUywsbFRV+I7Fy6ZNm0aNm3aBB8fH9TU1KBz5854/fXXER8fj8bGRuh0OvWQ7EH6
      9u2L48ePY+zYscjOzm7z1ENaWhoWLVqEvn37QgihDr06fPhw7N27F1qtFk5OTggMDMSRI0fQ
      pUsXXLt2DT4+PlAUBVarVX2hfX19sWfPHjz33HNwcXGB0WhEUVERunfvjnHjxiE2NlZdeIUQ
      UBQFycnJGDx4cLveyK6srISDgwMcHR0xePBgpKamwsbGBgaDAUIItLS0oLS0FP/8z/+MkpKS
      B743cEdxcTG8vb3h7u6OXr16wWg0wt/fH/Pnz4etra067vh3/153huy9cOHCXYe6Dg4OuHXr
      Fry8vGCxWODj44PnnnsO3bp1Q21tLZydne+ah/T0dHzwwQdwcnLCxYsXkZGRgcGDB6OyshK1
      tbX4/e9/D51Oh5KSEpSXl6OyshJGoxFCCJhMpjY36g9iZ2enbmw9PT0REhKCmTNnQlEUNDQ0
      ICcnp9VKZGtri6amJnTq1Ek95Tlq1Kh7XtCkvWxtbdG7d2/88Y9/hF6vV1/v79NoNK2W/e/f
      5vLly3j//ffh4uKCpqYm7Nu3D3369IG7uzuOHz+O0aNHA7i9ccrMzISbm5t6lSiTyQS9Xt9q
      wzV06FC8/PLLAG7vKJ06dQpWqxVlZWWwtbVVT0NYrVZUVlZCp9OhS5cuSEtLwzYinCsAAA1k
      SURBVMCBA+/5XpJGo4GbmxuamppgY2ODvn374k9/+hO0Wi1qamrg6uoKo9GICxcuYMaMGbCz
      s0O/fv2wcOFCaLVa9YMK310eY2NjsWjRIgBAeHg4bGxsUFtbi6KiIhgMBjQ0NMDb2xvBwcGY
      M2cOrFYrmpqaYDabMWfOHHXd/34AzGYzHBwc1EvaHj16FAUFBfD394ednR3OnDmD8ePHQ6/X
      o7GxUd35ujOP39/OBQQE4MKFC3j66adhtVrVv6VWq1Vj3KNHD2RkZCAsLAzp6ekIDAxU//aK
      oqiD6rXF1dUVhYWF6NOnDxoaGlr9rqioCN26dYO3tze8vLyg0+nQv39//OlPf4JGo0FdXR2E
      ELCxsYHuo48++qjNR/g/d0ab9PPzA3D7MmMZGRno3bs33N3dkZqairFjx0Kj0SAoKAgXLlxA
      ZWUlmpqaMHLkSHz99dcIDAxU91Krq6vRuXNndO7cGcHBwTh06BDCwsIQHx+PpKQkmEwm+Pj4
      wM/PD6WlpYiOjoafnx8sFgs8PT3h4OCA6upq9O7dG2azGQaDAWFhYaiurkZiYiL0ej169eqF
      Tp06tXoeGRkZCA0NhU6nUy+s4uvrC2dnZ1y5cgXDhg2Dt7c33NzcYGtri9OnT8PR0RHOzs5w
      cHDAiRMnEBwcDOD21XsCAgKwa9cuJCcnw2g0IiQkBLGxsepz8PPzg5ubGy5evIj4+Hj4+Phg
      +PDhaGxshK2tLTp37ozy8nL07dsXVqsVNTU16migdXV12LVrF5KSklBeXo4pU6bAzc0NycnJ
      SEpKwoABA1BWVobTp0+jpqYGHh4e6Nu3L2pqauDp6QkXFxeYzWY0NDS0On+cl5eHffv2ITk5
      GR4eHhgxYgS6d++OHTt2ICUlBWazGb169cKtW7dave9ha2uL0tJShIWFQaPRoKysDP369UOf
      Pn2wZ88eJCYmws3NDSNGjMDevXuRkJCA4uJiBAcHt9rzFELg5s2bGDBggHqBi4yMDAQGBsJo
      NEKj0SA4OBharVaNuk6nQ21tLUJDQ7F58+ZWQ4FXV1fj5MmTSE1NRXJyMvr06YPa2loEBgZC
      q9WirKwMgYGB8PLywoEDB5Cbm4uwsDDU1NQgKioKaWlp8PX1hV6vh52dnXoJva5du2Lnzp0o
      KytTL7yRkpICRVEQEBAAFxcXNDc3qzsv310Wu3fvjoqKCgQGBqKhoQGOjo7w8PDArVu3EBAQ
      AE9PT0RERCAlJQU6nQ6+vr7q7a1WK2praxEQEIDy8nKcPHkSvr6+rY44hBDIz89XR3y0sbFB
      fn4++vfvj06dOrVaH4ODg3Hx4kWUlpbCYDDgqaeeQmRkJHx8fNSwt7S0wGg0quu3nZ0drFYr
      9u/fj/z8fMyYMQMODg7Q6/XYt28fcnJyMH36dHTt2hWZmZk4deoUqqur0bNnT3Xv9c6R65Ur
      V5CYmIhx48aha9eucHFxQUREBFJTU2FnZwc/Pz/o9XpUVVUhNDQUGo0GLi4u2LNnD1JSUmBv
      b4+uXbuq6/udZXHv3r24fv06XF1dMXjwYAQFBeHUqVNoaWlBQ0MDnn32WdTW1uLw4cNIS0tD
      9+7dUV9fj8jISCQnJ2PMmDHw8vJqtX0oLi6Gq6ur+hw8PDxw/fp1+Pv7w9HREbm5uRg1apT6
      up4+fRrNzc1oaGjAiBEjsHXrVgwYMEA9GgoICEB6ejpiYmKQlpaGsLAwdO/eHeXl5QgICIBe
      r4efnx/Onz+Pc+fOwcPDA7/+9a/h4uKC6OhopKWlwWq1IigoCCaTSb340K1bt+Dv74+AgAAc
      OHAAKSkpMJlMCAkJUUenTUlJQVRUFFJTUxESEoLAwEA4OjoiMjISqampcHR0hLe3N+rr6zt2
      NNDY2FjY29ujrq4ON27cwPz58ztq0vdVUFCAnJwcdQ/ozTff/NFXaqqpqUF8fDy6d++OkydP
      YubMmejevXsHzzHdj6IoOHHiBLp164asrCy4urrit7/97c89W784Fy9ehF6vR1NTEzIzM9U9
      5ydNdHQ0PD09UVRUhJaWFkydOvWRPZYQAmfOnFGPqmpqatQPfPwSdWgAGhsbcfXqVdjZ2WHQ
      oEHtuip9R7BarcjMzERNTQ0GDRp03zHdH0RRFOTl5aG0tBR9+/aFt7e31BdX+TkIIVBVVYXM
      zEx4eXmpe/T0wzQ3NyM9PR02NjYICQl5Yq8TUVNTg2+//RZubm7qEeSjVF9fj6tXr8LZ2RkD
      Bgy47/srjzteD4CISFLcrSIikhQDQEQkKQaAiEhSDAARkaQYACIiSTEARESSYgCIiCTFABAR
      SYoBICKSFANARCQpBoCISFIMABGRpBgAIiJJMQBERJJiAIiIJMUAEBFJigEgIpIUA0BEJCkG
      gIhIUgwAEZGkGAAiIkkxAEREkmIAiIgkxQAQEUmKASAikhQDQEQkKQaAiEhSDAARkaQYACIi
      STEARESSYgCIiCTFABARSYoBICKSFANARCQpBoCISFIMABGRpBgAIiJJMQBERJJiAIiIJMUA
      EBFJigEgIpIUA0BEJCkGgIhIUgwAEZGkGAAiIkkxAEREkmIAiIgkxQAQEUmKASAikhQDQEQk
      KQaAiEhSDAARkaQYACIiSTEARESSYgCIiCTFABARSYoBICKSFANARCQpBoCISFIMABGRpBgA
      IiJJMQBERJJiAIiIJMUAEBFJigEgIpIUA0BEJCkGgIhIUgwAEZGkGAAiIkkxAEREkmIAiIgk
      xQAQEUmKASAikhQDQEQkKQaAiEhSDAARkaQYACIiSTEARESSYgCIiCTFABARSYoBICKSFANA
      RCQpBoCISFIMABGRpBgAIiJJMQBERJJiAIiIJMUAEBFJigEgIpIUA0BEJCkGgIhIUgwAEZGk
      GAAiIkkxAEREkmIAiIgkxQAQEUmKASAikhQDQEQkKQaAiEhSDAARkaQYACIiSTEARESSYgCI
      iCTFABARSYoBICKSFANARCQpBoCISFIMABGRpBgAIiJJMQBERJJiAIiIJMUAEBFJigEgIpIU
      A0BEJCkGgIhIUgwAEZGkGAAiIkkxAEREkmIAiIgkxQAQEUmKASAikhQDQEQkKQaAiEhSDAAR
      kaQYACIiSTEARESSYgCIiCTFABARSYoBICKSFANARCQpBoCISFIMABGRpBgAIiJJMQBERJJi
      AIiIJMUAEBFJigEgIpIUA0BEJCkGgIhIUgwAEZGkGAAiIkkxAEREkmIAiIgkxQAQEUmKASAi
      khQDQEQkKQaAiEhSDAARkaQYACIiSTEARESSYgCIiCTFABARSYoBICKSFANARCQpBoCISFIM
      ABGRpBgAIiJJMQBERJJiAIiIJMUAEBFJigEgIpIUA0BEJCkGgIhIUgwAEZGkGAAiIkkxAERE
      kmIAiIgkxQAQEUmKASAikhQDQEQkKQaAiEhSDAARkaQYACIiSTEARESSYgCIiCTFABARSYoB
      ICKSFANARCQpBoCISFIMABGRpBgAIiJJMQBERJJiAIiIJMUAEBFJigEgIpIUA0BEJCkGgIhI
      UgwAEZGkGAAiIkkxAEREkmIAiIgkxQAQEUmKASAikhQDQEQkKQaAiEhSDAARkaQYACIiSTEA
      RESSYgCIiCTFABARSYoBICKSFANARCQpBoCISFIMABGRpBgAIiJJMQBERJJiAIiIJMUAEBFJ
      igEgIpIUA0BEJCkGgIhIUgwAEZGkGAAiIkkxAEREkmIAiIgkxQAQEUmKASAikhQDQEQkKQaA
      iEhSDAARkaQYACIiSTEARESSYgCIiCTFABARSYoBICKSFANARCQpBoCISFIMABGRpBgAIiJJ
      MQBERJJiAIiIJMUAEBFJigEgIpIUA0BEJCkGgIhIUgwAEZGkGAAiIkkxAEREkmIAiIgkxQAQ
      EUmKASAikhQDQEQkKQaAiEhSDAARkaQYACIiSTEARESSYgCIiCTFABARSYoBICKSFANARCQp
      BoCISFIMABGRpBgAIiJJMQBERJJiAIiIJMUAEBFJigEgIpIUA0BEJCkGgIhIUgwAEZGkGAAi
      IkkxAEREkmIAiIgkxQAQEUmKASAikhQDQEQkKQaAiEhSDAARkaQYACIiSTEARESSYgCIiCTF
      ABARSYoBICKSFANARCQpBoCISFIMABGRpBgAIiJJMQBERJJiAIiIJMUAEBFJigEgIpIUA0BE
      JCkGgIhIUgwAEZGkGAAiIkkxAEREkmIAiIgkxQAQEUmKASAikhQDQEQkKQaAiEhSDAARkaQY
      ACIiSTEARESSYgCIiCTFABARSYoBICKSFANARCQpBoCISFIMABGRpBgAIiJJMQBERJJiAIiI
      JMUAEBFJigEgIpIUA0BEJCkGgIhIUgwAEZGkGAAiIkkxAEREkmIAiIgkxQAQEUmKASAikhQD
      QEQkKQaAiEhSDAARkaQYACIiSTEARESSYgCIiCTFABARSYoBICKSFANARCQpBoCISFIMABGR
      pBgAIiJJMQBERJJiAIiIJMUAEBFJigEgIpIUA0BEJCkGgIhIUgwAEZGkGAAiIkkxAEREkmIA
      iIgkxQAQEUmKASAikhQDQEQkKQaAiEhS/wuy6v8MGz7BngAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
